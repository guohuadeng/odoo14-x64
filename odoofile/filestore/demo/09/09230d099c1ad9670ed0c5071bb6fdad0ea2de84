
/* /base/static/src/js/res_config_settings.js defined in bundle 'web.assets_backend' */
odoo.define('base.settings',function(require){"use strict";var BasicModel=require('web.BasicModel');var core=require('web.core');var FormView=require('web.FormView');var FormController=require('web.FormController');var FormRenderer=require('web.FormRenderer');var view_registry=require('web.view_registry');var QWeb=core.qweb;var _t=core._t;var BaseSettingRenderer=FormRenderer.extend({events:_.extend({},FormRenderer.prototype.events,{'click .tab':'_onSettingTabClick','keyup .searchInput':'_onKeyUpSearch',}),init:function(){this._super.apply(this,arguments);this.activeView=false;this.activeTab=false;},confirmChange:function(){var self=this;return this._super.apply(this,arguments).then(function(){if(!self.$(".o_dirty_warning").length){self.$('.o_statusbar_buttons').append($('<span/>',{text:_t("Unsaved changes"),class:'text-muted ml-2 o_dirty_warning'}))}});},on_attach_callback:function(){this._super.apply(this,arguments);this.searchInput.focus();},_initModules:function(){var self=this;this.modules=[];_.each(this.$('.app_settings_block'),function(settingView,index){var group=!$(settingView).hasClass('o_invisible_modifier');var isNotApp=$(settingView).hasClass('o_not_app');if(group&&!isNotApp){var data=$(settingView).data();data.string=$(settingView).attr('string')||data.string;self.modules.push({key:data.key,string:data.string,imgurl:self._getAppIconUrl(data.key),});}else{$(settingView).remove();}});},_initSearch:function(){this.searchInput=this.$('.searchInput');if(this.searchText){this.searchInput.val(this.searchText);this._onKeyUpSearch();}else{this.searchText="";}},_currentAppIndex:function(){var self=this;var index=_.findIndex(this.modules,function(module){return module.key===self.activeSettingTab;});return index;},_getAppIconUrl:function(module){return module==="general_settings"?"/base/static/description/settings.png":"/"+module+"/static/description/icon.png";},_getSearchHeader:function(imgurl,string){return $(QWeb.render('BaseSetting.SearchHeader',{imgurl:imgurl,string:string}));},_moveToTab:function(index){this.currentIndex=!index||index===-1?0:(index===this.modules.length?index-1:index);if(this.currentIndex!==-1){if(this.activeView){this.activeView.addClass("o_hidden");}
if(this.activeTab){this.activeTab.removeClass("selected");}
var view=this.modules[this.currentIndex].settingView;var tab=this.$(".tab[data-key='"+this.modules[this.currentIndex].key+"']");view.removeClass("o_hidden");this.activeView=view;this.activeTab=tab;tab.addClass("selected");}},_onSettingTabClick:function(event){this.searchInput.focus();if(this.searchText.length>0){this.searchInput.val('');this.searchText="";this._searchSetting();}
var settingKey=this.$(event.currentTarget).data('key');this._moveToTab(_.findIndex(this.modules,function(m){return m.key===settingKey;}));},_onKeyUpSearch:function(event){this.searchText=this.searchInput.val();this.activeTab.removeClass('selected');this._searchSetting();},_resetSearch:function(){this.searchInput.val("");_.each(this.modules,function(module){module.settingView.addClass('o_hidden');module.settingView.find('.o_setting_box').removeClass('o_hidden');module.settingView.find('h2').removeClass('o_hidden');module.settingView.find('.settingSearchHeader').addClass('o_hidden');module.settingView.find('.o_settings_container').addClass('mt16');});this.activeTab.removeClass('o_hidden').addClass('selected');this.activeView.removeClass('o_hidden');},_render:function(){var self=this;return this._super.apply(this,arguments).then(function(){self._initModules();self._renderLeftPanel();self._initSearch();});},_renderLeftPanel:function(){var self=this;_.each(this.modules,function(module){module.settingView=self.$('.app_settings_block[data-key="'+module.key+'"]');module.settingView.addClass("o_hidden");module.settingView.prepend(self._getSearchHeader(module.imgurl,module.string));});this._renderTabs();this._moveToTab(this.currentIndex||this._currentAppIndex());},_renderTabs:function(){var tabs=$(QWeb.render('BaseSetting.Tabs',{tabItems:this.modules}));tabs.appendTo(this.$(".settings_tab"));},_searchSetting:function(){var self=this;this.count=0;_.each(this.modules,function(module){self.inVisibleCount=0;module.settingView.find('.o_setting_box').addClass('o_hidden');module.settingView.find('h2').addClass('o_hidden');module.settingView.find('.settingSearchHeader').addClass('o_hidden');module.settingView.find('.o_settings_container').removeClass('mt16');var resultSetting=module.settingView.find(".o_form_label:containsTextLike('"+self.searchText+"')");if(resultSetting.length>0){resultSetting.each(function(){var settingBox=$(this).closest('.o_setting_box');if(!settingBox.hasClass('o_invisible_modifier')){settingBox.removeClass('o_hidden');$(this).html(self._wordHighlighter($(this).html(),self.searchText));}else{self.inVisibleCount++;}});if(self.inVisibleCount!==resultSetting.length){module.settingView.find('.settingSearchHeader').removeClass('o_hidden');module.settingView.removeClass('o_hidden');}}else{++self.count;}});this.count===_.size(this.modules)?this.$('.notFound').removeClass('o_hidden'):this.$('.notFound').addClass('o_hidden');if(this.searchText.length===0){this._resetSearch();}},_wordHighlighter:function(text,word){if(text.indexOf('highlighter')!==-1){text=text.replace('<span class="highlighter">',"");text=text.replace("</span>","");}
var match=text.search(new RegExp(word,"i"));word=text.substring(match,match+word.length);var highlightedWord="<span class='highlighter'>"+word+'</span>';return text.replace(word,highlightedWord);},});var BaseSettingController=FormController.extend({custom_events:_.extend({},FormController.prototype.custom_events,{button_clicked:'_onButtonClicked',}),init:function(){this._super.apply(this,arguments);this.disableAutofocus=true;this.renderer.activeSettingTab=this.initialState.context.module;},willRestore:function(){this.mode='edit';},_onButtonClicked:function(ev){var self=this;if(ev.data.attrs.name!=='execute'&&ev.data.attrs.name!=='cancel'){var recordID=ev.data.recordID;var _super=this._super;var args=arguments;this._discardChanges(recordID,{noAbandon:true}).then(function(){_super.apply(self,args);});}else{this._super.apply(this,arguments);}},});var BaseSettingsModel=BasicModel.extend({save:function(recordID){var self=this;return this._super.apply(this,arguments).then(function(result){delete self.localData[recordID].res_id;return result;});},});var BaseSettingView=FormView.extend({jsLibs:[],config:_.extend({},FormView.prototype.config,{Model:BaseSettingsModel,Renderer:BaseSettingRenderer,Controller:BaseSettingController,}),});view_registry.add('base_settings',BaseSettingView);return{Model:BaseSettingsModel,Renderer:BaseSettingRenderer,Controller:BaseSettingController,};});;

/* /web/static/lib/jquery.scrollTo/jquery.scrollTo.js defined in bundle 'web.assets_backend' */
;(function(define){'use strict';define(['jquery'],function($){var $scrollTo=$.scrollTo=function(target,duration,settings){return $(window).scrollTo(target,duration,settings);};$scrollTo.defaults={axis:'xy',duration:0,limit:true};$scrollTo.window=function(scope){return $(window)._scrollable();};$.fn._scrollable=function(){return this.map(function(){var elem=this,isWin=!elem.nodeName||$.inArray(elem.nodeName.toLowerCase(),['iframe','#document','html','body'])!=-1;if(!isWin)
return elem;var doc=(elem.contentWindow||elem).document||elem.ownerDocument||elem;return/webkit/i.test(navigator.userAgent)||doc.compatMode=='BackCompat'?doc.body:doc.documentElement;});};$.fn.scrollTo=function(target,duration,settings){if(typeof duration=='object'){settings=duration;duration=0;}
if(typeof settings=='function')
settings={onAfter:settings};if(target=='max')
target=9e9;settings=$.extend({},$scrollTo.defaults,settings);duration=duration||settings.duration;settings.queue=settings.queue&&settings.axis.length>1;if(settings.queue)
duration/=2;settings.offset=both(settings.offset);settings.over=both(settings.over);return this._scrollable().each(function(){if(target==null)return;var elem=this,$elem=$(elem),targ=target,toff,attr={},win=$elem.is('html,body');switch(typeof targ){case'number':case'string':if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(targ)){targ=both(targ);break;}
targ=win?$(targ):$(targ,this);if(!targ.length)return;case'object':if(targ.is||targ.style)
toff=(targ=$(targ)).offset();}
var offset=$.isFunction(settings.offset)&&settings.offset(elem,targ)||settings.offset;$.each(settings.axis.split(''),function(i,axis){var Pos=axis=='x'?'Left':'Top',pos=Pos.toLowerCase(),key='scroll'+Pos,old=elem[key],max=$scrollTo.max(elem,axis);if(toff){attr[key]=toff[pos]+(win?0:old-$elem.offset()[pos]);if(settings.margin){attr[key]-=parseInt(targ.css('margin'+Pos))||0;attr[key]-=parseInt(targ.css('border'+Pos+'Width'))||0;}
attr[key]+=offset[pos]||0;if(settings.over[pos])
attr[key]+=targ[axis=='x'?'width':'height']()*settings.over[pos];}else{var val=targ[pos];attr[key]=val.slice&&val.slice(-1)=='%'?parseFloat(val)/100*max:val;}
if(settings.limit&&/^\d+$/.test(attr[key]))
attr[key]=attr[key]<=0?0:Math.min(attr[key],max);if(!i&&settings.queue){if(old!=attr[key])
animate(settings.onAfterFirst);delete attr[key];}});animate(settings.onAfter);function animate(callback){$elem.animate(attr,duration,settings.easing,callback&&function(){callback.call(this,targ,settings);});}}).end();};$scrollTo.max=function(elem,axis){var Dim=axis=='x'?'Width':'Height',scroll='scroll'+Dim;if(!$(elem).is('html,body'))
return elem[scroll]-$(elem)[Dim.toLowerCase()]();var size='client'+Dim,html=elem.ownerDocument.documentElement,body=elem.ownerDocument.body;return Math.max(html[scroll],body[scroll])-Math.min(html[size],body[size]);};function both(val){return $.isFunction(val)||$.isPlainObject(val)?val:{top:val,left:val};}
return $scrollTo;})}(typeof define==='function'&&define.amd?define:function(deps,factory){if(typeof module!=='undefined'&&module.exports){module.exports=factory(require('jquery'));}else{factory(jQuery);}}));;

/* /web/static/lib/fuzzy-master/fuzzy.js defined in bundle 'web.assets_backend' */
(function(){var root=this;var fuzzy={};if(typeof exports!=='undefined'){module.exports=fuzzy;}else{root.fuzzy=fuzzy;}
fuzzy.simpleFilter=function(pattern,array){return array.filter(function(string){return fuzzy.test(pattern,string);});};fuzzy.test=function(pattern,string){return fuzzy.match(pattern,string)!==null;};fuzzy.match=function(pattern,string,opts){opts=opts||{};var patternIdx=0,result=[],len=string.length,totalScore=0,currScore=0,pre=opts.pre||'',post=opts.post||'',compareString=opts.caseSensitive&&string||string.toLowerCase(),ch,compareChar;pattern=opts.caseSensitive&&pattern||pattern.toLowerCase();for(var idx=0;idx<len;idx++){ch=string[idx];if(compareString[idx]===pattern[patternIdx]){if(pattern[patternIdx]===' '){currScore=1-idx/200;}else{currScore+=1+currScore-idx/200;}
ch=pre+ch+post;patternIdx+=1;}else{currScore=0;}
totalScore+=currScore;if(compareString[idx]===' '){currScore=0;}
result[result.length]=ch;}
if(patternIdx===pattern.length){return{rendered:result.join(''),score:totalScore};}
return null;};fuzzy.filter=function(pattern,arr,opts){if(!arr||arr.length===0){return[]}
if(typeof pattern!=='string'){return arr}
opts=opts||{};return arr.reduce(function(prev,element,idx,arr){var str=element;if(opts.extract){str=opts.extract(element);}
var rendered=fuzzy.match(pattern,str,opts);if(rendered!=null){prev[prev.length]={string:rendered.rendered,score:rendered.score,index:idx,original:element};}
return prev;},[]).sort(function(a,b){var compare=b.score-a.score;if(compare)return compare;return a.index-b.index;});};}());;

/* <inline asset> defined in bundle 'web.assets_backend' */
odoo._modules=["base","web","auth_totp","base_import","odoo_referral","web_editor","web_kanban_gauge","web_tour"];;

/* /web/static/lib/py.js/lib/py.js defined in bundle 'web.assets_backend' */
var py={};(function(py){var create=function(o,props){function F(){}
F.prototype=o;var inst=new F;if(props){for(var name in props){if(!props.hasOwnProperty(name)){continue;}
inst[name]=props[name];}}
return inst;};var symbols={};var comparators={};var Base={nud:function(){throw new Error(this.id+" undefined as prefix");},led:function(led){throw new Error(this.id+" undefined as infix");},toString:function(){if(this.id==='(constant)'||this.id==='(number)'||this.id==='(name)'||this.id==='(string)'){return[this.id.slice(0,this.id.length-1),' ',this.value,')'].join('');}else if(this.id==='(end)'){return'(end)';}else if(this.id==='(comparator)'){var repr=['(comparator',this.expressions[0]];for(var i=0;i<this.operators.length;++i){repr.push(this.operators[i],this.expressions[i+1]);}
return repr.join(' ')+')';}
var out=[this.id,this.first,this.second,this.third].filter(function(r){return r}).join(' ');return'('+out+')';}};function symbol(id,bp){bp=bp||0;var s=symbols[id];if(s){if(bp>s.lbp){s.lbp=bp;}
return s;}
return symbols[id]=create(Base,{id:id,lbp:bp});}
function constant(id){var s=symbol(id);s.id='(constant)';s.value=id;s.nud=function(){return this;};}
function prefix(id,bp,nud){symbol(id).nud=nud||function(){this.first=expression(bp);return this}}
function infix(id,bp,led){symbol(id,bp).led=led||function(left){this.first=left;this.second=expression(bp);return this;}}
function infixr(id,bp){symbol(id,bp).led=function(left){this.first=left;this.second=expression(bp-1);return this;}}
function comparator(id){comparators[id]=true;var bp=60;infix(id,bp,function(left){this.id='(comparator)';this.operators=[id];this.expressions=[left,expression(bp)];while(token.id in comparators){this.operators.push(token.id);advance();this.expressions.push(expression(bp));}
return this;});}
constant('None');constant('False');constant('True');symbol('(number)').nud=function(){return this;};symbol('(name)').nud=function(){return this;};symbol('(string)').nud=function(){return this;};symbol('(end)');symbol(':');symbol(')');symbol(']');symbol('}');symbol(',');symbol('else');infix('=',10,function(left){if(left.id!=='(name)'){throw new Error("Expected keyword argument name, got "+token.id);}
this.first=left;this.second=expression();return this;});symbol('lambda',20).nud=function(){this.first=[];if(token.id!==':'){for(;;){if(token.id!=='(name)'){throw new Error('Excepted an argument name');}
this.first.push(token);advance();if(token.id!==','){break;}
advance(',');}}
advance(':');this.second=expression();return this;};infix('if',20,function(left){this.ifTrue=left;this.condition=expression();advance('else');this.ifFalse=expression();return this;});infixr('or',30);infixr('and',40);prefix('not',50);comparator('in');comparator('not in');comparator('is');comparator('is not');comparator('<');comparator('<=');comparator('>');comparator('>=');comparator('<>');comparator('!=');comparator('==');infix('|',70);infix('^',80);infix('&',90);infix('<<',100);infix('>>',100);infix('+',110);infix('-',110);infix('*',120);infix('/',120);infix('//',120);infix('%',120);prefix('-',130);prefix('+',130);prefix('~',130);infixr('**',140);infix('.',150,function(left){if(token.id!=='(name)'){throw new Error('Expected attribute name, got '+token.id);}
this.first=left;this.second=token;advance();return this;});symbol('(',150).nud=function(){this.first=[];var comma=false;if(token.id!==')'){while(true){if(token.id===')'){break;}
this.first.push(expression());if(token.id!==','){break;}
comma=true;advance(',');}}
advance(')');if(!this.first.length||comma){return this;}else{return this.first[0];}};symbol('(').led=function(left){this.first=left;this.second=[];if(token.id!==")"){for(;;){this.second.push(expression());if(token.id!==','){break;}
advance(',');}}
advance(")");return this;};infix('[',150,function(left){this.first=left;this.second=expression();advance("]");return this;});symbol('[').nud=function(){this.first=[];if(token.id!==']'){for(;;){if(token.id===']'){break;}
this.first.push(expression());if(token.id!==','){break;}
advance(',');}}
advance(']');return this;};symbol('{').nud=function(){this.first=[];if(token.id!=='}'){for(;;){if(token.id==='}'){break;}
var key=expression();advance(':');var value=expression();this.first.push([key,value]);if(token.id!==','){break;}
advance(',');}}
advance('}');return this;};py.tokenize=(function(){function group(){return'('+Array.prototype.join.call(arguments,'|')+')';}
var Whitespace='[ \\f\\t]*';var Name='[a-zA-Z_]\\w*';var DecNumber='\\d+(L|l)?';var IntNumber=DecNumber;var PointFloat=group('\\d+\\.\\d*','\\.\\d+');var FloatNumber=PointFloat;var Number=group(FloatNumber,IntNumber);var Operator=group("\\*\\*=?",">>=?","<<=?","<>","!=","//=?","[+\\-*/%&|^=<>]=?","~");var Bracket='[\\[\\]\\(\\)\\{\\}]';var Special='[:;.,`@]';var Funny=group(Operator,Bracket,Special);var ContStr=group("([uU])?'([^\n'\\\\]*(?:\\\\.[^\n'\\\\]*)*)'",'([uU])?"([^\n"\\\\]*(?:\\\\.[^\n"\\\\]*)*)"');var PseudoToken=Whitespace+group(Number,Funny,ContStr,Name);var number_pattern=new RegExp('^'+Number+'$');var string_pattern=new RegExp('^'+ContStr+'$');var name_pattern=new RegExp('^'+Name+'$');var strip=new RegExp('^'+Whitespace);return function tokenize(s){var max=s.length,tokens=[],start,end;var pseudoprog=new RegExp(PseudoToken,'g');while(pseudoprog.lastIndex<max){var pseudomatch=pseudoprog.exec(s);if(!pseudomatch){if(/^\s+$/.test(s.slice(end))){break;}
throw new Error('Failed to tokenize <<'+s
+'>> at index '+(end||0)
+'; parsed so far: '+tokens);}
start=pseudomatch.index;end=pseudoprog.lastIndex;var token=s.slice(start,end).replace(strip,'');if(number_pattern.test(token)){tokens.push(create(symbols['(number)'],{value:parseFloat(token)}));}else if(string_pattern.test(token)){var m=string_pattern.exec(token);tokens.push(create(symbols['(string)'],{value:PY_decode_string_literal(m[3]!==undefined?m[3]:m[5],!!(m[2]||m[4]))}));}else if(token in symbols){var symbol;if(token==='in'&&tokens.length>1&&tokens[tokens.length-1].id==='not'){symbol=symbols['not in'];tokens.pop();}else if(token==='not'&&tokens.length>1&&tokens[tokens.length-1].id==='is'){symbol=symbols['is not'];tokens.pop();}else{symbol=symbols[token];}
tokens.push(create(symbol));}else if(name_pattern.test(token)){tokens.push(create(symbols['(name)'],{value:token}));}else{throw new Error("Tokenizing failure of <<"+s+">> at index "+start
+" for token [["+token+"]]"
+"; parsed so far: "+tokens);}}
tokens.push(create(symbols['(end)']));return tokens;}})();var token,next;function expression(rbp){rbp=rbp||0;var t=token;token=next();var left=t.nud();while(rbp<token.lbp){t=token;token=next();left=t.led(left);}
return left;}
function advance(id){if(id&&token.id!==id){throw new Error('Expected "'+id+'", got "'+token.id+'"');}
token=next();}
function PY_ensurepy(val,name){switch(val){case undefined:throw new Error("NameError: name '"+name+"' is not defined");case null:return py.None;case true:return py.True;case false:return py.False;}
var fn=function(){};fn.prototype=py.object;if(py.PY_isInstance(val,py.object)||py.PY_isSubclass(val,py.object)){return val;}
switch(typeof val){case'number':return py.float.fromJSON(val);case'string':return py.str.fromJSON(val);case'function':return py.PY_def.fromJSON(val);}
switch(val.constructor){case Object:var o=py.PY_call(py.object);for(var prop in val){if(val.hasOwnProperty(prop)){o[prop]=val[prop];}}
return o;case Array:return py.list.fromJSON(val);}
throw new Error("Could not convert "+val+" to a pyval");}
var typename=function(obj){if(obj.__class__){return obj.__class__.__name__;}else if(typeof obj!=='object'){return typeof obj;}else{return obj.constructor.name;}};py.py={};py.PY_parseArgs=function PY_parseArgs(argument,format){var out={};var args=argument[0];var kwargs={};for(var k in argument[1]){if(!argument[1].hasOwnProperty(k)){continue;}
kwargs[k]=argument[1][k];}
if(typeof format==='string'){format=format.split(/\s+/);}
var name=function(spec){if(typeof spec==='string'){return spec;}else if(spec instanceof Array&&spec.length===2){return spec[0];}
throw new Error("TypeError: unknown format specification "+
JSON.stringify(spec));};var spec;for(var i=0;i<args.length;++i){spec=format[i];if(!spec||spec==='*'){throw new Error("TypeError: function takes exactly "+(i-1)+" positional arguments ("+args.length+" given")}else if(/^\*\w/.test(spec)){out[name(spec.slice(1))]=args.slice(i);break;}
out[name(spec)]=args[i];}
for(var j=i;j<format.length;++j){spec=format[j];var n=name(spec);if(n in out){throw new Error("TypeError: function got multiple values "+"for keyword argument '"+kwarg+"'");}
if(/^\*\*\w/.test(n)){out[n.slice(2)]=kwargs;kwargs={};break;}
if(n in kwargs){out[n]=kwargs[n];delete kwargs[n];}}
for(var key in kwargs){throw new Error("TypeError: function got an unexpected keyword argument '"
+key+"'");}
var kwonly=0;for(var k=0;k<format.length;++k){if(/^\*/.test(format[k])){kwonly=1;break;}}
for(var k=0;k<format.length;++k){spec=format[k];var n=name(spec);if(/^\*/.test(n)||n in out){continue;}
if(!(spec instanceof Array)){throw new Error("TypeError: function takes exactly "+(format.length-kwonly)
+" arguments");}
out[n]=spec[1];}
return out;};py.PY_hasAttr=function(o,attr_name){try{py.PY_getAttr(o,attr_name);return true;}catch(e){return false;}};py.PY_getAttr=function(o,attr_name){return PY_ensurepy(o.__getattribute__(attr_name));};py.PY_str=function(o){var v=o.__str__();if(py.PY_isInstance(v,py.str)){return v;}
throw new Error('TypeError: __str__ returned non-string (type '
+typename(v)
+')');};py.PY_isInstance=function(inst,cls){var fn=function(){};fn.prototype=cls;return inst instanceof fn;};py.PY_isSubclass=function(derived,cls){var fn=function(){};fn.prototype=cls;return derived===cls||derived instanceof fn;};py.PY_call=function(callable,args,kwargs){if(!args){args=[];}
if(typeof args==='object'&&!(args instanceof Array)){kwargs=args;args=[];}
if(!kwargs){kwargs={};}
if(callable.__is_type){var instance=callable.__new__.call(callable,args,kwargs);var typ=function(){};typ.prototype=callable;if(instance instanceof typ){instance.__init__.call(instance,args,kwargs);}
return instance}
return callable.__call__(args,kwargs);};py.PY_isTrue=function(o){var res=o.__nonzero__();if(res===py.True){return true;}
if(res===py.False){return false;}
throw new Error("TypeError: __nonzero__ should return bool, returned "
+typename(res));};py.PY_not=function(o){return!py.PY_isTrue(o);};py.PY_size=function(o){if(!o.__len__){throw new Error("TypeError: object of type '"+
typename(o)+"' has no len()");}
var v=o.__len__();if(typeof v!=='number'){throw new Error("TypeError: a number is required");}
return v;};py.PY_getItem=function(o,key){if(!('__getitem__'in o)){throw new Error("TypeError: '"+typename(o)+"' object is unsubscriptable")}
if(!py.PY_isInstance(key,py.object)){throw new Error("TypeError: '"+typename(key)+"' is not a py.js object");}
var res=o.__getitem__(key);if(!py.PY_isInstance(key,py.object)){throw new Error("TypeError: __getitem__ must return a py.js object, got "
+typename(res));}
return res;};py.PY_setItem=function(o,key,v){if(!('__setitem__'in o)){throw new Error("TypeError: '"+typename(o)+"' object does not support item assignment");}
if(!py.PY_isInstance(key,py.object)){throw new Error("TypeError: '"+typename(key)+"' is not a py.js object");}
if(!py.PY_isInstance(v,py.object)){throw new Error("TypeError: '"+typename(v)+"' is not a py.js object");}
o.__setitem__(key,v);};py.PY_add=function(o1,o2){return PY_op(o1,o2,'+');};py.PY_subtract=function(o1,o2){return PY_op(o1,o2,'-');};py.PY_multiply=function(o1,o2){return PY_op(o1,o2,'*');};py.PY_divide=function(o1,o2){return PY_op(o1,o2,'/');};py.PY_negative=function(o){if(!o.__neg__){throw new Error("TypeError: bad operand for unary -: '"
+typename(o)
+"'");}
return o.__neg__();};py.PY_positive=function(o){if(!o.__pos__){throw new Error("TypeError: bad operand for unary +: '"
+typename(o)
+"'");}
return o.__pos__();};py.type=function type(name,bases,dict){if(typeof name!=='string'){throw new Error("ValueError: a class name should be a string");}
if(!bases||bases.length===0){bases=[py.object];}else if(bases.length>1){throw new Error("ValueError: can't provide multiple bases for a "
+"new type");}
var base=bases[0];var ClassObj=create(base);if(dict){for(var k in dict){if(!dict.hasOwnProperty(k)){continue;}
ClassObj[k]=dict[k];}}
ClassObj.__class__=ClassObj;ClassObj.__name__=name;ClassObj.__bases__=bases;ClassObj.__is_type=true;return ClassObj;};py.type.__call__=function(){var args=py.PY_parseArgs(arguments,['object']);return args.object.__class__;};var hash_counter=0;py.object=py.type('object',[{}],{__new__:function(){var inst=create(this);inst.__is_type=false;return inst;},__init__:function(){},__hash__:function(){if(this._hash){return this._hash;}
return this._hash='\0\0\0'+String(hash_counter++);},__eq__:function(other){return(this===other)?py.True:py.False;},__ne__:function(other){if(py.PY_isTrue(this.__eq__(other))){return py.False;}else{return py.True;}},__lt__:function(){return py.NotImplemented;},__le__:function(){return py.NotImplemented;},__ge__:function(){return py.NotImplemented;},__gt__:function(){return py.NotImplemented;},__str__:function(){return this.__unicode__();},__unicode__:function(){return py.str.fromJSON('<'+typename(this)+' object>');},__nonzero__:function(){return py.True;},__getattribute__:function(name){if(name in this){var val=this[name];if(typeof val==='object'&&'__get__'in val){return val.__get__(this,py.PY_call(py.type,[this]));}
if(typeof val==='function'&&!this.hasOwnProperty(name)){return PY_instancemethod.fromJSON(val,this);}
return val;}
if('__getattr__'in this){return this.__getattr__(name);}
throw new Error("AttributeError: object has no attribute '"+name+"'");},__setattr__:function(name,value){if(name in this&&'__set__'in this[name]){this[name].__set__(this,value);}
this[name]=value;},toJSON:function(){throw new Error(this.constructor.name+' can not be converted to JSON');}});var NoneType=py.type('NoneType',null,{__nonzero__:function(){return py.False;},toJSON:function(){return null;}});py.None=py.PY_call(NoneType);var NotImplementedType=py.type('NotImplementedType',null,{});py.NotImplemented=py.PY_call(NotImplementedType);var booleans_initialized=false;py.bool=py.type('bool',null,{__new__:function(){if(!booleans_initialized){return py.object.__new__.apply(this);}
var ph={};var args=py.PY_parseArgs(arguments,[['value',ph]]);if(args.value===ph){return py.False;}
return py.PY_isTrue(args.value)?py.True:py.False;},__str__:function(){return py.str.fromJSON((this===py.True)?"True":"False");},__nonzero__:function(){return this;},fromJSON:function(val){return val?py.True:py.False},toJSON:function(){return this===py.True;}});py.True=py.PY_call(py.bool);py.False=py.PY_call(py.bool);booleans_initialized=true;py.float=py.type('float',null,{__init__:function(){var placeholder={};var args=py.PY_parseArgs(arguments,[['value',placeholder]]);var value=args.value;if(value===placeholder){this._value=0;return;}
if(py.PY_isInstance(value,py.float)){this._value=value._value;}
if(py.PY_isInstance(value,py.object)&&'__float__'in value){var res=value.__float__();if(py.PY_isInstance(res,py.float)){this._value=res._value;return;}
throw new Error('TypeError: __float__ returned non-float (type '+
typename(res)+')');}
throw new Error('TypeError: float() argument must be a string or a number');},__str__:function(){return py.str.fromJSON(String(this._value));},__eq__:function(other){return this._value===other._value?py.True:py.False;},__lt__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return this._value<other._value?py.True:py.False;},__le__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return this._value<=other._value?py.True:py.False;},__gt__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return this._value>other._value?py.True:py.False;},__ge__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return this._value>=other._value?py.True:py.False;},__abs__:function(){return py.float.fromJSON(Math.abs(this._value));},__add__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value+other._value);},__mod__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value%other._value);},__neg__:function(){return py.float.fromJSON(-this._value);},__sub__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value-other._value);},__mul__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value*other._value);},__pow__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value**other._value);},__div__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value/other._value);},__nonzero__:function(){return this._value?py.True:py.False;},fromJSON:function(v){if(!(typeof v==='number')){throw new Error('py.float.fromJSON can only take numbers');}
var instance=py.PY_call(py.float);instance._value=v;return instance;},toJSON:function(){return this._value;}});py.str=py.type('str',null,{__init__:function(){var placeholder={};var args=py.PY_parseArgs(arguments,[['value',placeholder]]);var s=args.value;if(s===placeholder){this._value='';return;}
this._value=py.PY_str(s)._value;},__hash__:function(){return'\1\0\1'+this._value;},__str__:function(){return this;},__eq__:function(other){if(py.PY_isInstance(other,py.str)&&this._value===other._value){return py.True;}
return py.False;},__lt__:function(other){if(py.PY_not(py.PY_call(py.isinstance,[other,py.str]))){return py.NotImplemented;}
return this._value<other._value?py.True:py.False;},__le__:function(other){if(!py.PY_isInstance(other,py.str)){return py.NotImplemented;}
return this._value<=other._value?py.True:py.False;},__gt__:function(other){if(!py.PY_isInstance(other,py.str)){return py.NotImplemented;}
return this._value>other._value?py.True:py.False;},__ge__:function(other){if(!py.PY_isInstance(other,py.str)){return py.NotImplemented;}
return this._value>=other._value?py.True:py.False;},__add__:function(other){if(!py.PY_isInstance(other,py.str)){return py.NotImplemented;}
return py.str.fromJSON(this._value+other._value);},__nonzero__:function(){return this._value.length?py.True:py.False;},__contains__:function(s){return(this._value.indexOf(s._value)!==-1)?py.True:py.False;},fromJSON:function(s){if(typeof s==='string'){var instance=py.PY_call(py.str);instance._value=s;return instance;}
throw new Error("str.fromJSON can only take strings");},toJSON:function(){return this._value;}});py.tuple=py.type('tuple',null,{__init__:function(){this._values=[];},__len__:function(){return this._values.length;},__nonzero__:function(){return py.PY_size(this)>0?py.True:py.False;},__contains__:function(value){for(var i=0,len=this._values.length;i<len;++i){if(py.PY_isTrue(this._values[i].__eq__(value))){return py.True;}}
return py.False;},__getitem__:function(index){return this._values[index.toJSON()];},toJSON:function(){var out=[];for(var i=0;i<this._values.length;++i){out.push(this._values[i].toJSON());}
return out;},fromJSON:function(ar){if(!(ar instanceof Array)){throw new Error("Can only create a py.tuple from an Array");}
var t=py.PY_call(py.tuple);for(var i=0;i<ar.length;++i){t._values.push(PY_ensurepy(ar[i]));}
return t;}});py.list=py.type('list',null,{__nonzero__:function(){return this.__len__>0?py.True:py.False;},});_.defaults(py.list,py.tuple)
py.dict=py.type('dict',null,{__init__:function(){this._store={};},__getitem__:function(key){var h=key.__hash__();if(!(h in this._store)){throw new Error("KeyError: '"+key.toJSON()+"'");}
return this._store[h][1];},__setitem__:function(key,value){this._store[key.__hash__()]=[key,value];},__len__:function(){return Object.keys(this._store).length},__nonzero__:function(){return py.PY_size(this)>0?py.True:py.False;},get:function(){var args=py.PY_parseArgs(arguments,['k',['d',py.None]]);var h=args.k.__hash__();if(!(h in this._store)){return args.d;}
return this._store[h][1];},fromJSON:function(d){var instance=py.PY_call(py.dict);for(var k in(d||{})){if(!d.hasOwnProperty(k)){continue;}
instance.__setitem__(py.str.fromJSON(k),PY_ensurepy(d[k]));}
return instance;},toJSON:function(){var out={};for(var k in this._store){var item=this._store[k];out[item[0].toJSON()]=item[1].toJSON();}
return out;}});py.PY_def=py.type('function',null,{__call__:function(){return this._func.apply(this._inst,arguments);},fromJSON:function(nativefunc){var instance=py.PY_call(py.PY_def);instance._inst=null;instance._func=nativefunc;return instance;},toJSON:function(){return this._func;}});py.classmethod=py.type('classmethod',null,{__init__:function(){var args=py.PY_parseArgs(arguments,'function');this._func=args['function'];},__get__:function(obj,type){return PY_instancemethod.fromJSON(this._func,type);},fromJSON:function(func){return py.PY_call(py.classmethod,[func]);}});var PY_instancemethod=py.type('instancemethod',[py.PY_def],{fromJSON:function(nativefunc,instance){var inst=py.PY_call(PY_instancemethod);inst._inst=instance;inst._func=nativefunc;return inst;}});py.abs=new py.PY_def.fromJSON(function abs(){var args=py.PY_parseArgs(arguments,['number']);if(!args.number.__abs__){throw new Error("TypeError: bad operand type for abs(): '"
+typename(args.number)
+"'");}
return args.number.__abs__();});py.len=new py.PY_def.fromJSON(function len(){var args=py.PY_parseArgs(arguments,['object']);return py.float.fromJSON(py.PY_size(args.object));});py.isinstance=new py.PY_def.fromJSON(function isinstance(){var args=py.PY_parseArgs(arguments,['object','class']);return py.PY_isInstance(args.object,args['class'])?py.True:py.False;});py.issubclass=new py.PY_def.fromJSON(function issubclass(){var args=py.PY_parseArgs(arguments,['C','B']);return py.PY_isSubclass(args.C,args.B)?py.True:py.False;});var PY_decode_string_literal=function(str,unicode){var out=[],code;var direct_map={'\\':'\\','"':'"',"'":"'",'a':'\x07','b':'\x08','f':'\x0c','n':'\n','r':'\r','t':'\t','v':'\v'};for(var i=0;i<str.length;++i){if(str[i]!=='\\'){out.push(str[i]);continue;}
var escape=str[i+1];if(escape in direct_map){out.push(direct_map[escape]);++i;continue;}
switch(escape){case'\n':++i;continue;case'N':if(!unicode){break;}
throw Error("SyntaxError: \\N{} escape not implemented");case'u':if(!unicode){break;}
var uni=str.slice(i+2,i+6);if(!/[0-9a-f]{4}/i.test(uni)){throw new Error(["SyntaxError: (unicode error) 'unicodeescape' codec"," can't decode bytes in position ",i,"-",i+4,": truncated \\uXXXX escape"].join(''));}
code=parseInt(uni,16);out.push(String.fromCharCode(code));i+=5;continue;case'U':if(!unicode){break;}
throw Error("SyntaxError: \\U escape not implemented");case'x':var hex=str.slice(i+2,i+4);if(!/[0-9a-f]{2}/i.test(hex)){if(!unicode){throw new Error('ValueError: invalid \\x escape');}
throw new Error(["SyntaxError: (unicode error) 'unicodeescape'"," codec can't decode bytes in position ",i,'-',i+2,": truncated \\xXX escape"].join(''))}
code=parseInt(hex,16);out.push(String.fromCharCode(code));i+=3;continue;default:if(!/[0-8]/.test(escape)){break;}
var r=/[0-8]{1,3}/g;r.lastIndex=i+1;var m=r.exec(str);var oct=m[0];code=parseInt(oct,8);out.push(String.fromCharCode(code));i+=oct.length;continue;}
out.push('\\');}
return out.join('');};var PY_operators={'==':['eq','eq',function(a,b){return a===b;}],'!=':['ne','ne',function(a,b){return a!==b;}],'<>':['ne','ne',function(a,b){return a!==b;}],'<':['lt','gt',function(a,b){return a.__class__.__name__<b.__class__.__name__;}],'<=':['le','ge',function(a,b){return a.__class__.__name__<=b.__class__.__name__;}],'>':['gt','lt',function(a,b){return a.__class__.__name__>b.__class__.__name__;}],'>=':['ge','le',function(a,b){return a.__class__.__name__>=b.__class__.__name__;}],'+':['add','radd'],'-':['sub','rsub'],'*':['mul','rmul'],'/':['div','rdiv'],'//':['floordiv','rfloordiv'],'%':['mod','rmod'],'**':['pow','rpow'],'<<':['lshift','rlshift'],'>>':['rshift','rrshift'],'&':['and','rand'],'^':['xor','rxor'],'|':['or','ror']};var PY_op=function(o1,o2,op){var r;var methods=PY_operators[op];var forward='__'+methods[0]+'__',reverse='__'+methods[1]+'__';var otherwise=methods[2];if(forward in o1&&(r=o1[forward](o2))!==py.NotImplemented){return r;}
if(reverse in o2&&(r=o2[reverse](o1))!==py.NotImplemented){return r;}
if(otherwise){return PY_ensurepy(otherwise(o1,o2));}
throw new Error("TypeError: unsupported operand type(s) for "+op+": '"
+typename(o1)+"' and '"+typename(o2)+"'");};var PY_builtins={type:py.type,None:py.None,True:py.True,False:py.False,NotImplemented:py.NotImplemented,object:py.object,bool:py.bool,float:py.float,str:py.str,unicode:py.unicode,tuple:py.tuple,list:py.list,dict:py.dict,abs:py.abs,len:py.len,isinstance:py.isinstance,issubclass:py.issubclass,classmethod:py.classmethod,};py.parse=function(toks){var index=0;token=toks[0];next=function(){return toks[++index];};return expression();};var evaluate_operator=function(operator,a,b){switch(operator){case'is':return a===b?py.True:py.False;case'is not':return a!==b?py.True:py.False;case'in':return b.__contains__(a);case'not in':return py.PY_isTrue(b.__contains__(a))?py.False:py.True;case'==':case'!=':case'<>':case'<':case'<=':case'>':case'>=':return PY_op(a,b,operator);}
throw new Error('SyntaxError: unknown comparator [['+operator+']]');};py.evaluate=function(expr,context){context=context||{};switch(expr.id){case'(name)':var val=context[expr.value];if(val===undefined&&expr.value in PY_builtins){return PY_builtins[expr.value];}
return PY_ensurepy(val,expr.value);case'(string)':return py.str.fromJSON(expr.value);case'(number)':return py.float.fromJSON(expr.value);case'(constant)':switch(expr.value){case'None':return py.None;case'False':return py.False;case'True':return py.True;}
throw new Error("SyntaxError: unknown constant '"+expr.value+"'");case'(comparator)':var result,left=py.evaluate(expr.expressions[0],context);for(var i=0;i<expr.operators.length;++i){result=evaluate_operator(expr.operators[i],left,left=py.evaluate(expr.expressions[i+1],context));if(py.PY_not(result)){return py.False;}}
return py.True;case'not':return py.PY_isTrue(py.evaluate(expr.first,context))?py.False:py.True;case'and':var and_first=py.evaluate(expr.first,context);if(py.PY_isTrue(and_first.__nonzero__())){return py.evaluate(expr.second,context);}
return and_first;case'or':var or_first=py.evaluate(expr.first,context);if(py.PY_isTrue(or_first.__nonzero__())){return or_first}
return py.evaluate(expr.second,context);case'if':var cond=py.evaluate(expr.condition,context);if(py.PY_isTrue(cond)){return py.evaluate(expr.ifTrue,context);}else{return py.evaluate(expr.ifFalse,context);}
case'(':if(expr.second){var callable=py.evaluate(expr.first,context);var args=[],kwargs={};for(var jj=0;jj<expr.second.length;++jj){var arg=expr.second[jj];if(arg.id!=='='){args.push(py.evaluate(arg,context));}else{kwargs[arg.first.value]=py.evaluate(arg.second,context);}}
return py.PY_call(callable,args,kwargs);}
var tuple_exprs=expr.first,tuple_values=[];for(var j=0,len=tuple_exprs.length;j<len;++j){tuple_values.push(py.evaluate(tuple_exprs[j],context));}
return py.tuple.fromJSON(tuple_values);case'[':if(expr.second){return py.PY_getItem(py.evaluate(expr.first,context),py.evaluate(expr.second,context));}
var list_exprs=expr.first,list_values=[];for(var k=0;k<list_exprs.length;++k){list_values.push(py.evaluate(list_exprs[k],context));}
return py.list.fromJSON(list_values);case'{':var dict_exprs=expr.first,dict=py.PY_call(py.dict);for(var l=0;l<dict_exprs.length;++l){py.PY_setItem(dict,py.evaluate(dict_exprs[l][0],context),py.evaluate(dict_exprs[l][1],context));}
return dict;case'.':if(expr.second.id!=='(name)'){throw new Error('SyntaxError: '+expr);}
return py.PY_getAttr(py.evaluate(expr.first,context),expr.second.value);case'~':return(py.evaluate(expr.first,context)).__invert__();case'+':if(!expr.second){return py.PY_positive(py.evaluate(expr.first,context));}
case'-':if(!expr.second){return py.PY_negative(py.evaluate(expr.first,context));}
case'*':case'/':case'//':case'%':case'**':case'<<':case'>>':case'&':case'^':case'|':return PY_op(py.evaluate(expr.first,context),py.evaluate(expr.second,context),expr.id);default:throw new Error('SyntaxError: Unknown node [['+expr.id+']]');}};py.eval=function(str,context){return py.evaluate(py.parse(py.tokenize(str)),context).toJSON();}})(typeof exports==='undefined'?py:exports);;

/* /web/static/lib/py.js/lib/py_extras.js defined in bundle 'web.assets_backend' */
(function(py){"use strict";function divmod(a,b,fn){var mod=a%b;if(mod>0&&b<0||mod<0&&b>0){mod+=b;}
return fn(Math.floor(a/b),mod);}
function modf(x,fn){var mod=x%1;if(mod<0){mod+=1;}
return fn(mod,Math.floor(x));}
function assert(bool){if(!bool){throw new Error("AssertionError");}}
var obj=function(){};obj.prototype=py.object;var asJS=function(arg){if(arg instanceof obj){return arg.toJSON();}
return arg;};var datetime=py.PY_call(py.object);var zero=py.float.fromJSON(0);var DAYS_IN_MONTH=[null,31,28,31,30,31,30,31,31,30,31,30,31];var DAYS_BEFORE_MONTH=[null];var dbm=0;for(var i=1;i<DAYS_IN_MONTH.length;++i){DAYS_BEFORE_MONTH.push(dbm);dbm+=DAYS_IN_MONTH[i];}
function is_leap(year){return year%4===0&&(year%100!==0||year%400===0);}
function days_before_year(year){var y=year-1;return y*365+Math.floor(y/4)-Math.floor(y/100)+Math.floor(y/400);}
function days_in_month(year,month){if(month===2&&is_leap(year)){return 29;}
return DAYS_IN_MONTH[month];}
function days_before_month(year,month){var post_leap_feb=month>2&&is_leap(year);return DAYS_BEFORE_MONTH[month]+(post_leap_feb?1:0);}
function ymd2ord(year,month,day){var dim=days_in_month(year,month);if(!(1<=day&&day<=dim)){throw new Error("ValueError: day must be in 1.."+dim);}
return days_before_year(year)+
days_before_month(year,month)+
day;}
function get_quarter_number(month){return Math.ceil(month/3);}
function get_quarter(year,month){var quarter_number=get_quarter_number(month);var month_from=((quarter_number-1)*3)+1
var date_from={year:year,month:month_from,day:1}
var date_to={year:year,month:month_from+2,day:days_in_month(year,month)}
return[date_from,date_to];}
function get_day_of_week(year,month,day){var d=new Date(year,month-1,day);return(d.getDay()+6)%7;}
var DI400Y=days_before_year(401);var DI100Y=days_before_year(101);var DI4Y=days_before_year(5);function ord2ymd(n){--n;var n400,n100,n4,n1,n0;divmod(n,DI400Y,function(_n400,n){n400=_n400;divmod(n,DI100Y,function(_n100,n){n100=_n100;divmod(n,DI4Y,function(_n4,n){n4=_n4;divmod(n,365,function(_n1,n){n1=_n1;n0=n;});});});});n=n0;var year=n400*400+1+n100*100+n4*4+n1;if(n1==4||n100==100){assert(n0===0);return{year:year-1,month:12,day:31};}
var leapyear=n1===3&&(n4!==24||n100==3);assert(leapyear==is_leap(year));var month=(n+50)>>5;var preceding=DAYS_BEFORE_MONTH[month]+((month>2&&leapyear)?1:0);if(preceding>n){--month;preceding-=DAYS_IN_MONTH[month]+((month===2&&leapyear)?1:0);}
n-=preceding;return{year:year,month:month,day:n+1};}
function tmxxx(year,month,day,hour,minute,second,microsecond){hour=hour||0;minute=minute||0;second=second||0;microsecond=microsecond||0;if(microsecond<0||microsecond>999999){divmod(microsecond,1000000,function(carry,ms){microsecond=ms;second+=carry;});}
if(second<0||second>59){divmod(second,60,function(carry,s){second=s;minute+=carry;});}
if(minute<0||minute>59){divmod(minute,60,function(carry,m){minute=m;hour+=carry;});}
if(hour<0||hour>23){divmod(hour,24,function(carry,h){hour=h;day+=carry;});}
if(month<1||month>12){divmod(month-1,12,function(carry,m){month=m+1;year+=carry;});}
var dim=days_in_month(year,month);if(day<1||day>dim){if(day===0){--month;if(month>0){day=days_in_month(year,month);}else{--year;month=12;day=31;}}else if(day==dim+1){++month;day=1;if(month>12){month=1;++year;}}else{var r=ord2ymd(ymd2ord(year,month,1)+(day-1));year=r.year;month=r.month;day=r.day;}}
return{year:year,month:month,day:day,hour:hour,minute:minute,second:second,microsecond:microsecond};}
datetime.timedelta=py.type('timedelta',null,{__init__:function(){var args=py.PY_parseArgs(arguments,[['days',zero],['seconds',zero],['microseconds',zero],['milliseconds',zero],['minutes',zero],['hours',zero],['weeks',zero]]);var d=0,s=0,m=0;var days=args.days.toJSON()+args.weeks.toJSON()*7;var seconds=args.seconds.toJSON()
+args.minutes.toJSON()*60
+args.hours.toJSON()*3600;var microseconds=args.microseconds.toJSON()
+args.milliseconds.toJSON()*1000;var daysecondsfrac=modf(days,function(dayfrac,days){d=days;if(dayfrac){return modf(dayfrac*24*3600,function(dsf,dsw){s=dsw;return dsf;});}
return 0;});var secondsfrac=modf(seconds,function(sf,s){seconds=s;return sf+daysecondsfrac;});divmod(seconds,24*3600,function(days,seconds){d+=days;s+=seconds;});microseconds+=secondsfrac*1e6;divmod(microseconds,1000000,function(seconds,microseconds){divmod(seconds,24*3600,function(days,seconds){d+=days;s+=seconds;m+=Math.round(microseconds);});});this.days=d;this.seconds=s;this.microseconds=m;},__str__:function(){var hh,mm,ss;divmod(this.seconds,60,function(m,s){divmod(m,60,function(h,m){hh=h;mm=m;ss=s;});});var s=_.str.sprintf("%d:%02d:%02d",hh,mm,ss);if(this.days){s=_.str.sprintf("%d day%s, %s",this.days,(this.days!=1&&this.days!=-1)?'s':'',s);}
if(this.microseconds){s=_.str.sprintf("%s.%06d",s,this.microseconds);}
return py.str.fromJSON(s);},__eq__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.False;}
return(this.days===other.days&&this.seconds===other.seconds&&this.microseconds===other.microseconds)?py.True:py.False;},__add__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
return py.PY_call(datetime.timedelta,[py.float.fromJSON(this.days+other.days),py.float.fromJSON(this.seconds+other.seconds),py.float.fromJSON(this.microseconds+other.microseconds)]);},__radd__:function(other){return this.__add__(other);},__sub__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
return py.PY_call(datetime.timedelta,[py.float.fromJSON(this.days-other.days),py.float.fromJSON(this.seconds-other.seconds),py.float.fromJSON(this.microseconds-other.microseconds)]);},__rsub__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
return this.__neg__().__add__(other);},__neg__:function(){return py.PY_call(datetime.timedelta,[py.float.fromJSON(-this.days),py.float.fromJSON(-this.seconds),py.float.fromJSON(-this.microseconds)]);},__pos__:function(){return this;},__mul__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
var n=other.toJSON();return py.PY_call(datetime.timedelta,[py.float.fromJSON(this.days*n),py.float.fromJSON(this.seconds*n),py.float.fromJSON(this.microseconds*n)]);},__rmul__:function(other){return this.__mul__(other);},__div__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
var usec=((this.days*24*3600)+this.seconds)*1000000
+this.microseconds;return py.PY_call(datetime.timedelta,[zero,zero,py.float.fromJSON(usec/other.toJSON())]);},__floordiv__:function(other){return this.__div__(other);},total_seconds:function(){return py.float.fromJSON(this.days*86400
+this.seconds
+this.microseconds/1000000);},__nonzero__:function(){return(!!this.days||!!this.seconds||!!this.microseconds)?py.True:py.False;}});datetime.datetime=py.type('datetime',null,{__init__:function(){var zero=py.float.fromJSON(0);var args=py.PY_parseArgs(arguments,['year','month','day',['hour',zero],['minute',zero],['second',zero],['microsecond',zero],['tzinfo',py.None]]);for(var key in args){if(!args.hasOwnProperty(key)){continue;}
this[key]=asJS(args[key]);}},__eq__:function(other){return(this.year===other.year&&this.month===other.month&&this.day===other.day&&this.hour===other.hour&&this.minute===other.minute&&this.second===other.second&&this.microsecond===other.microsecond&&this.tzinfo===other.tzinfo)?py.True:py.False;},replace:function(){var args=py.PY_parseArgs(arguments,[['year',py.None],['month',py.None],['day',py.None],['hour',py.None],['minute',py.None],['second',py.None],['microsecond',py.None]]);var params={};for(var key in args){if(!args.hasOwnProperty(key)){continue;}
var arg=args[key];params[key]=(arg===py.None?this[key]:asJS(arg));}
return py.PY_call(datetime.datetime,params);},start_of:function(){var args=py.PY_parseArgs(arguments,'granularity');var granularity=args.granularity.toJSON();if(granularity==='year'){return py.PY_call(datetime.datetime,[this.year,1,1]);}else if(granularity==='quarter'){var quarter=get_quarter(this.year,this.month)[0];return py.PY_call(datetime.datetime,[quarter.year,quarter.month,quarter.day]);}else if(granularity==='month'){return py.PY_call(datetime.datetime,[this.year,this.month,1]);}else if(granularity==='week'){var dow=get_day_of_week(this.year,this.month,this.day);return py.PY_call(datetime.datetime,[this.year,this.month,this.day-dow]);}else if(granularity==='day'){return py.PY_call(datetime.datetime,[this.year,this.month,this.day]);}else if(granularity==='hour'){return py.PY_call(datetime.datetime,[this.year,this.month,this.day,this.hour]);}else{throw new Error('ValueError: '+granularity+' is not a supported granularity, supported '+' granularities are: year, quarter, month, week, day and hour.')}},end_of:function(){var args=py.PY_parseArgs(arguments,'granularity');var granularity=args.granularity.toJSON();var min=[23,59,59];if(granularity==='year'){return py.PY_call(datetime.datetime,[this.year,12,31].concat(min));}else if(granularity==='quarter'){var quarter=get_quarter(this.year,this.month)[1];return py.PY_call(datetime.datetime,[quarter.year,quarter.month,quarter.day].concat(min));}else if(granularity==='month'){var dom=days_in_month(this.year,this.month);return py.PY_call(datetime.datetime,[this.year,this.month,dom].concat(min));}else if(granularity==='week'){var dow=get_day_of_week(this.year,this.month,this.day);return py.PY_call(datetime.datetime,[this.year,this.month,this.day+(6-dow)].concat(min));}else if(granularity==='day'){return py.PY_call(datetime.datetime,[this.year,this.month,this.day].concat(min));}else if(granularity==='hour'){return py.PY_call(datetime.datetime,[this.year,this.month,this.day,this.hour,59,59]);}else{throw new Error('ValueError: '+granularity+' is not a supported granularity, supported '+' granularities are: year, quarter, month, week, day and hour.')}},add:function(){var args=py.PY_parseArgs(arguments,[['years',py.None],['months',py.None],['days',py.None],['hours',py.None],['minutes',py.None],['seconds',py.None],]);return py.PY_add(this,py.PY_call(relativedelta,{'years':args.years,'months':args.months,'days':args.days,'hours':args.hours,'minutes':args.minutes,'seconds':args.seconds,}));},subtract:function(){var args=py.PY_parseArgs(arguments,[['years',py.None],['months',py.None],['days',py.None],['hours',py.None],['minutes',py.None],['seconds',py.None],]);var params={};for(var key in args){params[key]=(args[key]===py.None?args[key]:py.float.fromJSON(-asJS(args[key])));}
return py.PY_add(this,py.PY_call(relativedelta,params));},strftime:function(){var self=this;var args=py.PY_parseArgs(arguments,'format');return py.str.fromJSON(args.format.toJSON().replace(/%([A-Za-z])/g,function(m,c){switch(c){case'Y':return _.str.sprintf('%04d',self.year);case'm':return _.str.sprintf('%02d',self.month);case'd':return _.str.sprintf('%02d',self.day);case'H':return _.str.sprintf('%02d',self.hour);case'M':return _.str.sprintf('%02d',self.minute);case'S':return _.str.sprintf('%02d',self.second);}
throw new Error('ValueError: No known conversion for '+m);}));},to_utc:function(){var d=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second);var offset=d.getTimezoneOffset();var kwargs={minutes:py.float.fromJSON(offset)};var timedelta=py.PY_call(py.extras.datetime.timedelta,[],kwargs);var s=tmxxx(this.year,this.month,this.day+timedelta.days,this.hour,this.minute,this.second+timedelta.seconds);return datetime.datetime.fromJSON(s.year,s.month,s.day,s.hour,s.minute,s.second);},now:py.classmethod.fromJSON(function(){var d=new Date();return py.PY_call(datetime.datetime,[d.getFullYear(),d.getMonth()+1,d.getDate(),d.getHours(),d.getMinutes(),d.getSeconds(),d.getMilliseconds()*1000]);}),today:py.classmethod.fromJSON(function(){var dt_class=py.PY_getAttr(datetime,'datetime');return py.PY_call(py.PY_getAttr(dt_class,'now'));}),utcnow:py.classmethod.fromJSON(function(){var d=new Date();return py.PY_call(datetime.datetime,[d.getUTCFullYear(),d.getUTCMonth()+1,d.getUTCDate(),d.getUTCHours(),d.getUTCMinutes(),d.getUTCSeconds(),d.getUTCMilliseconds()*1000]);}),combine:py.classmethod.fromJSON(function(){var args=py.PY_parseArgs(arguments,'date time');return py.PY_call(datetime.datetime,[py.PY_getAttr(args.date,'year'),py.PY_getAttr(args.date,'month'),py.PY_getAttr(args.date,'day'),py.PY_getAttr(args.time,'hour'),py.PY_getAttr(args.time,'minute'),py.PY_getAttr(args.time,'second')]);}),toJSON:function(){return new Date(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.microsecond/1000);},__add__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
var s=tmxxx(this.year,this.month,this.day+other.days,this.hour,this.minute,this.second+other.seconds);return datetime.datetime.fromJSON(s.year,s.month,s.day,s.hour,s.minute,s.second);},__sub__:function(other){if(py.PY_isInstance(other,datetime.timedelta)){return py.PY_add(this,py.PY_negative(other));}
return py.NotImplemented;},fromJSON:function(year,month,day,hour,minute,second){return py.PY_call(datetime.datetime,[year,month,day,hour,minute,second]);},});datetime.date=py.type('date',null,{__init__:function(){var args=py.PY_parseArgs(arguments,'year month day');this.year=asJS(args.year);this.month=asJS(args.month);this.day=asJS(args.day);},strftime:function(){var self=this;var args=py.PY_parseArgs(arguments,'format');return py.str.fromJSON(args.format.toJSON().replace(/%([A-Za-z])/g,function(m,c){switch(c){case'Y':return self.year;case'm':return _.str.sprintf('%02d',self.month);case'd':return _.str.sprintf('%02d',self.day);}
throw new Error('ValueError: No known conversion for '+m);}));},__eq__:function(other){return(this.year===other.year&&this.month===other.month&&this.day===other.day)?py.True:py.False;},replace:function(){var args=py.PY_parseArgs(arguments,[['year',py.None],['month',py.None],['day',py.None]]);var params={};for(var key in args){if(!args.hasOwnProperty(key)){continue;}
var arg=args[key];params[key]=(arg===py.None?this[key]:asJS(arg));}
return py.PY_call(datetime.date,params);},start_of:function(){var args=py.PY_parseArgs(arguments,'granularity');var granularity=args.granularity.toJSON();if(granularity==='year'){return py.PY_call(datetime.date,[this.year,1,1]);}else if(granularity==='quarter'){var quarter=get_quarter(this.year,this.month)[0];return py.PY_call(datetime.date,[quarter.year,quarter.month,quarter.day]);}else if(granularity==='month'){return py.PY_call(datetime.date,[this.year,this.month,1]);}else if(granularity==='week'){var dow=get_day_of_week(this.year,this.month,this.day);return py.PY_call(datetime.date,[this.year,this.month,this.day-dow]);}else if(granularity==='day'){return py.PY_call(datetime.date,[this.year,this.month,this.day]);}else{throw new Error('ValueError: '+granularity+' is not a supported granularity, supported '+' granularities are: year, quarter, month, week and day.')}},end_of:function(){var args=py.PY_parseArgs(arguments,'granularity');var granularity=args.granularity.toJSON();if(granularity==='year'){return py.PY_call(datetime.date,[this.year,12,31]);}else if(granularity==='quarter'){var quarter=get_quarter(this.year,this.month)[1];return py.PY_call(datetime.date,[quarter.year,quarter.month,quarter.day]);}else if(granularity==='month'){var dom=days_in_month(this.year,this.month);return py.PY_call(datetime.date,[this.year,this.month,dom]);}else if(granularity==='week'){var dow=get_day_of_week(this.year,this.month,this.day);return py.PY_call(datetime.date,[this.year,this.month,this.day+(6-dow)]);}else if(granularity==='day'){return py.PY_call(datetime.date,[this.year,this.month,this.day]);}else{throw new Error('ValueError: '+granularity+' is not a supported granularity, supported '+' granularities are: year, quarter, month, week and day.')}},add:function(){var args=py.PY_parseArgs(arguments,[['years',py.None],['months',py.None],['days',py.None],]);return py.PY_add(this,py.PY_call(relativedelta,{'years':args.years,'months':args.months,'days':args.days,}));},subtract:function(){var args=py.PY_parseArgs(arguments,[['years',py.None],['months',py.None],['days',py.None],]);var params={};for(var key in args){params[key]=(args[key]===py.None?args[key]:py.float.fromJSON(-asJS(args[key])));}
return py.PY_add(this,py.PY_call(relativedelta,params));},__add__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
var s=tmxxx(this.year,this.month,this.day+other.days);return datetime.date.fromJSON(s.year,s.month,s.day);},__radd__:function(other){return this.__add__(other);},__sub__:function(other){if(py.PY_isInstance(other,datetime.timedelta)){return py.PY_add(this,py.PY_negative(other));}
if(py.PY_isInstance(other,datetime.date)){return py.PY_call(datetime.timedelta,[py.PY_subtract(py.PY_call(py.PY_getAttr(this,'toordinal')),py.PY_call(py.PY_getAttr(other,'toordinal')))]);}
return py.NotImplemented;},toordinal:function(){return py.float.fromJSON(ymd2ord(this.year,this.month,this.day));},weekday:function(){return py.float.fromJSON((this.toordinal().toJSON()+6)%7);},fromJSON:function(year,month,day){return py.PY_call(datetime.date,[year,month,day]);},today:py.classmethod.fromJSON(function(){var d=new Date();return py.PY_call(datetime.date,[d.getFullYear(),d.getMonth()+1,d.getDate()]);}),});datetime.time=py.type('time',null,{__init__:function(){var zero=py.float.fromJSON(0);var args=py.PY_parseArgs(arguments,[['hour',zero],['minute',zero],['second',zero],['microsecond',zero],['tzinfo',py.None]]);for(var k in args){if(!args.hasOwnProperty(k)){continue;}
this[k]=asJS(args[k]);}}});var time=py.PY_call(py.object);time.strftime=py.PY_def.fromJSON(function(){var args=py.PY_parseArgs(arguments,'format');var dt_class=py.PY_getAttr(datetime,'datetime');var d=py.PY_call(py.PY_getAttr(dt_class,'utcnow'));return py.PY_call(py.PY_getAttr(d,'strftime'),[args.format]);});var args=_.map(('year month day hour minute second '
+'years months weeks days hours minutes seconds '
+'weekday leapdays yearday nlyearday').split(' '),function(arg){switch(arg){case'years':case'months':case'days':case'leapdays':case'weeks':case'hours':case'minutes':case'seconds':return[arg,zero];case'year':case'month':case'day':case'weekday':case'hour':case'minute':case'second':case'yearday':case'nlyearday':return[arg,null];default:throw new Error("Unknown relativedelta argument "+arg);}});args.unshift('*');var _utils={monthrange:function(year,month){if(month<1||month>12){throw new Error("Illegal month "+month);}
var day1=this.weekday(year,month,1);var ndays=this.mdays[month]+(month==this.February&&this.isleap(year));return[day1,ndays];},weekday:function(year,month,day){var date=py.PY_call(datetime.date,[year,month,day]);return py.PY_call(py.PY_getAttr(date,'weekday'));},isleap:function(year){return year%4===0&&(year%100!==0||year%400===0);},mdays:[0,31,28,31,30,31,30,31,31,30,31,30,31],January:1,February:2};var relativedelta=py.type('relativedelta',null,{__init__:function(){this.ops=py.PY_parseArgs(arguments,args);this.ops.days=py.float.fromJSON(asJS(this.ops.days)+asJS(this.ops.weeks)*7);var yday=zero;if(this.ops.nlyearday){yday=this.ops.nlyearday;}else if(this.ops.yearday){yday=this.ops.yearday;if(asJS(this.ops.yearday)>59){this.ops.leapdays=py.float.fromJS(-1);}}
if(py.PY_isTrue(yday)){var ydayidx=[31,59,90,120,151,181,212,243,273,304,334,366];for(var idx=0;idx<ydayidx.length;++idx){var ydays=ydayidx[idx];if(asJS(yday)<=ydays){this.ops.month=py.float.fromJSON(idx+1);if(!idx){this.ops.day=yday;}else{this.ops.day=py.PY_subtract(yday,py.float.fromJSON(ydayidx[idx-1]));}
break;}}
if(idx===ydayidx.length){throw new Error("Invalid year day ("+asJS(yday)+")");}}
this._fix();},_fix:function(){var self=this;var months=asJS(this.ops.months);if(Math.abs(months)>11){var s=months>0?1:-1;divmod(months*s,12,function(years,months){self.ops.months=py.float.fromJSON(months*s);self.ops.years=py.float.fromJSON(asJS(self.ops.years)+years*s);});}
this._has_time=0;},__add__:function(other){if(!(py.PY_isInstance(other,datetime.date)||py.PY_isInstance(other,datetime.datetime))){return py.NotImplemented;}
var year=(asJS(this.ops.year)||asJS(other.year))+asJS(this.ops.years);var month=asJS(this.ops.month)||asJS(other.month);var months;if(months=asJS(this.ops.months)){if(Math.abs(months)<1||Math.abs(months)>12){throw new Error("Can only use relative months between -12 and +12");}
month+=months;if(month>12){year+=1;month-=12;}
if(month<1){year-=1;month+=12;}}
var day=Math.min(_utils.monthrange(year,month)[1],asJS(this.ops.day)||asJS(other.day));var repl={year:py.float.fromJSON(year),month:py.float.fromJSON(month),day:py.float.fromJSON(day)};if(py.PY_isInstance(other,datetime.datetime)){repl.hour=py.float.fromJSON(asJS(this.ops.hour)||asJS(other.hour));repl.minute=py.float.fromJSON(asJS(this.ops.minute)||asJS(other.minute));repl.second=py.float.fromJSON(asJS(this.ops.second)||asJS(other.second));}
var days=asJS(this.ops.days);if(py.PY_isTrue(this.ops.leapdays)&&month>2&&_utils.isleap(year)){days+=asJS(this.ops.leapdays);}
var ret=py.PY_add(py.PY_call(py.PY_getAttr(other,'replace'),repl),py.PY_call(datetime.timedelta,{days:py.float.fromJSON(days),hours:py.float.fromJSON(asJS(this.ops.hours)),minutes:py.float.fromJSON(asJS(this.ops.minutes)),seconds:py.float.fromJSON(asJS(this.ops.seconds))}));if(this.ops.weekday){var weekday=asJS(this.ops.weekday),nth=1;var jumpdays=(Math.abs(nth)-1)*7;var ret_weekday=asJS(py.PY_call(py.PY_getAttr(ret,'weekday')));if(nth>0){jumpdays+=(7-ret_weekday+weekday)%7;}else{jumpdays+=(ret_weekday-weekday)%7;jumpdays*=-1;}
ret=py.PY_add(ret,py.PY_call(datetime.timedelta,{days:py.float.fromJSON(jumpdays)}));}
return ret;},__radd__:function(other){return this.__add__(other);},__rsub__:function(other){return this.__neg__().__radd__(other);},__neg__:function(){return py.PY_call(relativedelta,{years:py.PY_negative(this.ops.years),months:py.PY_negative(this.ops.months),days:py.PY_negative(this.ops.days),leapdays:this.ops.leapdays,hours:py.PY_negative(this.ops.hours),minutes:py.PY_negative(this.ops.minutes),seconds:py.PY_negative(this.ops.seconds),year:this.ops.year,month:this.ops.month,day:this.ops.day,weekday:this.ops.weekday,hour:this.ops.hour,minute:this.ops.minute,second:this.ops.second});}});py.extras={datetime:datetime,time:time,relativedelta:relativedelta,};})(typeof exports==='undefined'?py:exports);;

/* /web/static/lib/jquery.ba-bbq/jquery.ba-bbq.js defined in bundle 'web.assets_backend' */
(function($,window){'$:nomunge';var undefined,aps=Array.prototype.slice,decode=decodeURIComponent,jq_param=$.param,jq_param_sorted,jq_param_fragment,jq_deparam,jq_deparam_fragment,jq_bbq=$.bbq=$.bbq||{},jq_bbq_pushState,jq_bbq_getState,jq_elemUrlAttr,special=$.event.special,str_hashchange='hashchange',str_querystring='querystring',str_fragment='fragment',str_elemUrlAttr='elemUrlAttr',str_href='href',str_src='src',re_params_querystring=/^.*\?|#.*$/g,re_params_fragment,re_fragment,re_no_escape,ajax_crawlable,fragment_prefix,elemUrlAttr_cache={};function is_string(arg){return typeof arg==='string';};function curry(func){var args=aps.call(arguments,1);return function(){return func.apply(this,args.concat(aps.call(arguments)));};};function get_fragment(url){return url.replace(re_fragment,'$2');};function get_querystring(url){return url.replace(/(?:^[^?#]*\?([^#]*).*$)?.*/,'$1');};function jq_param_sub(is_fragment,get_func,url,params,merge_mode){var result,qs,matches,url_params,hash;if(params!==undefined){matches=url.match(is_fragment?re_fragment:/^([^#?]*)\??([^#]*)(#?.*)/);hash=matches[3]||'';if(merge_mode===2&&is_string(params)){qs=params.replace(is_fragment?re_params_fragment:re_params_querystring,'');}else{url_params=jq_deparam(matches[2]);params=is_string(params)?jq_deparam[is_fragment?str_fragment:str_querystring](params):params;qs=merge_mode===2?params:merge_mode===1?$.extend({},params,url_params):$.extend({},url_params,params);qs=jq_param_sorted(qs);if(is_fragment){qs=qs.replace(re_no_escape,decode);}}
result=matches[1]+(is_fragment?fragment_prefix:qs||!matches[1]?'?':'')+qs+hash;}else{result=get_func(url!==undefined?url:location.href);}
return result;};jq_param[str_querystring]=curry(jq_param_sub,0,get_querystring);jq_param[str_fragment]=jq_param_fragment=curry(jq_param_sub,1,get_fragment);jq_param.sorted=jq_param_sorted=function(a,traditional){var arr=[],obj={};$.each(jq_param(a,traditional).split('&'),function(i,v){var key=v.replace(/(?:%5B|=).*$/,''),key_obj=obj[key];if(!key_obj){key_obj=obj[key]=[];arr.push(key);}
key_obj.push(v);});return $.map(arr.sort(),function(v){return obj[v];}).join('&');};jq_param_fragment.noEscape=function(chars){chars=chars||'';var arr=$.map(chars.split(''),encodeURIComponent);re_no_escape=new RegExp(arr.join('|'),'g');};jq_param_fragment.noEscape(',/');jq_param_fragment.ajaxCrawlable=function(state){if(state!==undefined){if(state){re_params_fragment=/^.*(?:#!|#)/;re_fragment=/^([^#]*)(?:#!|#)?(.*)$/;fragment_prefix='#!';}else{re_params_fragment=/^.*#/;re_fragment=/^([^#]*)#?(.*)$/;fragment_prefix='#';}
ajax_crawlable=!!state;}
return ajax_crawlable;};jq_param_fragment.ajaxCrawlable(0);$.deparam=jq_deparam=function(params,coerce){var obj={},coerce_types={'true':!0,'false':!1,'null':null};$.each(params.replace(/\+/g,' ').split('&'),function(j,v){var param=v.split('='),key=decode(param[0]),val,cur=obj,i=0,keys=key.split(']['),keys_last=keys.length-1;if(/\[/.test(keys[0])&&/\]$/.test(keys[keys_last])){keys[keys_last]=keys[keys_last].replace(/\]$/,'');keys=keys.shift().split('[').concat(keys);keys_last=keys.length-1;}else{keys_last=0;}
if(param.length===2){val=decode(param[1]);if(coerce){val=val&&!isNaN(val)?+val:val==='undefined'?undefined:coerce_types[val]!==undefined?coerce_types[val]:val;}
if(keys_last){for(;i<=keys_last;i++){key=keys[i]===''?cur.length:keys[i];cur=cur[key]=i<keys_last?cur[key]||(keys[i+1]&&isNaN(keys[i+1])?{}:[]):val;}}else{if($.isArray(obj[key])){obj[key].push(val);}else if(obj[key]!==undefined){obj[key]=[obj[key],val];}else{obj[key]=val;}}}else if(key){obj[key]=coerce?undefined:'';}});return obj;};function jq_deparam_sub(is_fragment,url_or_params,coerce){if(url_or_params===undefined||typeof url_or_params==='boolean'){coerce=url_or_params;url_or_params=jq_param[is_fragment?str_fragment:str_querystring]();}else{url_or_params=is_string(url_or_params)?url_or_params.replace(is_fragment?re_params_fragment:re_params_querystring,''):url_or_params;}
return jq_deparam(url_or_params,coerce);};jq_deparam[str_querystring]=curry(jq_deparam_sub,0);jq_deparam[str_fragment]=jq_deparam_fragment=curry(jq_deparam_sub,1);$[str_elemUrlAttr]||($[str_elemUrlAttr]=function(obj){return $.extend(elemUrlAttr_cache,obj);})({a:str_href,base:str_href,iframe:str_src,img:str_src,input:str_src,form:'action',link:str_href,script:str_src});jq_elemUrlAttr=$[str_elemUrlAttr];function jq_fn_sub(mode,force_attr,params,merge_mode){if(!is_string(params)&&typeof params!=='object'){merge_mode=params;params=force_attr;force_attr=undefined;}
return this.each(function(){var that=$(this),attr=force_attr||jq_elemUrlAttr()[(this.nodeName||'').toLowerCase()]||'',url=attr&&that.attr(attr)||'';that.attr(attr,jq_param[mode](url,params,merge_mode));});};$.fn[str_querystring]=curry(jq_fn_sub,str_querystring);$.fn[str_fragment]=curry(jq_fn_sub,str_fragment);jq_bbq.pushState=jq_bbq_pushState=function(params,merge_mode){if(is_string(params)&&/^#/.test(params)&&merge_mode===undefined){merge_mode=2;}
var has_args=params!==undefined,url=jq_param_fragment(location.href,has_args?params:{},has_args?merge_mode:2);location.href=url;};jq_bbq.getState=jq_bbq_getState=function(key,coerce){return key===undefined||typeof key==='boolean'?jq_deparam_fragment(key):jq_deparam_fragment(coerce)[key];};jq_bbq.removeState=function(arr){var state={};if(arr!==undefined){state=jq_bbq_getState();$.each($.isArray(arr)?arr:arguments,function(i,v){delete state[v];});}
jq_bbq_pushState(state,2);};special[str_hashchange]=$.extend(special[str_hashchange],{add:function(handleObj){var old_handler;function new_handler(e){var hash=e[str_fragment]=jq_param_fragment();e.getState=function(key,coerce){return key===undefined||typeof key==='boolean'?jq_deparam(hash,key):jq_deparam(hash,coerce)[key];};old_handler.apply(this,arguments);};if($.isFunction(handleObj)){old_handler=handleObj;return new_handler;}else{old_handler=handleObj.handler;handleObj.handler=new_handler;}}});})(jQuery,this);(function($,window,undefined){'$:nomunge';var str_hashchange='hashchange',doc=document,fake_onhashchange,special=$.event.special,doc_mode=doc.documentMode,supports_onhashchange='on'+str_hashchange in window&&(doc_mode===undefined||doc_mode>7);function get_fragment(url){url=url||location.href;return'#'+url.replace(/^[^#]*#?(.*)$/,'$1');};$.fn[str_hashchange]=function(fn){return fn?this.bind(str_hashchange,fn):this.trigger(str_hashchange);};$.fn[str_hashchange].delay=50;special[str_hashchange]=$.extend(special[str_hashchange],{setup:function(){if(supports_onhashchange){return false;}
$(fake_onhashchange.start);},teardown:function(){if(supports_onhashchange){return false;}
$(fake_onhashchange.stop);}});fake_onhashchange=(function(){var self={},timeout_id,last_hash=get_fragment(),fn_retval=function(val){return val;},history_set=fn_retval,history_get=fn_retval;self.start=function(){timeout_id||poll();};self.stop=function(){timeout_id&&clearTimeout(timeout_id);timeout_id=undefined;};function poll(){var hash=get_fragment(),history_hash=history_get(last_hash);if(hash!==last_hash){history_set(last_hash=hash,history_hash);$(window).trigger(str_hashchange);}else if(history_hash!==last_hash){location.href=location.href.replace(/#.*/,'')+history_hash;}
timeout_id=setTimeout(poll,$.fn[str_hashchange].delay);};$.browser.msie&&!supports_onhashchange&&(function(){var iframe,iframe_src;self.start=function(){if(!iframe){iframe_src=$.fn[str_hashchange].src;iframe_src=iframe_src&&iframe_src+get_fragment();iframe=$('<iframe tabindex="-1" title="empty"/>').hide().one('load',function(){iframe_src||history_set(get_fragment());poll();}).attr('src',iframe_src||'javascript:0').insertAfter('body')[0].contentWindow;doc.onpropertychange=function(){try{if(event.propertyName==='title'){iframe.document.title=doc.title;}}catch(e){}};}};self.stop=fn_retval;history_get=function(){return get_fragment(iframe.location.href);};history_set=function(hash,history_hash){var iframe_doc=iframe.document,domain=$.fn[str_hashchange].domain;if(hash!==history_hash){iframe_doc.title=doc.title;iframe_doc.open();domain&&iframe_doc.write('<script>document.domain="'+domain+'"</script>');iframe_doc.close();iframe.location.hash=hash;}};})();return self;})();})(jQuery,this);;

/* /web/static/src/js/core/domain.js defined in bundle 'web.assets_backend' */
odoo.define("web.Domain",function(require){"use strict";var collections=require("web.collections");var pyUtils=require("web.py_utils");var py=window.py;const TRUE_LEAF=[1,'=',1];const FALSE_LEAF=[0,'=',1];const TRUE_DOMAIN=[TRUE_LEAF];const FALSE_DOMAIN=[FALSE_LEAF];function compare(a,b){return JSON.stringify(a)===JSON.stringify(b);}
var Domain=collections.Tree.extend({init:function(domain,evalContext){this._super.apply(this,arguments);if(_.isArray(domain)||_.isString(domain)){this._parse(this.normalizeArray(_.clone(this.stringToArray(domain,evalContext))));}else{this._data=!!domain;}},compute:function(values){if(this._data===true||this._data===false){return this._data;}else if(_.isArray(this._data)){var isParentField=false;var fieldName=this._data[0];let fieldValue;if(compare(this._data,FALSE_LEAF)||compare(this._data,TRUE_LEAF)){fieldValue=this._data[0];}else{var parentField=this._data[0].split('.');if('parent'in values&&parentField.length===2){fieldName=parentField[1];isParentField=parentField[0]==='parent'&&fieldName in values.parent;}
if(!(this._data[0]in values)&&!(isParentField)){throw new Error(_.str.sprintf("Unknown field %s in domain",this._data[0]));}
fieldValue=isParentField?values.parent[fieldName]:values[fieldName];}
switch(this._data[1]){case"=":case"==":return _.isEqual(fieldValue,this._data[2]);case"!=":case"<>":return!_.isEqual(fieldValue,this._data[2]);case"<":return(fieldValue<this._data[2]);case">":return(fieldValue>this._data[2]);case"<=":return(fieldValue<=this._data[2]);case">=":return(fieldValue>=this._data[2]);case"in":return _.intersection(_.isArray(this._data[2])?this._data[2]:[this._data[2]],_.isArray(fieldValue)?fieldValue:[fieldValue],).length!==0;;case"not in":return _.intersection(_.isArray(this._data[2])?this._data[2]:[this._data[2]],_.isArray(fieldValue)?fieldValue:[fieldValue],).length===0;case"like":return(fieldValue.toLowerCase().indexOf(this._data[2].toLowerCase())>=0);case"=like":var regExp=new RegExp(this._data[2].toLowerCase().replace(/([.\[\]\{\}\+\*])/g,'\\\$1').replace(/%/g,'.*'));return regExp.test(fieldValue.toLowerCase());case"ilike":return(fieldValue.indexOf(this._data[2])>=0);case"=ilike":return new RegExp(this._data[2].replace(/%/g,'.*'),'i').test(fieldValue);default:throw new Error(_.str.sprintf("Domain %s uses an unsupported operator",this._data));}}else{switch(this._data){case"&":return _.every(this._children,function(child){return child.compute(values);});case"|":return _.some(this._children,function(child){return child.compute(values);});case"!":return!this._children[0].compute(values);}}},toArray:function(){if(this._data===false){throw new Error("'false' domain cannot be converted to array");}else if(this._data===true){return[];}else{var arr=[this._data];return arr.concat.apply(arr,_.map(this._children,function(child){return child.toArray();}));}},toString:function(){return Domain.prototype.arrayToString(this.toArray());},_parse:function(domain){this._data=(domain.length===0?true:domain[0]);if(domain.length<=1)return;var expected=1;for(var i=1;i<domain.length;i++){if(domain[i]==="&"||domain[i]==="|"){expected++;}else if(domain[i]!=="!"){expected--;}
if(!expected){i++;this._addSubdomain(domain.slice(1,i));this._addSubdomain(domain.slice(i));break;}}},_addSubdomain:function(domain){if(!domain.length)return;var subdomain=new Domain(domain);if(!subdomain._children.length||subdomain._data!==this._data){this._children.push(subdomain);}else{var self=this;_.each(subdomain._children,function(childDomain){self._children.push(childDomain);});}},arrayToString:function(domain){if(_.isString(domain))return domain;return JSON.stringify(domain||[]).replace(/null/g,"None").replace(/false/g,"False").replace(/true/g,"True");},stringToArray:function(domain,evalContext){if(!_.isString(domain))return _.clone(domain);return pyUtils.eval("domain",domain?domain.replace(/%%/g,'%'):"[]",evalContext);},normalizeArray:function(domain){if(domain.length===0){return domain;}
var expected=1;_.each(domain,function(item){if(item==="&"||item==="|"){expected++;}else if(item!=="!"){expected--;}});if(expected<0){domain.unshift.apply(domain,_.times(Math.abs(expected),_.constant("&")));}else if(expected>0){throw new Error(_.str.sprintf("invalid domain %s (missing %d segment(s))",JSON.stringify(domain),expected));}
return domain;},domainToCondition:function(domain){if(!domain.length){return'True';}
var self=this;function consume(stack){var len=stack.length;if(len<=1){return stack;}else if(stack[len-1]==='|'||stack[len-1]==='&'||stack[len-2]==='|'||stack[len-2]==='&'){return stack;}else if(len==2){stack.splice(-2,2,stack[len-2]+' and '+stack[len-1]);}else if(stack[len-3]=='|'){if(len===3){stack.splice(-3,3,stack[len-2]+' or '+stack[len-1]);}else{stack.splice(-3,3,'('+stack[len-2]+' or '+stack[len-1]+')');}}else{stack.splice(-3,3,stack[len-2]+' and '+stack[len-1]);}
consume(stack);}
var stack=[];_.each(domain,function(dom){if(dom==='|'||dom==='&'){stack.push(dom);}else{var operator=dom[1]==='='?'==':dom[1];if(!operator){throw new Error('Wrong operator for this domain');}
if(operator==='!='&&dom[2]===false){stack.push(dom[0]);}else if(dom[2]===null||dom[2]===true||dom[2]===false){stack.push(dom[0]+' '+(operator==='!='?'is not ':'is ')+(dom[2]===null?'None':(dom[2]?'True':'False')));}else{stack.push(dom[0]+' '+operator+' '+JSON.stringify(dom[2]));}
consume(stack);}});if(stack.length!==1){throw new Error('Wrong domain');}
return stack[0];},conditionToDomain:function(condition){if(!condition||condition.match(/^\s*(True)?\s*$/)){return[];}
var ast=py.parse(py.tokenize(condition));function astToStackValue(node){switch(node.id){case'(name)':return node.value;case'.':return astToStackValue(node.first)+'.'+astToStackValue(node.second);case'(string)':return node.value;case'(number)':return node.value;case'(constant)':return node.value==='None'?null:node.value==='True'?true:false;case'[':return _.map(node.first,function(node){return astToStackValue(node);});}}
function astToStack(node){switch(node.id){case'(name)':return[[astToStackValue(node),'!=',false]];case'.':return[[astToStackValue(node.first)+'.'+astToStackValue(node.second),'!=',false]];case'not':return[[astToStackValue(node.first),'=',false]];case'or':return['|'].concat(astToStack(node.first)).concat(astToStack(node.second));case'and':return['&'].concat(astToStack(node.first)).concat(astToStack(node.second));case'(comparator)':if(node.operators.length!==1){throw new Error('Wrong condition to convert in domain');}
var right=astToStackValue(node.expressions[0]);var left=astToStackValue(node.expressions[1]);var operator=node.operators[0];switch(operator){case'is':operator='=';break;case'is not':operator='!=';break;case'==':operator='=';break;}
return[[right,operator,left]];default:throw"Condition cannot be transformed into domain";}}
return astToStack(ast);},});Domain.TRUE_LEAF=TRUE_LEAF;Domain.FALSE_LEAF=FALSE_LEAF;Domain.TRUE_DOMAIN=TRUE_DOMAIN;Domain.FALSE_DOMAIN=FALSE_DOMAIN;return Domain;});;

/* /web/static/src/js/core/mvc.js defined in bundle 'web.assets_backend' */
odoo.define('web.mvc',function(require){"use strict";var ajax=require('web.ajax');var Class=require('web.Class');var mixins=require('web.mixins');var ServicesMixin=require('web.ServicesMixin');var Widget=require('web.Widget');var Model=Class.extend(mixins.EventDispatcherMixin,ServicesMixin,{init:function(parent,params){mixins.EventDispatcherMixin.init.call(this);this.setParent(parent);},get:function(){},load:function(){return Promise.resolve();},});var Renderer=Widget.extend({init:function(parent,state,params){this._super(parent);this.state=state;},});var Controller=Widget.extend({init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.handle=params.handle||null;this.model=model;this.renderer=renderer;},start:function(){return Promise.all([this._super.apply(this,arguments),this._startRenderer()]);},_startRenderer:function(){return this.renderer.appendTo(this.$el);},});var Factory=Class.extend({config:{Model:Model,Renderer:Renderer,Controller:Controller,},init:function(){this.rendererParams={};this.controllerParams={};this.modelParams={};this.loadParams={};},getController:function(parent){var self=this;var model=this.getModel(parent);return Promise.all([this._loadData(model),ajax.loadLibs(this)]).then(function(result){const{state,handle}=result[0];var renderer=self.getRenderer(parent,state);var Controller=self.Controller||self.config.Controller;const initialState=model.get(handle);var controllerParams=_.extend({initialState,handle,},self.controllerParams);var controller=new Controller(parent,model,renderer,controllerParams);model.setParent(controller);renderer.setParent(controller);return controller;});},getModel:function(parent){var Model=this.config.Model;return new Model(parent,this.modelParams);},getRenderer:function(parent,state){var Renderer=this.config.Renderer;return new Renderer(parent,state,this.rendererParams);},_loadData:function(model,options={}){options.withSampleData='withSampleData'in options?options.withSampleData:true;return model.load(this.loadParams).then(function(handle){return{state:model.get(handle,options),handle};});},});return{Factory:Factory,Model:Model,Renderer:Renderer,Controller:Controller,};});;

/* /web/static/src/js/core/py_utils.js defined in bundle 'web.assets_backend' */
odoo.define('web.py_utils',function(require){"use strict";var core=require('web.core');var _t=core._t;var py=window.py;function wrap(value){if(value===null){return py.None;}
switch(typeof value){case'undefined':throw new Error("No conversion for undefined");case'boolean':return py.bool.fromJSON(value);case'number':return py.float.fromJSON(value);case'string':return py.str.fromJSON(value);}
switch(value.constructor){case Object:return wrapping_dict.fromJSON(value);case Array:return wrapping_list.fromJSON(value);}
throw new Error("ValueError: unable to wrap "+value);}
var wrapping_dict=py.type('wrapping_dict',null,{__init__:function(){this._store={};},__getitem__:function(key){var k=key.toJSON();if(!(k in this._store)){throw new Error("KeyError: '"+k+"'");}
return wrap(this._store[k]);},__getattr__:function(key){return this.__getitem__(py.str.fromJSON(key));},__len__:function(){return Object.keys(this._store).length;},__nonzero__:function(){return py.PY_size(this)>0?py.True:py.False;},get:function(){var args=py.PY_parseArgs(arguments,['k',['d',py.None]]);if(!(args.k.toJSON()in this._store)){return args.d;}
return this.__getitem__(args.k);},fromJSON:function(d){var instance=py.PY_call(wrapping_dict);instance._store=d;return instance;},toJSON:function(){return this._store;},});var wrapping_list=py.type('wrapping_list',null,{__init__:function(){this._store=[];},__getitem__:function(index){return wrap(this._store[index.toJSON()]);},__len__:function(){return this._store.length;},__nonzero__:function(){return py.PY_size(this)>0?py.True:py.False;},fromJSON:function(ar){var instance=py.PY_call(wrapping_list);instance._store=ar;return instance;},toJSON:function(){return this._store;},});function wrap_context(context){for(var k in context){if(!context.hasOwnProperty(k)){continue;}
var val=context[k];if(val===null){continue;}
if(val.constructor===Array){context[k]=wrapping_list.fromJSON(val);}else if(val.constructor===Object&&!py.PY_isInstance(val,py.object)){context[k]=wrapping_dict.fromJSON(val);}}
return context;}
function eval_contexts(contexts,evaluation_context){evaluation_context=_.extend(pycontext(),evaluation_context||{});return _(contexts).reduce(function(result_context,ctx){if(_.isEmpty(ctx)){return result_context;}
if(_.isString(ctx)){ctx={__ref:'context',__debug:ctx};}
var evaluated=ctx;switch(ctx.__ref){case'context':evaluation_context.context=evaluation_context;evaluated=py.eval(ctx.__debug,wrap_context(evaluation_context));break;case'compound_context':var eval_context=eval_contexts([ctx.__eval_context]);evaluated=eval_contexts(ctx.__contexts,_.extend({},evaluation_context,eval_context));break;}
_.extend(evaluation_context,evaluated);return _.extend(result_context,evaluated);},{});}
function eval_domains(domains,evaluation_context){evaluation_context=_.extend(pycontext(),evaluation_context||{});var result_domain=[];var need_normalization=(domains&&domains.length>0&&domains[0].length===1&&(domains[0][0]==="|"||domains[0][0]==="!"));_(domains).each(function(domain){if(_.isString(domain)){domain={__ref:'domain',__debug:domain};}
var domain_array_to_combine;switch(domain.__ref){case'domain':evaluation_context.context=evaluation_context;domain_array_to_combine=py.eval(domain.__debug,wrap_context(evaluation_context));break;default:domain_array_to_combine=domain;}
if(need_normalization){domain_array_to_combine=get_normalized_domain(domain_array_to_combine);}
result_domain.push.apply(result_domain,domain_array_to_combine);});return result_domain;}
function get_normalized_domain(domain_array){var expected=1;_.each(domain_array,function(item){if(item==="&"||item==="|"){expected++;}else if(item!=="!"){expected--;}});var new_explicit_ands=_.times(-expected,_.constant("&"));return new_explicit_ands.concat(domain_array);}
function eval_groupbys(contexts,evaluation_context){evaluation_context=_.extend(pycontext(),evaluation_context||{});var result_group=[];_(contexts).each(function(ctx){if(_.isString(ctx)){ctx={__ref:'context',__debug:ctx};}
var group;var evaluated=ctx;switch(ctx.__ref){case'context':evaluation_context.context=evaluation_context;evaluated=py.eval(ctx.__debug,wrap_context(evaluation_context));break;case'compound_context':var eval_context=eval_contexts([ctx.__eval_context]);evaluated=eval_contexts(ctx.__contexts,_.extend({},evaluation_context,eval_context));break;}
group=evaluated.group_by;if(!group){return;}
if(typeof group==='string'){result_group.push(group);}else if(group instanceof Array){result_group.push.apply(result_group,group);}else{throw new Error('Got invalid groupby {{'
+JSON.stringify(group)+'}}');}
_.extend(evaluation_context,evaluated);});return result_group;}
function context_today(){var d=new Date();return py.PY_call(py.extras.datetime.date,[d.getFullYear(),d.getMonth()+1,d.getDate()]);}
function tz_offset(){var offset=new Date().getTimezoneOffset();var kwargs={minutes:py.float.fromJSON(offset)};return py.PY_call(py.extras.datetime.timedelta,[],kwargs);}
function pycontext(){const d=new Date();const today=`${
        String(d.getFullYear()).padStart(4, "0")}-${
        String(d.getMonth() + 1).padStart(2, "0")}-${
        String(d.getDate()).padStart(2, "0")}`;const now=`${
        String(d.getUTCFullYear()).padStart(4, "0")}-${
        String(d.getUTCMonth() + 1).padStart(2, "0")}-${
        String(d.getUTCDate()).padStart(2, "0")} ${
        String(d.getUTCHours()).padStart(2, "0")}:${
        String(d.getUTCMinutes()).padStart(2, "0")}:${
        String(d.getUTCSeconds()).padStart(2, "0")}`;const{datetime,relativedelta,time}=py.extras;return{current_date:today,datetime,time,now,today,relativedelta,context_today,tz_offset,};}
function pyeval(type,object,context){context=_.extend(pycontext(),context||{});switch(type){case'context':case'contexts':if(type==='context'){object=[object];}
return eval_contexts(object,context);case'domain':case'domains':if(type==='domain')
object=[object];return eval_domains(object,context);case'groupbys':return eval_groupbys(object,context);}
throw new Error("Unknow evaluation type "+type);}
function eval_arg(arg){if(typeof arg!=='object'||!arg.__ref){return arg;}
switch(arg.__ref){case'domain':return pyeval('domains',[arg]);case'context':case'compound_context':return pyeval('contexts',[arg]);default:throw new Error(_t("Unknown nonliteral type ")+' '+arg.__ref);}}
function ensure_evaluated(args,kwargs){for(var i=0;i<args.length;++i){args[i]=eval_arg(args[i]);}
for(var k in kwargs){if(!kwargs.hasOwnProperty(k)){continue;}
kwargs[k]=eval_arg(kwargs[k]);}}
function eval_domains_and_contexts(source){return{context:pyeval('contexts',source.contexts||[],source.eval_context),domain:pyeval('domains',source.domains,source.eval_context),group_by:pyeval('groupbys',source.group_by_seq||[],source.eval_context),};}
function py_eval(expr,context){return py.eval(expr,_.extend({},context||{},{"true":true,"false":false,"null":null}));}
function assembleDomains(domains,operator){var ASTs=domains.map(_getPyJSAST);if(operator==="OR"){operator=py.tokenize("'|'")[0];}else{operator=py.tokenize("'&'")[0];}
var result=_getPyJSAST("[]");var normalizedDomains=ASTs.filter(function(AST){return AST.first.length>0;}).map(_normalizeDomainAST);if(normalizedDomains.length>0){result.first=normalizedDomains.reduce(function(acc,ast){return acc.concat(ast.first);},_.times(normalizedDomains.length-1,_.constant(operator)));}
return _formatAST(result);}
function normalizeDomain(domain){return _formatAST(_normalizeDomainAST(_getPyJSAST(domain)));}
var BINDING_POWERS={or:30,and:40,not:50,};function _formatAST(ast,lbp){lbp=lbp||0;switch(ast.id){case"(number)":return String(ast.value);case"(string)":return JSON.stringify(ast.value);case"(constant)":return ast.value;case"(name)":return ast.value;case"[":if(ast.second){return _formatAST(ast.first)+'['+_formatAST(ast.second)+']';}else{var values=ast.first.map(_formatAST);return'['+values.join(', ')+']';}
case"{":var keyValues=ast.first.map(function(kv){return _formatAST(kv[0])+': '+_formatAST(kv[1]);});return'{'+keyValues.join(', ')+'}';case"=":return _formatAST(ast.first)+' '+ast.id+' '+_formatAST(ast.second);case"-":case"+":case"~":case"*":case"**":case"%":case"//":case"and":case"or":if(ast.second){var r=_formatAST(ast.first,ast.lbp)+' '+ast.id+' '+_formatAST(ast.second,ast.lbp);if(ast.lbp<lbp){r='('+r+')';}
return r;}
var actualBP=BINDING_POWERS[ast.id]||130;return ast.id+_formatAST(ast.first,actualBP);case"if":var t=_formatAST(ast.ifTrue)
+' if '+_formatAST(ast.condition)
+' else '+_formatAST(ast.ifFalse);return ast.lbp<lbp?'('+t+')':t;case".":return _formatAST(ast.first,ast.lbp)+'.'+_formatAST(ast.second);case"not":return"not "+_formatAST(ast.first);case"(comparator)":var operator=ast.operators[0];return _formatAST(ast.expressions[0])+' '+operator+' '+_formatAST(ast.expressions[1]);case"(":if(ast.second){return _formatAST(ast.first)+'('+ast.second.map(_formatAST).join(', ')+')';}else{return'('+ast.first.map(_formatAST).join(', ')+')';}}
throw new Error("Unimplemented python construct");}
function _getPyJSAST(domain){return py.parse(py.tokenize(domain));}
function _normalizeDomainAST(domain){var expected=1;for(var i=0;i<domain.first.length;i++){var value=domain.first[i].value;if(value==='&'||value==='|'){expected++;}else if(value!=='!'){expected--;}}
var andOperator=py.tokenize("'&'")[0];if(expected<0){domain.first.unshift.apply(domain.first,_.times(Math.abs(expected),_.constant(andOperator)));}
return domain;}
return{context:pycontext,ensure_evaluated:ensure_evaluated,eval:pyeval,eval_domains_and_contexts:eval_domains_and_contexts,py_eval:py_eval,normalizeDomain:normalizeDomain,assembleDomains:assembleDomains,_getPyJSAST:_getPyJSAST,_formatAST:_formatAST,_normalizeDomainAST:_normalizeDomainAST,};});;

/* /web/static/src/js/chrome/abstract_action.js defined in bundle 'web.assets_backend' */
odoo.define('web.AbstractAction',function(require){"use strict";var ActionMixin=require('web.ActionMixin');const ActionModel=require('web/static/src/js/views/action_model.js');var ControlPanel=require('web.ControlPanel');var Widget=require('web.Widget');const{ComponentWrapper}=require('web.OwlCompatibility');var AbstractAction=Widget.extend(ActionMixin,{config:{ControlPanel:ControlPanel,},hasControlPanel:false,loadControlPanel:false,withSearchBar:false,searchMenuTypes:[],init:function(parent,action,options){this._super(parent);this._title=action.display_name||action.name;this.searchModelConfig={context:Object.assign({},action.context),domain:action.domain||[],env:owl.Component.env,searchMenuTypes:this.searchMenuTypes,};this.extensions={};if(this.hasControlPanel){this.extensions.ControlPanel={actionId:action.id,withSearchBar:this.withSearchBar,};this.viewId=action.search_view_id&&action.search_view_id[0];this.controlPanelProps={action,breadcrumbs:options&&options.breadcrumbs,withSearchBar:this.withSearchBar,searchMenuTypes:this.searchMenuTypes,};}},willStart:async function(){const superPromise=this._super(...arguments);if(this.hasControlPanel){if(this.loadControlPanel){const{context,modelName}=this.searchModelConfig;const options={load_filters:this.searchMenuTypes.includes('favorite')};const{arch,fields,favoriteFilters}=await this.loadFieldView(modelName,context||{},this.viewId,'search',options);const archs={search:arch};const{ControlPanel:controlPanelInfo}=ActionModel.extractArchInfo(archs);Object.assign(this.extensions.ControlPanel,{archNodes:controlPanelInfo.children,favoriteFilters,fields,});this.controlPanelProps.fields=fields;}}
this.searchModel=new ActionModel(this.extensions,this.searchModelConfig);if(this.hasControlPanel){this.controlPanelProps.searchModel=this.searchModel;}
return Promise.all([superPromise,this.searchModel.load(),]);},start:async function(){await this._super(...arguments);if(this.hasControlPanel){if('title'in this.controlPanelProps){this._setTitle(this.controlPanelProps.title);}
this.controlPanelProps.title=this.getTitle();this._controlPanelWrapper=new ComponentWrapper(this,this.config.ControlPanel,this.controlPanelProps);await this._controlPanelWrapper.mount(this.el,{position:'first-child'});}},destroy:function(){this._super.apply(this,arguments);ActionMixin.destroy.call(this);},on_attach_callback:function(){ActionMixin.on_attach_callback.call(this);this.searchModel.on('search',this,this._onSearch);if(this.hasControlPanel){this.searchModel.on('get-controller-query-params',this,this._onGetOwnedQueryParams);}},on_detach_callback:function(){ActionMixin.on_detach_callback.call(this);this.searchModel.off('search',this);if(this.hasControlPanel){this.searchModel.off('get-controller-query-params',this);}},_onSearch:function(){},});return AbstractAction;});;

/* /web/static/src/js/chrome/action_manager.js defined in bundle 'web.assets_backend' */
odoo.define('web.ActionManager',function(require){"use strict";var AbstractAction=require('web.AbstractAction');var concurrency=require('web.concurrency');var Context=require('web.Context');var core=require('web.core');var Dialog=require('web.Dialog');var dom=require('web.dom');var framework=require('web.framework');var pyUtils=require('web.py_utils');var Widget=require('web.Widget');var _t=core._t;var ActionManager=Widget.extend({className:'o_action_manager',custom_events:{breadcrumb_clicked:'_onBreadcrumbClicked',history_back:'_onHistoryBack',push_state:'_onPushState',redirect:'_onRedirect',},init:function(parent,userContext){this._super.apply(this,arguments);this.userContext=userContext||{};this.dp=new concurrency.DropPrevious();this.actions={};this.controllers={};this.controllerStack=[];this.currentDialogController=null;},on_attach_callback:function(){this.isInDOM=true;var currentController=this.getCurrentController();if(currentController){currentController.widget.on_attach_callback();}},on_detach_callback:function(){this.isInDOM=false;var currentController=this.getCurrentController();if(currentController){currentController.widget.on_detach_callback();}},clearUncommittedChanges:function(){var currentController=this.getCurrentController();if(currentController){return currentController.widget.canBeRemoved();}
return Promise.resolve();},doAction:function(action,options){var self=this;options=_.defaults({},options,{additional_context:{},clear_breadcrumbs:false,on_close:function(){},on_reverse_breadcrumb:function(){},pushState:true,replace_last_action:false,});var def;if(_.isString(action)&&core.action_registry.contains(action)){action={type:'ir.actions.client',tag:action};}else if(_.isNumber(action)||_.isString(action)){def=this._loadAction(action,{active_id:options.additional_context.active_id,active_ids:options.additional_context.active_ids,active_model:options.additional_context.active_model,}).then(function(result){action=result;});}
return this.dp.add(Promise.resolve(def)).then(function(){options.clear_breadcrumbs=action.target==='main'||options.clear_breadcrumbs;self._preprocessAction(action,options);return self._handleAction(action,options).then(function(){action.pushState=true;return action;});}).then(function(action){self.trigger_up('webclient_started');return action;});},do_push_state:function(state){this.trigger_up('push_state',{state:state});},getCurrentAction:function(){var controller=this.getCurrentController();return controller?this.actions[controller.actionID]:null;},getCurrentController:function(){var currentControllerID=_.last(this.controllerStack);return currentControllerID?this.controllers[currentControllerID]:null;},loadState:function(state){var action;if(!state.action){return Promise.resolve();}
if(_.isString(state.action)&&core.action_registry.contains(state.action)){action={params:state,tag:state.action,type:'ir.actions.client',};}else{action=state.action;}
return this.doAction(action,{clear_breadcrumbs:true,pushState:false,});},_appendController:function(controller){dom.append(this.$el,controller.widget.$el,{in_DOM:this.isInDOM,callbacks:[{widget:controller.widget}],});if(controller.scrollPosition){this.trigger_up('scrollTo',controller.scrollPosition);}},_closeDialog:function(options){if(this.currentDialogController){this.currentDialogController.dialog.destroy(options);}},_detachCurrentController:function(){var currentController=this.getCurrentController();if(currentController){currentController.scrollPosition=this._getScrollPosition();dom.detach([{widget:currentController.widget}]);}},_executeAction:function(action,options){var self=this;this.actions[action.jsID]=action;if(action.target==='new'){return this._executeActionInDialog(action,options);}
var controller=self.controllers[action.controllerID];return this.clearUncommittedChanges().then(function(){return self.dp.add(self._startController(controller));}).then(function(){if(self.currentDialogController){self._closeDialog({silent:true});}
if(options.on_reverse_breadcrumb){var currentAction=self.getCurrentAction();if(currentAction){currentAction.on_reverse_breadcrumb=options.on_reverse_breadcrumb;}}
self._pushController(controller);self.call('session_storage','setItem','current_action',action._originalAction);return action;}).guardedCatch(function(){self._removeAction(action.jsID);});},_executeActionInDialog:function(action,options){var self=this;var controller=this.controllers[action.controllerID];var widget=controller.widget;return this._startController(controller).then(function(controller){var prevDialogOnClose;if(self.currentDialogController){prevDialogOnClose=self.currentDialogController.onClose;self._closeDialog({silent:true});}
controller.onClose=prevDialogOnClose||options.on_close;var dialog=new Dialog(self,_.defaults({},options,{buttons:[],dialogClass:controller.className,title:action.name,size:action.context.dialog_size,}));dialog.on('closed',self,function(options){options=options||{};self._removeAction(action.jsID);self.currentDialogController=null;if(options.silent!==true){controller.onClose(options.infos);}});controller.dialog=dialog;return dialog.open().opened(function(){self.currentDialogController=controller;widget.setParent(dialog);dom.append(dialog.$el,widget.$el,{in_DOM:true,callbacks:[{widget:dialog},{widget:controller.widget}],});widget.renderButtons(dialog.$footer);dialog.rebindButtonBehavior();return action;});}).guardedCatch(function(){self._removeAction(action.jsID);});},_executeClientAction:function(action,options){var self=this;var ClientAction=core.action_registry.get(action.tag);if(!ClientAction){console.error("Could not find client action "+action.tag,action);return Promise.reject();}
if(!(ClientAction.prototype instanceof Widget)){var next=ClientAction(this,action);if(next){return this.doAction(next,options);}
return Promise.resolve();}
if(!(ClientAction.prototype instanceof AbstractAction)){console.warn('The client action '+action.tag+' should be an instance of AbstractAction!');}
var controllerID=_.uniqueId('controller_');var index=this._getControllerStackIndex(options);options.breadcrumbs=this._getBreadcrumbs(this.controllerStack.slice(0,index));options.controllerID=controllerID;var widget=new ClientAction(this,action,options);var controller={actionID:action.jsID,index:index,jsID:controllerID,title:widget.getTitle(),widget:widget,};this.controllers[controllerID]=controller;action.controllerID=controllerID;var prom=this._executeAction(action,options);prom.then(function(){self._pushState(controllerID,{});});return prom;},_executeCloseAction:function(action,options){var result;if(!this.currentDialogController){result=options.on_close(action.infos);}
this._closeDialog({infos:action.infos});if(action.effect){this.trigger_up('show_effect',action.effect);}
return Promise.resolve(result);},_executeServerAction:function(action,options){var self=this;var runDef=this._rpc({route:'/web/action/run',params:{action_id:action.id,context:action.context||{},},});return this.dp.add(runDef).then(function(action){action=action||{type:'ir.actions.act_window_close'};return self.doAction(action,options);});},_executeURLAction:function(action,options){var url=action.url;if(action.target==='self'){framework.redirect(url);return Promise.resolve();}else{var w=window.open(url,'_blank');if(!w||w.closed||typeof w.closed==='undefined'){var message=_t('A popup window has been blocked. You '+'may need to change your browser settings to allow '+'popup windows for this page.');this.do_warn(false,message,true);}}
options.on_close();return Promise.resolve();},_getBreadcrumbs:function(controllerStack){var self=this;return _.map(controllerStack,function(controllerID){return{controllerID:controllerID,title:self.controllers[controllerID].title,};});},_getControllerStackIndex:function(options){var index;if('index'in options){index=options.index;}else if(options.clear_breadcrumbs){index=0;}else if(options.replace_last_action){index=this.controllerStack.length-1;}else{index=this.controllerStack.length;}
return index;},_getControllerState:function(controllerID){var controller=this.controllers[controllerID];var action=this.actions[controller.actionID];var state={title:controller.widget.getTitle(),};if(action.id){state.action=action.id;}else if(action.type==='ir.actions.client'){state.action=action.tag;var params=_.pick(action.params,function(v){return _.isString(v)||_.isNumber(v);});state=_.extend(params||{},state);}
if(action.context){var active_id=action.context.active_id;if(active_id){state.active_id=active_id;}
var active_ids=action.context.active_ids;if(active_ids&&!(active_ids.length===1&&active_ids[0]===active_id)){state.active_ids=action.context.active_ids.join(',');}}
state=_.extend({},controller.widget.getState(),state);return state;},_getScrollPosition:function(){var scrollPosition;this.trigger_up('getScrollPosition',{callback:function(_scrollPosition){scrollPosition=_scrollPosition;}});return scrollPosition;},_handleAction:function(action,options){if(!action.type){console.error("No type for action",action);return Promise.reject();}
switch(action.type){case'ir.actions.act_url':return this._executeURLAction(action,options);case'ir.actions.act_window_close':return this._executeCloseAction(action,options);case'ir.actions.client':return this._executeClientAction(action,options);case'ir.actions.server':return this._executeServerAction(action,options);default:console.error("The ActionManager can't handle actions of type "+
action.type,action);return Promise.reject();}},_pushController:function(controller){var self=this;this._detachCurrentController();var toDestroy=this.controllerStack.slice(controller.index);toDestroy=_.reject(toDestroy,function(controllerID){return controllerID===controller.jsID||self.controllers[controllerID].actionID===controller.actionID;});this._removeControllers(toDestroy);this.controllerStack=this.controllerStack.slice(0,controller.index);this.controllerStack.push(controller.jsID);this._appendController(controller);this.trigger_up('current_action_updated',{action:this.getCurrentAction(),controller:controller,});core.bus.trigger('close_dialogs');this._toggleFullscreen();},_pushState:function(controllerID,state){var controller=this.controllers[controllerID];if(controller){var action=this.actions[controller.actionID];if(action.target==='new'||action.pushState===false){return;}
state=_.extend({},state,this._getControllerState(controller.jsID));this.trigger_up('push_state',{state:state});}},_loadAction:function(actionID,context){var self=this;return new Promise(function(resolve,reject){self.trigger_up('load_action',{actionID:actionID,context:context,on_success:resolve,});});},_preprocessAction:function(action,options){var context=new Context(this.userContext,options.additional_context,action.context);action.context=pyUtils.eval('context',context);if(action.domain){action.domain=pyUtils.eval('domain',action.domain,action.context);}
action._originalAction=JSON.stringify(action);action.jsID=_.uniqueId('action_');action.pushState=options.pushState;},_removeAction:function(actionID){var action=this.actions[actionID];var controller=this.controllers[action.controllerID];delete this.actions[action.jsID];delete this.controllers[action.controllerID];controller.widget.destroy();},_removeControllers:function(controllerIDs){var self=this;var actionsToRemove=_.map(controllerIDs,function(controllerID){return self.controllers[controllerID].actionID;});_.each(_.uniq(actionsToRemove),this._removeAction.bind(this));},_restoreController:function(controllerID){var self=this;var controller=this.controllers[controllerID];var action=this.actions[controller.actionID];var def;if(action.on_reverse_breadcrumb){def=action.on_reverse_breadcrumb();}
return Promise.resolve(def).then(function(){return Promise.resolve(controller.widget.do_show()).then(function(){var index=_.indexOf(self.controllerStack,controllerID);self._pushController(controller,index);});});},_startController:function(controller){var fragment=document.createDocumentFragment();return controller.widget.appendTo(fragment).then(function(){return controller;});},_toggleFullscreen:function(){var self=this;var fullscreen=_.some(this.controllerStack,function(controllerID){var controller=self.controllers[controllerID];return self.actions[controller.actionID].target==='fullscreen';});this.trigger_up('toggle_fullscreen',{fullscreen:fullscreen});},_onBreadcrumbClicked:function(ev){ev.stopPropagation();this._restoreController(ev.data.controllerID);},_onHistoryBack:function(){if(this.currentDialogController){this._closeDialog();}else{var length=this.controllerStack.length;if(length>1){this._restoreController(this.controllerStack[length-2]);}}},_onPushState:function(ev){if(ev.target!==this){ev.stopPropagation();this._pushState(ev.data.controllerID,ev.data.state);}},_onRedirect:function(ev){this.do_action({type:'ir.actions.act_window',view_mode:'form',res_model:ev.data.res_model,views:[[false,'form']],res_id:ev.data.res_id,});},});return ActionManager;});;

/* /web/static/src/js/chrome/action_manager_act_window.js defined in bundle 'web.assets_backend' */
odoo.define('web.ActWindowActionManager',function(require){"use strict";var ActionManager=require('web.ActionManager');var config=require('web.config');var Context=require('web.Context');var core=require('web.core');var pyUtils=require('web.py_utils');var view_registry=require('web.view_registry');ActionManager.include({custom_events:_.extend({},ActionManager.prototype.custom_events,{execute_action:'_onExecuteAction',switch_view:'_onSwitchView',}),getCurrentController:function(){var currentController=this._super.apply(this,arguments);var action=currentController&&this.actions[currentController.actionID];if(action&&action.type==='ir.actions.act_window'&&!currentController.widget){var lastControllerID=this.controllerStack.pop();currentController=this._super.apply(this,arguments);this.controllerStack.push(lastControllerID);}
return currentController;},loadState:function(state){var _super=this._super.bind(this);var action;var options={clear_breadcrumbs:true,pushState:false,};if(state.action){var currentController=this.getCurrentController();var currentAction=currentController&&this.actions[currentController.actionID];if(currentAction&&currentAction.id===state.action&&currentAction.type==='ir.actions.act_window'){this._closeDialog(true);var viewOptions={currentId:state.id};var viewType=state.view_type||currentController.viewType;return this._switchController(currentAction,viewType,viewOptions);}else if(!core.action_registry.contains(state.action)){var context={};if(state.active_id){context.active_id=state.active_id;}
if(state.active_ids){context.active_ids=state.active_ids.split(',').map(function(id){return parseInt(id,10)||id;});}else if(state.active_id){context.active_ids=[state.active_id];}
context.params=state;action=state.action;options=_.extend(options,{additional_context:context,resID:state.id||undefined,viewType:state.view_type,});}}else if(state.model&&state.id){action={res_model:state.model,res_id:state.id,type:'ir.actions.act_window',views:[[state.view_id||false,'form']],};}else if(state.model&&state.view_type){var storedAction=this.call('session_storage','getItem','current_action');var lastAction=JSON.parse(storedAction||'{}');if(lastAction.res_model===state.model){action=lastAction;options.viewType=state.view_type;}}
if(action){return this.doAction(action,options);}
return _super.apply(this,arguments);},_createViewController:function(action,viewType,viewOptions,options){var self=this;var viewDescr=_.findWhere(action.views,{type:viewType});if(!viewDescr){return Promise.reject();}
options=options||{};var index=options.index||0;var controllerID=options.controllerID||_.uniqueId('controller_');var controller={actionID:action.jsID,className:'o_act_window',index:index,jsID:controllerID,viewType:viewType,};Object.defineProperty(controller,'title',{get:function(){return controller.widget?controller.widget.getTitle():(action.display_name||action.name);},});this.controllers[controllerID]=controller;if(!options.lazy){var flags=action.flags||{};viewOptions=_.extend({},flags,flags[viewType],viewOptions,{action:action,breadcrumbs:this._getBreadcrumbs(this.controllerStack.slice(0,index)),controllerID:controllerID,});var rejection;var view=new viewDescr.Widget(viewDescr.fieldsView,viewOptions);var def=new Promise(function(resolve,reject){rejection=reject;view.getController(self).then(function(widget){if(def.rejected){widget.destroy();}else{controller.widget=widget;resolve(controller);}}).guardedCatch(reject);});def.reject=rejection;def.guardedCatch(function(){def.rejected=true;delete self.controllers[controllerID];});action.controllers[viewType]=def;}else{action.controllers[viewType]=Promise.resolve(controller);}
return action.controllers[viewType];},_destroyWindowAction:function(action){var self=this;for(var c in action.controllers){var controllerDef=action.controllers[c];controllerDef.then(function(controller){delete self.controllers[controller.jsID];if(controller.widget){controller.widget.destroy();}});if(controllerDef.reject){controllerDef.reject();}}},_executeWindowAction:function(action,options){var self=this;return this.dp.add(this._loadViews(action)).then(function(fieldsViews){var views=self._generateActionViews(action,fieldsViews);action._views=action.views;action.views=views;action.controlPanelFieldsView=fieldsViews.search;action.controllers={};var curView=options.viewType&&_.findWhere(views,{type:options.viewType});var lazyView;if(curView){if(!curView.multiRecord&&views[0].multiRecord){lazyView=views[0];}}else{curView=views[0];}
if(config.device.isMobile){if(!curView.isMobileFriendly){curView=self._findMobileView(views,curView.multiRecord)||curView;}
if(lazyView&&!lazyView.isMobileFriendly){lazyView=self._findMobileView(views,lazyView.multiRecord)||lazyView;}}
var lazyViewDef;var lazyControllerID;if(lazyView){options.clear_breadcrumbs=false;lazyViewDef=self._createViewController(action,lazyView.type,{},{lazy:true}).then(function(lazyLoadedController){lazyControllerID=lazyLoadedController.jsID;self.controllerStack.push(lazyLoadedController.jsID);});}
return self.dp.add(Promise.resolve(lazyViewDef)).then(function(){var viewOptions={controllerState:options.controllerState,currentId:options.resID,};var curViewDef=self._createViewController(action,curView.type,viewOptions,{index:self._getControllerStackIndex(options),});return self.dp.add(curViewDef);}).then(function(controller){action.controllerID=controller.jsID;return self._executeAction(action,options);}).guardedCatch(function(){if(lazyControllerID){var index=self.controllerStack.indexOf(lazyControllerID);self.controllerStack=self.controllerStack.slice(0,index);}
self._destroyWindowAction(action);});});},_findMobileView:function(views,multiRecord){return _.findWhere(views,{isMobileFriendly:true,multiRecord:multiRecord,});},_generateActionViews:function(action,fieldsViews){var views=[];_.each(action.views,function(view){var viewType=view[1];var fieldsView=fieldsViews[viewType];var parsedXML=new DOMParser().parseFromString(fieldsView.arch,"text/xml");var key=parsedXML.documentElement.getAttribute('js_class');var View=view_registry.get(key||viewType);if(View){views.push({accessKey:View.prototype.accessKey||View.prototype.accesskey,displayName:View.prototype.display_name,fieldsView:fieldsView,icon:View.prototype.icon,isMobileFriendly:View.prototype.mobile_friendly,multiRecord:View.prototype.multi_record,type:viewType,viewID:view[0],Widget:View,});}else if(config.isDebug('assets')){console.log("View type '"+viewType+"' is not present in the view registry.");}});return views;},_getControllerState:function(controllerID){var state=this._super.apply(this,arguments);var controller=this.controllers[controllerID];var action=this.actions[controller.actionID];if(action.type==='ir.actions.act_window'){state.model=action.res_model;state.view_type=controller.viewType;}
return state;},_handleAction:function(action,options){if(action.type==='ir.actions.act_window'){return this._executeWindowAction(action,options);}
return this._super.apply(this,arguments);},_loadViews:function(action){var inDialog=action.target==='new';var inline=action.target==='inline';var options={action_id:action.id,toolbar:!inDialog&&!inline,};var views=action.views.slice();if(!inline&&!(inDialog&&action.views[0][1]==='form')){options.load_filters=true;var searchviewID=action.search_view_id&&action.search_view_id[0];views.push([searchviewID||false,'search']);}
return this.loadViews(action.res_model,action.context,views,options);},_removeAction:function(actionID){var action=this.actions[actionID];if(action.type==='ir.actions.act_window'){delete this.actions[action.jsID];this._destroyWindowAction(action);}else{this._super.apply(this,arguments);}},_restoreController:function(controllerID){var self=this;var controller=this.controllers[controllerID];var action=this.actions[controller.actionID];if(action.type==='ir.actions.act_window'){return this.clearUncommittedChanges().then(function(){var def=Promise.resolve();if(action.on_reverse_breadcrumb){def=action.on_reverse_breadcrumb();}
return Promise.resolve(def).then(function(){return self._switchController(action,controller.viewType);});});}
return this._super.apply(this,arguments);},_switchController:function(action,viewType,viewOptions){var self=this;var view=_.findWhere(action.views,{type:viewType});if(!view){return Promise.reject();}
var currentController=this.getCurrentController();var index;if(currentController.actionID!==action.jsID){var controller=_.findWhere(this.controllers,{actionID:action.jsID,viewType:viewType,});index=_.indexOf(this.controllerStack,controller.jsID);}else{if(view.multiRecord){index=_.findIndex(this.controllerStack,function(controllerID){return self.controllers[controllerID].actionID===action.jsID;});}else if(!_.findWhere(action.views,{type:currentController.viewType}).multiRecord){index=this.controllerStack.length-1;}else{index=this.controllerStack.length;}}
var newController=function(controllerID){var options={controllerID:controllerID,index:index,};return self._createViewController(action,viewType,viewOptions,options).then(function(controller){return self._startController(controller);});};var controllerDef=action.controllers[viewType];if(controllerDef){controllerDef=controllerDef.then(function(controller){if(!controller.widget){return newController(controller.jsID);}else{return Promise.resolve(controller.widget.willRestore()).then(function(){viewOptions=_.extend({},viewOptions,{breadcrumbs:self._getBreadcrumbs(self.controllerStack.slice(0,index)),shouldUpdateSearchComponents:true,});return controller.widget.reload(viewOptions).then(function(){return controller;});});}},function(){return newController();});}else{controllerDef=newController();}
return this.dp.add(controllerDef).then(function(controller){return self._pushController(controller);});},_onExecuteAction:function(ev){ev.stopPropagation();var self=this;var actionData=ev.data.action_data;var env=ev.data.env;var context=new Context(env.context,actionData.context||{});var recordID=env.currentID||null;var def;if(actionData.special){def=Promise.resolve({type:'ir.actions.act_window_close',infos:{special:true},});}else if(actionData.type==='object'){var args=recordID?[[recordID]]:[env.resIDs];if(actionData.args){try{var additionalArgs=JSON.parse(actionData.args.replace(/'/g,'"'));args=args.concat(additionalArgs);}catch(e){console.error("Could not JSON.parse arguments",actionData.args);}}
def=this._rpc({route:'/web/dataset/call_button',params:{args:args,kwargs:{context:context.eval()},method:actionData.name,model:env.model,},});}else if(actionData.type==='action'){def=this._loadAction(actionData.name,_.extend(pyUtils.eval('context',context),{active_model:env.model,active_ids:env.resIDs,active_id:recordID,}));}else{def=Promise.reject();}
def.guardedCatch(ev.data.on_fail);this.dp.add(def).then(function(action){var effect=false;if(actionData.effect){effect=pyUtils.py_eval(actionData.effect);}
if(action&&action.constructor===Object){var ctx=new Context(_.object(_.reject(_.pairs(env.context),function(pair){return pair[0].match('^(?:(?:default_|search_default_|show_).+|'+'.+_view_ref|group_by|group_by_no_leaf|active_id|'+'active_ids|orderedBy)$')!==null;})));ctx.add(actionData.context||{});ctx.add({active_model:env.model});if(recordID){ctx.add({active_id:recordID,active_ids:[recordID],});}
ctx.add(action.context||{});action.context=ctx;action.effect=effect||action.effect;}else{action={effect:effect,type:'ir.actions.act_window_close',};}
var options={on_close:ev.data.on_closed};if(config.device.isMobile&&actionData.mobile){options=Object.assign({},options,actionData.mobile);}
return self.doAction(action,options).then(ev.data.on_success,ev.data.on_fail);});},_onSwitchView:function(ev){ev.stopPropagation();const viewType=ev.data.view_type;const currentController=this.getCurrentController();if(currentController.jsID===ev.data.controllerID){const action=this.actions[currentController.actionID];const currentControllerState=currentController.widget.exportState();action.controllerState=_.extend({},action.controllerState,currentControllerState);const options={controllerState:action.controllerState,currentId:ev.data.res_id,};if(ev.data.mode){options.mode=ev.data.mode;}
this._switchController(action,viewType,options);}},});});;

/* /web/static/src/js/chrome/action_manager_report.js defined in bundle 'web.assets_backend' */
odoo.define('web.ReportActionManager',function(require){"use strict";var ActionManager=require('web.ActionManager');var core=require('web.core');var framework=require('web.framework');var session=require('web.session');var _t=core._t;var _lt=core._lt;var link='<br><br><a href="http://wkhtmltopdf.org/" target="_blank">wkhtmltopdf.org</a>';var WKHTMLTOPDF_MESSAGES={broken:_lt('Your installation of Wkhtmltopdf seems to be broken. The report will be shown '+'in html.')+link,install:_lt('Unable to find Wkhtmltopdf on this system. The report will be shown in '+'html.')+link,upgrade:_lt('You should upgrade your version of Wkhtmltopdf to at least 0.12.0 in order to '+'get a correct display of headers and footers as well as support for '+'table-breaking between pages.')+link,workers:_lt('You need to start Odoo with at least two workers to print a pdf version of '+'the reports.'),};ActionManager.include({_downloadReport:function(url){var self=this;framework.blockUI();return new Promise(function(resolve,reject){var type='qweb-'+url.split('/')[2];var blocked=!session.get_file({url:'/report/download',data:{data:JSON.stringify([url,type]),context:JSON.stringify(session.user_context),},success:resolve,error:(error)=>{self.call('crash_manager','rpc_error',error);reject();},complete:framework.unblockUI,});if(blocked){var message=_t('A popup window with your report was blocked. You '+'may need to change your browser settings to allow '+'popup windows for this page.');self.do_warn(_t('Warning'),message,true);}});},_triggerDownload:function(action,options,type){var self=this;var reportUrls=this._makeReportUrls(action);return this._downloadReport(reportUrls[type]).then(function(){if(action.close_on_report_download){var closeAction={type:'ir.actions.act_window_close'};return self.doAction(closeAction,_.pick(options,'on_close'));}else{return options.on_close();}});},_executeReportAction:function(action,options){var self=this;if(action.report_type==='qweb-html'){return this._executeReportClientAction(action,options);}else if(action.report_type==='qweb-pdf'){return this.call('report','checkWkhtmltopdf').then(function(state){if(state in WKHTMLTOPDF_MESSAGES){self.do_notify(_t('Report'),WKHTMLTOPDF_MESSAGES[state],true);}
if(state==='upgrade'||state==='ok'){return self._triggerDownload(action,options,'pdf');}else{return self._executeReportClientAction(action,options);}});}else if(action.report_type==='qweb-text'){return self._triggerDownload(action,options,'text');}else{console.error("The ActionManager can't handle reports of type "+
action.report_type,action);return Promise.reject();}},_executeReportClientAction:function(action,options){var urls=this._makeReportUrls(action);var clientActionOptions=_.extend({},options,{context:action.context,data:action.data,display_name:action.display_name,name:action.name,report_file:action.report_file,report_name:action.report_name,report_url:urls.html,});return this.doAction('report.client_action',clientActionOptions);},_handleAction:function(action,options){if(action.type==='ir.actions.report'){return this._executeReportAction(action,options);}
return this._super.apply(this,arguments);},_makeReportUrls:function(action){var reportUrls={html:'/report/html/'+action.report_name,pdf:'/report/pdf/'+action.report_name,text:'/report/text/'+action.report_name,};if(_.isUndefined(action.data)||_.isNull(action.data)||(_.isObject(action.data)&&_.isEmpty(action.data))){if(action.context.active_ids){var activeIDsPath='/'+action.context.active_ids.join(',');reportUrls=_.mapObject(reportUrls,function(value){return value+=activeIDsPath;});}}else{var serializedOptionsPath='?options='+encodeURIComponent(JSON.stringify(action.data));serializedOptionsPath+='&context='+encodeURIComponent(JSON.stringify(action.context));reportUrls=_.mapObject(reportUrls,function(value){return value+=serializedOptionsPath;});}
return reportUrls;},});});;

/* /web/static/src/js/chrome/action_mixin.js defined in bundle 'web.assets_backend' */
odoo.define('web.ActionMixin',function(require){"use strict";const core=require('web.core');const{WidgetAdapterMixin}=require('web.OwlCompatibility');const ActionMixin=Object.assign({},WidgetAdapterMixin,{template:'Action',contentTemplate:null,custom_events:{get_controller_query_params:'_onGetOwnedQueryParams',},_controlPanel:null,_title:'',renderElement:function(){this._super.apply(this,arguments);if(this.contentTemplate){const content=core.qweb.render(this.contentTemplate,{widget:this});this.$('.o_content').append(content);}},willRestore:function(){},canBeRemoved:function(){return Promise.resolve();},getOwnedQueryParams:function(){return{};},getState:function(){return{};},getTitle:function(){return this._title;},renderButtons:function($node){},updateButtons:function(){},updateControlPanel:async function(newProps={}){if(!this.withControlPanel&&!this.hasControlPanel){return;}
const props=Object.assign({},newProps);if('title'in props){this._setTitle(props.title);this.controlPanelProps.title=this.getTitle();delete props.title;}
if('cp_content'in props){this.controlPanelProps.cp_content=Object.assign({},this.controlPanelProps.cp_content,props.cp_content,);delete props.cp_content;}
Object.assign(this.controlPanelProps,props);return this._controlPanelWrapper.update(this.controlPanelProps);},_setTitle:function(title){this._title=title;},_onGetOwnedQueryParams:function(callback){const state=this.getOwnedQueryParams();callback(state||{});},});return ActionMixin;});;

/* /web/static/src/js/chrome/abstract_web_client.js defined in bundle 'web.assets_backend' */
odoo.define('web.AbstractWebClient',function(require){"use strict";var ActionManager=require('web.ActionManager');var concurrency=require('web.concurrency');var core=require('web.core');var config=require('web.config');var WarningDialog=require('web.CrashManager').WarningDialog;var data_manager=require('web.data_manager');var dom=require('web.dom');var KeyboardNavigationMixin=require('web.KeyboardNavigationMixin');var Loading=require('web.Loading');var RainbowMan=require('web.RainbowMan');var session=require('web.session');var utils=require('web.utils');var Widget=require('web.Widget');const env=require('web.env');var _t=core._t;var AbstractWebClient=Widget.extend(KeyboardNavigationMixin,{dependencies:['notification'],events:_.extend({},KeyboardNavigationMixin.events),custom_events:{call_service:'_onCallService',clear_uncommitted_changes:function(e){this.clear_uncommitted_changes().then(e.data.callback);},toggle_fullscreen:function(event){this.toggle_fullscreen(event.data.fullscreen);},current_action_updated:function(ev){this.current_action_updated(ev.data.action,ev.data.controller);},warning:'_onDisplayWarning',load_action:'_onLoadAction',load_views:function(event){var params={model:event.data.modelName,context:event.data.context,views_descr:event.data.views,};return data_manager.load_views(params,event.data.options||{}).then(event.data.on_success);},load_filters:function(event){return data_manager.load_filters(event.data).then(event.data.on_success);},create_filter:'_onCreateFilter',delete_filter:'_onDeleteFilter',push_state:'_onPushState',show_effect:'_onShowEffect',get_session:function(event){if(event.data.callback){event.data.callback(session);}},do_action:function(event){const actionProm=this.do_action(event.data.action,event.data.options||{});this.menu_dp.add(actionProm).then(function(result){if(event.data.on_success){event.data.on_success(result);}}).guardedCatch(function(result){if(event.data.on_fail){event.data.on_fail(result);}});},getScrollPosition:'_onGetScrollPosition',scrollTo:'_onScrollTo',set_title_part:'_onSetTitlePart',webclient_started:'_onWebClientStarted',},init:function(parent){odoo.isReady=false;this.client_options={};this._super(parent);KeyboardNavigationMixin.init.call(this);this.origin=undefined;this._current_state=null;this.menu_dp=new concurrency.DropPrevious();this.action_mutex=new concurrency.Mutex();this.set('title_part',{"zopenerp":"Odoo"});this.env=env;this.env.bus.on('set_title_part',this,this._onSetTitlePart);},start:function(){KeyboardNavigationMixin.start.call(this);var self=this;this.$el.toggleClass('o_touch_device',config.device.touch);this.on("change:title_part",this,this._title_changed);this._title_changed();var state=$.bbq.getState();var current_company_id=session.user_companies.current_company[0]
if(!state.cids){state.cids=utils.get_cookie('cids')!==null?utils.get_cookie('cids'):String(current_company_id);}
const cids=Array.isArray(state.cids)?state.cids[0]:state.cids;let stateCompanyIDS=cids.split(',').map(cid=>parseInt(cid,10));var userCompanyIDS=_.map(session.user_companies.allowed_companies,function(company){return company[0]});if(!_.isEmpty(_.difference(stateCompanyIDS,userCompanyIDS))){state.cids=String(current_company_id);stateCompanyIDS=[current_company_id]}
session.user_context.allowed_company_ids=stateCompanyIDS;$.bbq.pushState(state);$("link[type='image/x-icon']").attr('href','/web/image/res.company/'+String(stateCompanyIDS[0])+'/favicon/')
return session.is_bound.then(function(){self.$el.toggleClass('o_rtl',_t.database.parameters.direction==="rtl");self.bind_events();return Promise.all([self.set_action_manager(),self.set_loading()]);}).then(function(){if(session.session_is_valid()){return self.show_application();}else{return Promise.resolve();}});},destroy:function(){KeyboardNavigationMixin.destroy.call(this);return this._super(...arguments);},bind_events:function(){var self=this;$('.oe_systray').show();this.$el.on('mouseenter','.oe_systray > div:not([data-toggle=tooltip])',function(){$(this).attr('data-toggle','tooltip').tooltip().trigger('mouseenter');});this.$el.on('click','.oe_dropdown_toggle',function(ev){ev.preventDefault();var $toggle=$(this);var doc_width=$(document).width();var $menu=$toggle.siblings('.oe_dropdown_menu');$menu=$menu.length>=1?$menu:$toggle.find('.oe_dropdown_menu');var state=$menu.is('.oe_opened');setTimeout(function(){$toggle.add($menu).toggleClass('oe_opened',!state);if(!state){var offset=$menu.offset();var menu_width=$menu.width();var x=doc_width-offset.left-menu_width-2;if(x<0){$menu.offset({left:offset.left+x}).width(menu_width);}}},0);});core.bus.on('click',this,function(ev){$('.tooltip').remove();if(!$(ev.target).is('input[type=file]')){$(this.el.getElementsByClassName('oe_dropdown_menu oe_opened')).removeClass('oe_opened');$(this.el.getElementsByClassName('oe_dropdown_toggle oe_opened')).removeClass('oe_opened');}});core.bus.on('connection_lost',this,this._onConnectionLost);core.bus.on('connection_restored',this,this._onConnectionRestored);},set_action_manager:function(){var self=this;this.action_manager=new ActionManager(this,session.user_context);this.env.bus.on('do-action',this,payload=>{this.do_action(payload.action,payload.options||{}).then(payload.on_success||(()=>{})).guardedCatch(payload.on_fail||(()=>{}));});var fragment=document.createDocumentFragment();return this.action_manager.appendTo(fragment).then(function(){dom.append(self.$el,fragment,{in_DOM:true,callbacks:[{widget:self.action_manager}],});});},set_loading:function(){this.loading=new Loading(this);return this.loading.appendTo(this.$el);},show_application:function(){},clear_uncommitted_changes:function(){return this.action_manager.clearUncommittedChanges();},destroy_content:function(){_.each(_.clone(this.getChildren()),function(el){el.destroy();});this.$el.children().remove();},set_title:function(title){this.set_title_part("action",title);},set_title_part:function(part,title){var tmp=_.clone(this.get("title_part"));tmp[part]=title;this.set("title_part",tmp);},_title_changed:function(){var parts=_.sortBy(_.keys(this.get("title_part")),function(x){return x;});var tmp="";_.each(parts,function(part){var str=this.get("title_part")[part];if(str){tmp=tmp?tmp+" - "+str:str;}},this);document.title=tmp;},do_action:function(){return this.action_manager.doAction.apply(this.action_manager,arguments);},do_reload:function(){var self=this;return session.session_reload().then(function(){session.load_modules(true).then(self.menu.proxy('do_reload'));});},do_push_state:function(state){if(!state.menu_id&&this.menu){state.menu_id=this.menu.getCurrentPrimaryMenu();}
if('title'in state){this.set_title(state.title);delete state.title;}
var url='#'+$.param(state);this._current_state=$.deparam($.param(state),false);$.bbq.pushState(url);this.trigger('state_pushed',state);},current_action_updated:function(action,controller){},toggle_fullscreen:function(fullscreen){this.$el.toggleClass('o_fullscreen',fullscreen);},getScrollPosition:function(){var scrollingEl=this.action_manager.el.getElementsByClassName('o_content')[0];return{left:scrollingEl?scrollingEl.scrollLeft:0,top:scrollingEl?scrollingEl.scrollTop:0,};},_onCallService:function(ev){const payload=ev.data;let args=payload.args||[];if(payload.service==='ajax'&&payload.method==='rpc'){args=args.concat(ev.target);}
const service=this.env.services[payload.service];const result=service[payload.method].apply(service,args);payload.callback(result);},_onConnectionLost:function(){this.connectionNotificationID=this.displayNotification({message:_t('Connection lost. Trying to reconnect...'),sticky:true});},_onConnectionRestored:function(){if(this.connectionNotificationID){this.call('notification','close',this.connectionNotificationID);this.displayNotification({type:'info',message:_t('Connection restored. You are back online.'),sticky:false});this.connectionNotificationID=false;}},_onCreateFilter:function(e){data_manager.create_filter(e.data.filter).then(e.data.on_success);},_onDeleteFilter:function(e){data_manager.delete_filter(e.data.filterId).then(e.data.on_success);},_onDisplayWarning:function(e){var data=e.data;if(data.type==='dialog'){new WarningDialog(this,{title:data.title,},data).open();}else{data.type='warning';this.call('notification','notify',data);}},_onGetScrollPosition:function(ev){ev.data.callback(this.getScrollPosition());},_onLoadAction:function(event){data_manager.load_action(event.data.actionID,event.data.context).then(event.data.on_success);},_onPushState:function(e){this.do_push_state(_.extend(e.data.state,{'cids':$.bbq.getState().cids}));},_onScrollTo:function(ev){var scrollingEl=this.action_manager.el.getElementsByClassName('o_content')[0];if(!scrollingEl){return;}
var offset={top:ev.data.top,left:ev.data.left||0};if(!offset.top){offset=dom.getPosition(document.querySelector(ev.data.selector));offset.top-=dom.getPosition(scrollingEl).top;}
scrollingEl.scrollTop=offset.top;scrollingEl.scrollLeft=offset.left;},_onSetTitlePart:function(payload){var part=payload.part;var title=payload.title;this.set_title_part(part,title);},_onShowEffect:function(e){var data=e.data||{};var type=data.type||'rainbow_man';if(type==='rainbow_man'){if(session.show_effect){new RainbowMan(data).appendTo(this.$el);}else{this.call('notification','notify',{title:"",message:data.message,sticky:false});}}else{throw new Error('Unknown effect type: '+type);}},_onWebClientStarted:function(){if(!this.isStarted){this.action_manager.$el.on('scroll',core.bus.trigger.bind(core.bus,'scroll'));odoo.isReady=true;core.bus.trigger('web_client_ready');if(session.uid===1){this.$el.addClass('o_is_superuser');}
this.isStarted=true;}}});return AbstractWebClient;});;

/* /web/static/src/js/chrome/web_client.js defined in bundle 'web.assets_backend' */
odoo.define('web.WebClient',function(require){"use strict";var AbstractWebClient=require('web.AbstractWebClient');var config=require('web.config');var core=require('web.core');var data_manager=require('web.data_manager');var dom=require('web.dom');var Menu=require('web.Menu');var session=require('web.session');return AbstractWebClient.extend({custom_events:_.extend({},AbstractWebClient.prototype.custom_events,{app_clicked:'on_app_clicked',menu_clicked:'on_menu_clicked',}),start:function(){core.bus.on('change_menu_section',this,function(menuID){this.do_push_state(_.extend($.bbq.getState(),{menu_id:menuID,}));});return this._super.apply(this,arguments);},bind_events:function(){var self=this;this._super.apply(this,arguments);this.$el.on('click','a',function(ev){var disable_anchor=ev.target.attributes.disable_anchor;if(disable_anchor&&disable_anchor.value==="true"){return;}
var href=ev.target.attributes.href;if(href){if(href.value[0]==='#'&&href.value.length>1){if(self.$("[id='"+href.value.substr(1)+"']").length){ev.preventDefault();self.trigger_up('scrollTo',{'selector':href.value});}}}});},load_menus:function(){return(odoo.loadMenusPromise||odoo.reloadMenus()).then(function(menuData){for(var i=0;i<menuData.children.length;i++){var child=menuData.children[i];if(child.action===false){while(child.children&&child.children.length){child=child.children[0];if(child.action){menuData.children[i].action=child.action;break;}}}}
odoo.loadMenusPromise=null;return menuData;});},show_application:function(){var self=this;this.set_title();return this.menu_dp.add(this.instanciate_menu_widgets()).then(function(){$(window).bind('hashchange',self.on_hashchange);var state=$.bbq.getState(true);if(_.keys(state).length===1&&_.keys(state)[0]==="cids"){return self.menu_dp.add(self._rpc({model:'res.users',method:'read',args:[session.uid,["action_id"]],})).then(function(result){var data=result[0];if(data.action_id){return self.do_action(data.action_id[0]).then(function(){self.menu.change_menu_section(self.menu.action_id_to_primary_menu_id(data.action_id[0]));});}else{self.menu.openFirstApp();}});}else{return self.on_hashchange();}});},instanciate_menu_widgets:function(){var self=this;var proms=[];return this.load_menus().then(function(menuData){self.menu_data=menuData;if(self.menu){self.menu.destroy();}
self.menu=new Menu(self,menuData);proms.push(self.menu.prependTo(self.$el));return Promise.all(proms);});},on_hashchange:function(event){if(this._ignore_hashchange){this._ignore_hashchange=false;return Promise.resolve();}
var self=this;return this.clear_uncommitted_changes().then(function(){var stringstate=$.bbq.getState(false);if(!_.isEqual(self._current_state,stringstate)){var state=$.bbq.getState(true);if(state.action||(state.model&&(state.view_type||state.id))){return self.menu_dp.add(self.action_manager.loadState(state,!!self._current_state)).then(function(){if(state.menu_id){if(state.menu_id!==self.menu.current_primary_menu){core.bus.trigger('change_menu_section',state.menu_id);}}else{var action=self.action_manager.getCurrentAction();if(action){var menu_id=self.menu.action_id_to_primary_menu_id(action.id);core.bus.trigger('change_menu_section',menu_id);}}});}else if(state.menu_id){var action_id=self.menu.menu_id_to_action_id(state.menu_id);return self.menu_dp.add(self.do_action(action_id,{clear_breadcrumbs:true})).then(function(){core.bus.trigger('change_menu_section',state.menu_id);});}else{self.menu.openFirstApp();}}
self._current_state=stringstate;},function(){if(event){self._ignore_hashchange=true;window.location=event.originalEvent.oldURL;}});},on_app_clicked:function(ev){var self=this;return this.menu_dp.add(data_manager.load_action(ev.data.action_id)).then(function(result){return self.action_mutex.exec(function(){var completed=new Promise(function(resolve,reject){var options=_.extend({},ev.data.options,{clear_breadcrumbs:true,action_menu_id:ev.data.menu_id,});Promise.resolve(self._openMenu(result,options)).then(function(){self._on_app_clicked_done(ev).then(resolve).guardedCatch(reject);}).guardedCatch(function(){resolve();});setTimeout(function(){resolve();},2000);});return completed;});});},_on_app_clicked_done:function(ev){core.bus.trigger('change_menu_section',ev.data.menu_id);return Promise.resolve();},on_menu_clicked:function(ev){var self=this;return this.menu_dp.add(data_manager.load_action(ev.data.action_id)).then(function(result){self.$el.removeClass('o_mobile_menu_opened');return self.action_mutex.exec(function(){var completed=new Promise(function(resolve,reject){Promise.resolve(self._openMenu(result,{clear_breadcrumbs:true,})).then(resolve).guardedCatch(reject);setTimeout(function(){resolve();},2000);});return completed;});}).guardedCatch(function(){self.$el.removeClass('o_mobile_menu_opened');});},_openMenu:function(action,options){return this.do_action(action,options);},});});;

/* /web/static/src/js/chrome/root_widget.js defined in bundle 'web.assets_backend' */
odoo.define('root.widget',function(require){"use strict";var webClient=require('web.web_client');return webClient;});;

/* /web/static/src/js/_deprecated/data.js defined in bundle 'web.assets_backend' */
odoo.define('web.data',function(require){"use strict";var Class=require('web.Class');var Context=require('web.Context');var concurrency=require('web.concurrency');var mixins=require('web.mixins');var session=require('web.session');var translation=require('web.translation');var pyUtils=require('web.py_utils');var _t=translation._t;function serialize_sort(criterion){return _.map(criterion,function(criteria){if(criteria[0]==='-'){return criteria.slice(1)+' DESC';}
return criteria+' ASC';}).join(', ');}
function deserialize_sort(criterion){return _.map(criterion,function(criteria){var split=_.without(criteria.split(' '),'');return(split[1]&&split[1].toLowerCase()==='desc'?'-':'')+split[0];});}
var Query=Class.extend({init:function(model,fields){this._model=model;this._fields=fields;this._filter=[];this._context={};this._lazy=true;this._limit=false;this._offset=0;this._order_by=[];},clone:function(to_set){to_set=to_set||{};var q=new Query(this._model,this._fields);q._context=this._context;q._filter=this._filter;q._lazy=this._lazy;q._limit=this._limit;q._offset=this._offset;q._order_by=this._order_by;for(var key in to_set){if(!to_set.hasOwnProperty(key)){continue;}
switch(key){case'filter':q._filter=(q._filter||[]).concat(to_set.filter||[]);break;case'context':q._context=new Context(q._context,to_set.context);break;case'lazy':case'limit':case'offset':case'order_by':q['_'+key]=to_set[key];}}
return q;},_execute:function(options){var self=this;options=options||{};return session.rpc('/web/dataset/search_read',{model:this._model.name,fields:this._fields||false,domain:pyUtils.eval('domains',[this._model.domain(this._filter)]),context:pyUtils.eval('contexts',[this._model.context(this._context)]),offset:this._offset,limit:this._limit,sort:serialize_sort(this._order_by)},options).then(function(results){self._count=results.length;return results.records;},null);},first:function(options){var self=this;return this.clone({limit:1})._execute(options).then(function(records){delete self._count;if(records.length){return records[0];}
return null;});},all:function(options){return this._execute(options);},count:function(){if(this._count!==undefined){return Promise.resolve(this._count);}
return this._model.call('search_count',[this._filter],{context:this._model.context(this._context)});},group_by:function(grouping){var ctx=pyUtils.eval('context',this._model.context(this._context));if(_.isUndefined(grouping)){grouping=[];}
if(!(grouping instanceof Array)){grouping=_.toArray(arguments);}
if(_.isEmpty(grouping)&&!ctx.group_by_no_leaf){return null;}
var raw_fields=_.map(grouping.concat(this._fields||[]),function(field){return field.split(':')[0];});var self=this;return this._model.call('read_group',{groupby:grouping,fields:_.uniq(raw_fields),domain:this._model.domain(this._filter),context:ctx,offset:this._offset,lazy:this._lazy,limit:this._limit,orderby:serialize_sort(this._order_by)||false}).then(function(results){return _(results).map(function(result){result.__context=result.__context||{};result.__context.group_by=result.__context.group_by||[];_.defaults(result.__context,ctx);var grouping_fields=self._lazy?[grouping[0]]:grouping;return new QueryGroup(self._model.name,grouping_fields,result);});});},context:function(context){if(!context){return this;}
return this.clone({context:context});},filter:function(domain){if(!domain){return this;}
return this.clone({filter:domain});},lazy:function(lazy){return this.clone({lazy:lazy});},limit:function(limit){return this.clone({limit:limit});},offset:function(offset){return this.clone({offset:offset});},order_by:function(fields){if(fields===undefined){return this;}
if(!(fields instanceof Array)){fields=_.toArray(arguments);}
if(_.isEmpty(fields)){return this;}
return this.clone({order_by:fields});}});var QueryGroup=Class.extend({init:function(model,grouping_fields,read_group_group){var fixed_group=_.extend({__context:{group_by:[]},__domain:[]},read_group_group);var count_key=(grouping_fields[0]&&grouping_fields[0].split(':')[0])+'_count';var aggregates={};for(var key in fixed_group){if(fixed_group.hasOwnProperty(key)){if(!(key.indexOf('__')===0||_.contains(grouping_fields,key)||(key===count_key))){aggregates[key]=fixed_group[key]||0;}}}
this.model=new Model(model,fixed_group.__context,fixed_group.__domain);var group_size=fixed_group[count_key]||fixed_group.__count||0;var leaf_group=fixed_group.__context.group_by.length===0;var value=(grouping_fields.length===1)?fixed_group[grouping_fields[0]]:_.map(grouping_fields,function(field){return fixed_group[field];});var grouped_on=(grouping_fields.length===1)?grouping_fields[0]:grouping_fields;this.attributes={folded:!!(fixed_group.__fold),grouped_on:grouped_on,length:group_size,value:value,has_children:!(leaf_group&&fixed_group.__context.group_by_no_leaf),aggregates:aggregates};},get:function(key){return this.attributes[key];},subgroups:function(){return this.model.query().group_by(this.model.context().group_by);},query:function(){return this.model.query.apply(this.model,arguments);}});var DataSet=Class.extend(mixins.PropertiesMixin,{init:function(parent,model,context){mixins.PropertiesMixin.init.call(this);this.setParent(parent);this.model=model;this.context=context||{};this.index=null;this._sort=[];this._model=new Model(model,context);this.orderer=new concurrency.DropMisordered();},previous:function(){this.index-=1;if(!this.ids.length){this.index=null;}else if(this.index<0){this.index=this.ids.length-1;}
return this;},next:function(){this.index+=1;if(!this.ids.length){this.index=null;}else if(this.index>=this.ids.length){this.index=0;}
return this;},select_id:function(id){var idx=this.get_id_index(id);if(idx===null){return false;}else{this.index=idx;return true;}},get_id_index:function(id){for(var i=0,ii=this.ids.length;i<ii;i++){if(id==this.ids[i]){return i;}}
return null;},read_ids:function(ids,fields,options){if(_.isEmpty(ids)){return Promise.resolve([]);}
options=options||{};var method='read';var ids_arg=ids;var context=this.get_context(options.context);if(options.check_access_rule===true){method='search_read';ids_arg=[['id','in',ids]];context=new Context(context,{active_test:false});}
return this._model.call(method,[ids_arg,fields||false],{context:context}).then(function(records){if(records.length<=1){return records;}
var indexes={};for(var i=0;i<ids.length;i++){indexes[ids[i]]=i;}
records.sort(function(a,b){return indexes[a.id]-indexes[b.id];});return records;});},read_slice:function(fields,options){var self=this;options=options||{};var query=this._model.query(fields).limit(options.limit||false).offset(options.offset||0).all();var prom=this.orderer.add(query);prom.then(function(records){self.ids=_(records).pluck('id');});return prom;},read_index:function(fields,options){options=options||{};return this.read_ids([this.ids[this.index]],fields,options).then(function(records){if(_.isEmpty(records)){return Promise.reject();}
return records[0];});},default_get:function(fields,options){options=options||{};return this._model.call('default_get',[fields],{context:this.get_context(options.context)});},create:function(data,options){var self=this;var prom=this._model.call('create',[data],{context:this.get_context()});prom.then(function(){self.trigger('dataset_changed',data,options);});return prom;},write:function(id,data,options){options=options||{};var self=this;var prom=this._model.call('write',[[id],data],{context:this.get_context(options.context)});prom.then(function(){self.trigger('dataset_changed',id,data,options);});return prom;},unlink:function(ids){var self=this;var prom=this._model.call('unlink',[ids],{context:this.get_context()});prom.then(function(){self.trigger('dataset_changed',ids);});return prom;},call:function(method,args){return this._model.call(method,args);},call_button:function(method,args){return this._model.call_button(method,args);},name_get:function(ids){return this._model.call('name_get',[ids],{context:this.get_context()});},name_search:function(name,domain,operator,limit){return this._model.call('name_search',{name:name||'',args:domain||false,operator:operator||'ilike',context:this._model.context(),limit:limit||0});},name_create:function(name,context){return this._model.call('name_create',[name],{context:this.get_context(context)});},get_context:function(request_context){return this._model.context(request_context);},sort:function(field,force_reverse){if(!field){return serialize_sort(this._sort);}
var reverse=force_reverse||(this._sort[0]===field);this._sort.splice.apply(this._sort,[0,this._sort.length].concat(_.without(this._sort,field,'-'+field)));this._sort.unshift((reverse?'-':'')+field);return undefined;},set_sort:function(fields_list){this._sort=deserialize_sort(fields_list);},size:function(){return this.ids.length;},alter_ids:function(n_ids){this.ids=n_ids;},remove_ids:function(ids){this.alter_ids(_(this.ids).difference(ids));},add_ids:function(ids,at){var args=[at,0].concat(_.difference(ids,this.ids));this.ids.splice.apply(this.ids,args);},resequence:function(ids,options){options=options||{};return session.rpc('/web/dataset/resequence',{model:this.model,ids:ids,context:pyUtils.eval('context',this.get_context(options.context)),}).then(function(results){return results;});},});var DataSetStatic=DataSet.extend({init:function(parent,model,context,ids){this._super(parent,model,context);this.ids=ids||[];},read_slice:function(fields,options){options=options||{};fields=fields||{};var offset=options.offset||0,limit=options.limit||false;var end_pos=limit&&limit!==-1?offset+limit:this.ids.length;return this.read_ids(this.ids.slice(offset,end_pos),fields,options);},set_ids:function(ids){this.ids=ids;if(ids.length===0){this.index=null;}else if(this.index>=ids.length-1){this.index=ids.length-1;}},unlink:function(ids){this.set_ids(_.without.apply(null,[this.ids].concat(ids)));this.trigger('unlink',ids);return Promise.resolve({result:true});},});var DataSetSearch=DataSet.extend({init:function(parent,model,context,domain){this._super(parent,model,context);this.domain=domain||[];this._length=null;this.ids=[];this._model=new Model(model,context,domain);},read_slice:function(fields,options){options=options||{};var self=this;var q=this._model.query(fields||false).filter(options.domain).context(options.context).offset(options.offset||0).limit(options.limit||false);q=q.order_by.apply(q,this._sort);var prom=this.orderer.add(q.all());prom.then(function(records){q.count().then(function(count){self._length=count;});self.ids=_(records).pluck('id');});return prom;},get_domain:function(other_domain){return this._model.domain(other_domain);},alter_ids:function(ids){this._super(ids);if(this.index!==null&&this.index>=this.ids.length){this.index=this.ids.length>0?this.ids.length-1:0;}},remove_ids:function(ids){var before=this.ids.length;this._super(ids);if(this._length){this._length-=(before-this.ids.length);}},add_ids:function(ids,at){var before=this.ids.length;this._super(ids,at);if(this._length){this._length+=(this.ids.length-before);}},unlink:function(ids,callback,error_callback){var self=this;var prom=this._super(ids);prom.then(function(){self.remove_ids(ids);self.trigger("dataset_changed",ids,callback,error_callback);});return prom;},size:function(){if(this._length!==null){return this._length;}
return this._super();}});var data={Query:Query,DataSet:DataSet,DataSetStatic:DataSetStatic,DataSetSearch:DataSetSearch,noDisplayContent:"<em class=\"text-warning\">"+_t("Unnamed")+"</em>",};var Model=Class.extend({init:function(name,context,domain){this.name=name;this._context=context||{};this._domain=domain||[];},get_func:function(method_name){var self=this;return function(){return self.call(method_name,_.toArray(arguments));};},query:function(fields){return new data.Query(this,fields);},domain:function(domain){if(!domain){return this._domain;}
return this._domain.concat(domain);},context:function(context){return new Context(session.user_context,this._context,context||{});},call:function(method,args,kwargs,options){args=args||[];kwargs=kwargs||{};if(!_.isArray(args)){kwargs=args;args=[];}
pyUtils.ensure_evaluated(args,kwargs);var call_kw='/web/dataset/call_kw/'+this.name+'/'+method;return session.rpc(call_kw,{model:this.name,method:method,args:args,kwargs:kwargs},options);},call_button:function(method,args){pyUtils.ensure_evaluated(args,{});var context=(args||[]).length>0?args.pop():{};return session.rpc('/web/dataset/call_button',{model:this.name,method:method,args:args||[],kwargs:{context:context},});},});return data;});;

/* /web/static/src/js/core/context.js defined in bundle 'web.assets_backend' */
odoo.define('web.Context',function(require){"use strict";var Class=require('web.Class');var pyUtils=require('web.py_utils');var Context=Class.extend({init:function(){this.__ref="compound_context";this.__contexts=[];this.__eval_context=null;var self=this;_.each(arguments,function(x){self.add(x);});},add:function(context){this.__contexts.push(context);return this;},eval:function(){return pyUtils.eval('context',this);},set_eval_context:function(evalContext){for(var key in evalContext){if(evalContext[key]instanceof moment){evalContext[key]=evalContext[key].toJSON();}}
this.__eval_context=evalContext;return this;},});return Context;});;

/* /web/static/src/js/core/data_comparison_utils.js defined in bundle 'web.assets_backend' */
odoo.define('web.dataComparisonUtils',function(require){"use strict";var fieldUtils=require('web.field_utils');var Class=require('web.Class');var DateClasses=Class.extend({init:function(dateSets){this.dateSets=dateSets;this.referenceIndex=null;for(var i=0;i<dateSets.length;i++){var dateSet=dateSets[i];if(dateSet.length&&this.referenceIndex===null){this.referenceIndex=i;}}},dateClass:function(datesetIndex,date){return this.dateSets[datesetIndex].indexOf(date);},dateClassMembers:function(dateClass){return _.uniq(_.compact(this.dateSets.map(function(dateSet){return dateSet[dateClass];})));},representative:function(dateClass,index){index=index===undefined?this.referenceIndex:index;return this.dateSets[index][dateClass];},});function computeVariation(value,comparisonValue){if(isNaN(value)||isNaN(comparisonValue)){return NaN;}
if(comparisonValue===0){if(value===0){return 0;}else if(value>0){return 1;}else{return-1;}}
return(value-comparisonValue)/Math.abs(comparisonValue);}
function renderVariation(variation,field,options){var className='o_variation';var value;if(!isNaN(variation)){if(variation>0){className+=' o_positive';}else if(variation<0){className+=' o_negative';}else{className+=' o_null';}
value=fieldUtils.format.percentage(variation,field,options);}else{value='-';}
return $('<div>',{class:className,html:value});}
function renderComparison($node,value,comparisonValue,variation,formatter,field,options){var $variation=renderVariation(variation,field,options);$node.append($variation);if(!isNaN(variation)){$node.append($('<div>',{class:'o_comparison'}).html(formatter(value,field,options)+' <span>vs</span> '+formatter(comparisonValue,field,options)));}}
return{computeVariation:computeVariation,DateClasses:DateClasses,renderComparison:renderComparison,renderVariation:renderVariation,};});;

/* /web/static/src/js/core/math_utils.js defined in bundle 'web.assets_backend' */
odoo.define('web.mathUtils',function(){"use strict";function _cartesian(){var args=Array.prototype.slice.call(arguments);if(args.length===0){return[undefined];}
var firstArray=args[0].map(function(elem){return[elem];});if(args.length===1){return firstArray;}
var productOfOtherArrays=_cartesian.apply(null,args.slice(1));var result=firstArray.reduce(function(acc,elem){return acc.concat(productOfOtherArrays.map(function(tuple){return elem.concat(tuple);}));},[]);return result;}
function cartesian(){var args=Array.prototype.slice.call(arguments);if(args.length===0){return[undefined];}else if(args.length===1){return args[0];}else{return _cartesian.apply(null,args);}}
function sections(array){var sections=[];for(var i=0;i<array.length+1;i++){sections.push(array.slice(0,i));}
return sections;}
return{cartesian:cartesian,sections:sections,};});;

/* /web/static/src/js/core/misc.js defined in bundle 'web.assets_backend' */
odoo.define('web.framework',function(require){"use strict";var core=require('web.core');var ajax=require('web.ajax');var Widget=require('web.Widget');var disableCrashManager=require('web.CrashManager').disable;const{sprintf}=require('web.utils')
var _t=core._t;var messages_by_seconds=function(){return[[0,_t("Loading...")],[20,_t("Still loading...")],[60,_t("Still loading...<br />Please be patient.")],[120,_t("Don't leave yet,<br />it's still loading...")],[300,_t("You may not believe it,<br />but the application is actually loading...")],[420,_t("Take a minute to get a coffee,<br />because it's loading...")],[3600,_t("Maybe you should consider reloading the application by pressing F5...")]];};var Throbber=Widget.extend({template:"Throbber",start:function(){this.start_time=new Date().getTime();this.act_message();},act_message:function(){var self=this;setTimeout(function(){if(self.isDestroyed())
return;var seconds=(new Date().getTime()-self.start_time)/1000;var mes;_.each(messages_by_seconds(),function(el){if(seconds>=el[0])
mes=el[1];});self.$(".oe_throbber_message").html(mes);self.act_message();},1000);},});if($.blockUI){$.blockUI.defaults.baseZ=1100;$.blockUI.defaults.message='<div class="openerp oe_blockui_spin_container" style="background-color: transparent;">';$.blockUI.defaults.css.border='0';$.blockUI.defaults.css["background-color"]='';}
function blockAccessKeys(){var elementWithAccessKey=[];elementWithAccessKey=document.querySelectorAll('[accesskey]');_.each(elementWithAccessKey,function(elem){elem.setAttribute("data-accesskey",elem.getAttribute('accesskey'));elem.removeAttribute('accesskey');});}
function unblockAccessKeys(){var elementWithDataAccessKey=[];elementWithDataAccessKey=document.querySelectorAll('[data-accesskey]');_.each(elementWithDataAccessKey,function(elem){elem.setAttribute('accesskey',elem.getAttribute('data-accesskey'));elem.removeAttribute('data-accesskey');});}
var throbbers=[];function blockUI(){var tmp=$.blockUI.apply($,arguments);var throbber=new Throbber();throbbers.push(throbber);throbber.appendTo($(".oe_blockui_spin_container"));$(document.body).addClass('o_ui_blocked');blockAccessKeys();return tmp;}
function unblockUI(){_.invoke(throbbers,'destroy');throbbers=[];$(document.body).removeClass('o_ui_blocked');unblockAccessKeys();return $.unblockUI.apply($,arguments);}
function redirect(url,wait){disableCrashManager();var load=function(){var old=""+window.location;var old_no_hash=old.split("#")[0];var url_no_hash=url.split("#")[0];location.assign(url);if(old_no_hash===url_no_hash){location.reload(true);}};var wait_server=function(){ajax.rpc("/web/webclient/version_info",{}).then(load).guardedCatch(function(){setTimeout(wait_server,250);});};if(wait){setTimeout(wait_server,1000);}else{load();}}
function Reload(parent,action){var params=action.params||{};var menu_id=params.menu_id||false;var l=window.location;var sobj=$.deparam(l.search.substr(1));if(params.url_search){sobj=_.extend(sobj,params.url_search);}
var search='?'+$.param(sobj);var hash=l.hash;if(menu_id){hash="#menu_id="+menu_id;}
var url=l.protocol+"//"+l.host+l.pathname+search+hash;core.bus.trigger('clear_cache');redirect(url,params.wait);}
core.action_registry.add("reload",Reload);function Home(parent,action){var url='/'+(window.location.search||'');redirect(url,action&&action.params&&action.params.wait);}
core.action_registry.add("home",Home);function login(){redirect('/web/login');}
core.action_registry.add("login",login);function logout(){redirect('/web/session/logout');return new Promise();}
core.action_registry.add("logout",logout);function displayNotification(parent,action){let{title='',message='',links=[],type='info',sticky=false,next}=action.params||{};links=links.map(({url,label})=>`<a href="${_.escape(url)}" target="_blank">${_.escape(label)}</a>`)
parent.displayNotification({title:_.escape(title),message:sprintf(_.escape(message),...links),type,sticky});return next;}
core.action_registry.add("display_notification",displayNotification);function ReloadContext(parent,action){ajax.rpc("/web/session/get_session_info",{}).then(function(){Reload(parent,action);});}
core.action_registry.add("reload_context",ReloadContext);if(!document.contains){document.contains=function contains(node){if(!(0 in arguments)){throw new TypeError('1 argument is required');}
do{if(this===node){return true;}}while(node=node&&node.parentNode);return false;};}
return{blockUI:blockUI,unblockUI:unblockUI,redirect:redirect,};});;

/* /web/static/src/js/services/crash_manager_service.js defined in bundle 'web.assets_backend' */
odoo.define('crash_manager.service',function(require){'use strict';const core=require('web.core');const CrashManager=require('web.CrashManager').CrashManager;core.serviceRegistry.add('crash_manager',CrashManager);});;

/* /web/static/src/js/services/data_manager.js defined in bundle 'web.assets_backend' */
odoo.define('web.DataManager',function(require){"use strict";var config=require('web.config');var core=require('web.core');var rpc=require('web.rpc');var session=require('web.session');var utils=require('web.utils');return core.Class.extend({init:function(){this._init_cache();core.bus.on('clear_cache',this,this.invalidate.bind(this));},_init_cache:function(){this._cache={actions:{},filters:{},views:{},};},invalidate:function(){session.invalidateCacheKey('load_menus');this._init_cache();},load_action:function(action_id,additional_context){var self=this;var key=this._gen_key(action_id,additional_context||{});if(config.isDebug('assets')||!this._cache.actions[key]){this._cache.actions[key]=rpc.query({route:"/web/action/load",params:{action_id:action_id,additional_context:additional_context,},}).then(function(action){self._cache.actions[key]=action.no_cache?null:self._cache.actions[key];return action;}).guardedCatch(()=>this._invalidate('actions',key));}
return this._cache.actions[key].then(function(action){return $.extend(true,{},action);});},load_views:async function({model,context,views_descr},options={}){const viewsKey=this._gen_key(model,views_descr,options,context);const filtersKey=this._gen_key(model,options.action_id);const withFilters=Boolean(options.load_filters);const shouldLoadViews=config.isDebug('assets')||!this._cache.views[viewsKey];const shouldLoadFilters=config.isDebug('assets')||(withFilters&&!this._cache.filters[filtersKey]);if(shouldLoadViews){options.load_filters=shouldLoadFilters;this._cache.views[viewsKey]=rpc.query({args:[],kwargs:{context,options,views:views_descr},model,method:'load_views',}).then(result=>{utils.deepFreeze(result.fields);for(const[viewId,viewType]of views_descr){const fvg=result.fields_views[viewType];fvg.viewFields=fvg.fields;fvg.fields=result.fields;}
if(shouldLoadFilters){this._cache.filters[filtersKey]=Promise.resolve(result.filters);}
return result.fields_views;}).guardedCatch(()=>this._invalidate('views',viewsKey));}
const result=await this._cache.views[viewsKey];if(withFilters&&result.search){if(shouldLoadFilters){await this.load_filters({actionId:options.action_id,context,forceReload:false,modelName:model,});}
result.search.favoriteFilters=await this._cache.filters[filtersKey];}
return result;},load_filters:function(params){const key=this._gen_key(params.modelName,params.actionId);const forceReload=params.forceReload!==false&&config.isDebug('assets');if(forceReload||!this._cache.filters[key]){this._cache.filters[key]=rpc.query({args:[params.modelName,params.actionId],kwargs:{context:params.context||{},},model:'ir.filters',method:'get_filters',}).guardedCatch(()=>this._invalidate('filters',key));}
return this._cache.filters[key];},create_filter:function(filter){return rpc.query({args:[filter],model:'ir.filters',method:'create_or_replace',}).then(filterId=>{const filtersKey=this._gen_key(filter.model_id,filter.action_id);this._invalidate('filters',filtersKey);return filterId;});},delete_filter:function(filterId){return rpc.query({args:[filterId],model:'ir.filters',method:'unlink',}).then(()=>this._invalidate('filters'));},_gen_key:function(){return _.map(Array.prototype.slice.call(arguments),function(arg){if(!arg){return false;}
return _.isObject(arg)?JSON.stringify(arg):arg;}).join(',');},_invalidate(section,key){if(key){delete this._cache[section][key];}else{this._cache[section]={};}},});});odoo.define('web.data_manager',function(require){"use strict";var DataManager=require('web.DataManager');var data_manager=new DataManager();return data_manager;});;

/* /web/static/src/js/services/report_service.js defined in bundle 'web.assets_backend' */
odoo.define('web.ReportService',function(require){"use strict";var AbstractService=require('web.AbstractService');var core=require('web.core');var ReportService=AbstractService.extend({dependencies:['ajax'],checkWkhtmltopdf:function(){if(!this.wkhtmltopdfState){this.wkhtmltopdfState=this._rpc({route:'/report/check_wkhtmltopdf'});}
return this.wkhtmltopdfState;},});core.serviceRegistry.add('report',ReportService);return ReportService;});;

/* /web/static/src/js/services/session.js defined in bundle 'web.assets_backend' */
odoo.define('web.session',function(require){"use strict";var Session=require('web.Session');var modules=odoo._modules;var session=new Session(undefined,undefined,{modules:modules,use_cors:false});session.is_bound=session.session_bind();return session;});;

/* /web/static/src/js/widgets/change_password.js defined in bundle 'web.assets_backend' */
odoo.define('web.ChangePassword',function(require){"use strict";var AbstractAction=require('web.AbstractAction');var core=require('web.core');var Dialog=require('web.Dialog');var web_client=require('web.web_client');var _t=core._t;var ChangePassword=AbstractAction.extend({template:"ChangePassword",start:function(){var self=this;web_client.set_title(_t("Change Password"));var $button=self.$('.oe_form_button');$button.appendTo(this.getParent().$footer);$button.eq(1).click(function(){self.$el.parents('.modal').modal('hide');});$button.eq(0).click(function(){self._rpc({route:'/web/session/change_password',params:{fields:$('form[name=change_password_form]').serializeArray()}}).then(function(result){if(result.error){self._display_error(result);}else{self.do_action('logout');}});});},_display_error:function(error){return new Dialog(this,{size:'medium',title:error.title,$content:$('<div>').html(error.error)}).open();},});core.action_registry.add("change_password",ChangePassword);return ChangePassword;});;

/* /web/static/src/js/tools/test_menus_loader.js defined in bundle 'web.assets_backend' */
odoo.define('web.clickEverywhere',function(require){"use strict";var ajax=require('web.ajax');function startClickEverywhere(xmlId,appsMenusOnly){ajax.loadJS('web/static/src/js/tools/test_menus.js').then(function(){clickEverywhere(xmlId,appsMenusOnly);});}
return startClickEverywhere;});;

/* /web/static/src/js/tools/debug_manager_backend.js defined in bundle 'web.assets_backend' */
odoo.define('web.DebugManager.Backend',function(require){"use strict";var ActionManager=require('web.ActionManager');var DebugManager=require('web.DebugManager');var dialogs=require('web.view_dialogs');var startClickEverywhere=require('web.clickEverywhere');var config=require('web.config');var core=require('web.core');var Dialog=require('web.Dialog');var field_utils=require('web.field_utils');var SystrayMenu=require('web.SystrayMenu');var utils=require('web.utils');var WebClient=require('web.WebClient');var Widget=require('web.Widget');var QWeb=core.qweb;var _t=core._t;DebugManager.include({requests_clear:function(){if(!this._events){return;}
this._events=[];this.trigger('update-stats',this._events);},show_timelines:function(){if(this._overlay){this._overlay.destroy();this._overlay=null;return;}
this._overlay=new RequestsOverlay(this);this._overlay.appendTo(document.body);},update:function(tag,descriptor){return this._super().then(function(){this.$dropdown.find(".o_debug_split_assets").before(QWeb.render('WebClient.DebugManager.Backend',{manager:this,}));}.bind(this));},select_view:function(){var self=this;new dialogs.SelectCreateDialog(this,{res_model:'ir.ui.view',title:_t('Select a view'),disable_multiple_selection:true,domain:[['type','!=','qweb'],['type','!=','search']],on_selected:function(records){self._rpc({model:'ir.ui.view',method:'search_read',domain:[['id','=',records[0].id]],fields:['name','model','type'],limit:1,}).then(function(views){var view=views[0];view.type=view.type==='tree'?'list':view.type;self.do_action({type:'ir.actions.act_window',name:view.name,res_model:view.model,views:[[view.id,view.type]]});});}}).open();},perform_js_tests:function(){this.do_action({name:_t("JS Tests"),target:'new',type:'ir.actions.act_url',url:'/web/tests?mod=*'});},perform_js_mobile_tests:function(){this.do_action({name:_t("JS Mobile Tests"),target:'new',type:'ir.actions.act_url',url:'/web/tests/mobile?mod=*'});},perform_click_everywhere_test:function(){var $homeMenu=$("nav.o_main_navbar > a.o_menu_toggle.fa-th");$homeMenu.click();startClickEverywhere();},});DebugManager.include({async start(){const[_,canSeeRecordRules,canSeeModelAccess]=await Promise.all([this._super(...arguments),this._checkAccessRight('ir.rule','read'),this._checkAccessRight('ir.model.access','read'),])
this.canSeeRecordRules=canSeeRecordRules;this.canSeeModelAccess=canSeeModelAccess;},async getModelId(modelName){const[modelId]=await this._rpc({model:'ir.model',method:'search',args:[[['model','=',modelName]]],kwargs:{limit:1},});return modelId},update:function(tag,descriptor){if(tag==='action'){this._action=descriptor;}
return this._super().then(function(){this.$dropdown.find(".o_debug_leave_section").before(QWeb.render('WebClient.DebugManager.Action',{manager:this,action:this._action}));}.bind(this));},edit:function(params,evt){this.do_action({res_model:params.model,res_id:params.id,name:evt.target.text,type:'ir.actions.act_window',views:[[false,'form']],view_mode:'form',target:'new',flags:{action_buttons:true,headless:true}});},async get_view_fields(){const modelId=await this.getModelId(this._action.res_model);this.do_action({res_model:'ir.model.fields',name:_t('View Fields'),views:[[false,'list'],[false,'form']],domain:[['model_id','=',modelId]],type:'ir.actions.act_window',context:{'default_model_id':modelId}});},manage_filters:function(){this.do_action({res_model:'ir.filters',name:_t('Manage Filters'),views:[[false,'list'],[false,'form']],type:'ir.actions.act_window',context:{search_default_my_filters:true,search_default_model_id:this._action.res_model}});},translate:function(){this._rpc({model:'ir.translation',method:'get_technical_translations',args:[this._action.res_model],}).then(this.do_action);},async actionRecordRules(){const modelId=await this.getModelId(this._action.res_model);this.do_action({res_model:'ir.rule',name:_t('Model Record Rules'),views:[[false,'list'],[false,'form']],domain:[['model_id','=',modelId]],type:'ir.actions.act_window',context:{'default_model_id':modelId,},});},async actionModelAccess(){const modelId=await this.getModelId(this._action.res_model);this.do_action({res_model:'ir.model.access',name:_t('Model Access'),views:[[false,'list'],[false,'form']],domain:[['model_id','=',modelId]],type:'ir.actions.act_window',context:{'default_model_id':modelId,},});},});DebugManager.include({start:function(){this._can_edit_views=false;return Promise.all([this._super(),this._checkAccessRight('ir.ui.view','write').then(function(ar){this._can_edit_views=ar;}.bind(this))]);},update:function(tag,descriptor,widget){if(tag==='action'||tag==='view'){this._controller=widget;}
return this._super(tag,descriptor).then(function(){this.$dropdown.find(".o_debug_leave_section").before(QWeb.render('WebClient.DebugManager.View',{action:this._action,can_edit:this._can_edit_views,controller:this._controller,withControlPanel:this._controller&&this._controller.withControlPanel,manager:this,view:this._controller&&_.findWhere(this._action.views,{type:this._controller.viewType,}),}));}.bind(this));},get_attachments:function(){var selectedIDs=this._controller.getSelectedIds();if(!selectedIDs.length){console.warn(_t("No attachment available"));return;}
this.do_action({res_model:'ir.attachment',name:_t('Manage Attachments'),views:[[false,'list'],[false,'form']],type:'ir.actions.act_window',domain:[['res_model','=',this._action.res_model],['res_id','=',selectedIDs[0]]],context:{default_res_model:this._action.res_model,default_res_id:selectedIDs[0],},});},get_metadata:function(){var self=this;var selectedIDs=this._controller.getSelectedIds();if(!selectedIDs.length){console.warn(_t("No metadata available"));return;}
this._rpc({model:this._action.res_model,method:'get_metadata',args:[selectedIDs],}).then(function(result){var metadata=result[0];metadata.creator=field_utils.format.many2one(metadata.create_uid);metadata.lastModifiedBy=field_utils.format.many2one(metadata.write_uid);var createDate=field_utils.parse.datetime(metadata.create_date);metadata.create_date=field_utils.format.datetime(createDate);var modificationDate=field_utils.parse.datetime(metadata.write_date);metadata.write_date=field_utils.format.datetime(modificationDate);var dialog=new Dialog(this,{title:_.str.sprintf(_t("Metadata (%s)"),self._action.res_model),size:'medium',$content:QWeb.render('WebClient.DebugViewLog',{perm:metadata,})});dialog.open().opened(function(){dialog.$el.on('click','a[data-action="toggle_noupdate"]',function(ev){ev.preventDefault();self._rpc({model:'ir.model.data',method:'toggle_noupdate',args:[self._action.res_model,metadata.id]}).then(function(res){dialog.close();self.get_metadata();})});})});},set_defaults:function(){var self=this;var display=function(fieldInfo,value){var displayed=value;if(value&&fieldInfo.type==='many2one'){displayed=value.data.display_name;value=value.data.id;}else if(value&&fieldInfo.type==='selection'){displayed=_.find(fieldInfo.selection,function(option){return option[0]===value;})[1];}
return[value,displayed];};var renderer=this._controller.renderer;var state=renderer.state;var fields=state.fields;var fieldsInfo=state.fieldsInfo.form;var fieldNamesInView=state.getFieldNames();var fieldNamesOnlyOnView=['message_attachment_count'];var fieldsValues=state.data;var modifierDatas={};_.each(fieldNamesInView,function(fieldName){modifierDatas[fieldName]=_.find(renderer.allModifiersData,function(modifierdata){return modifierdata.node.attrs.name===fieldName;});});this.fields=_.chain(fieldNamesInView).difference(fieldNamesOnlyOnView).map(function(fieldName){var modifierData=modifierDatas[fieldName];var invisibleOrReadOnly;if(modifierData){var evaluatedModifiers=modifierData.evaluatedModifiers[state.id];invisibleOrReadOnly=evaluatedModifiers.invisible||evaluatedModifiers.readonly;}
var fieldInfo=fields[fieldName];var valueDisplayed=display(fieldInfo,fieldsValues[fieldName]);var value=valueDisplayed[0];var displayed=valueDisplayed[1];if(!value||invisibleOrReadOnly||fieldInfo.type==='one2many'||fieldInfo.type==='many2many'||fieldInfo.type==='binary'||fieldsInfo[fieldName].options.isPassword||!_.isEmpty(fieldInfo.depends)){return false;}
return{name:fieldName,string:fieldInfo.string,value:value,displayed:displayed,};}).compact().sortBy(function(field){return field.string;}).value();var conditions=_.chain(fieldNamesInView).filter(function(fieldName){var fieldInfo=fields[fieldName];return fieldInfo.change_default;}).map(function(fieldName){var fieldInfo=fields[fieldName];var valueDisplayed=display(fieldInfo,fieldsValues[fieldName]);var value=valueDisplayed[0];var displayed=valueDisplayed[1];return{name:fieldName,string:fieldInfo.string,value:value,displayed:displayed,};}).value();var d=new Dialog(this,{title:_t("Set Default"),buttons:[{text:_t("Close"),close:true},{text:_t("Save default"),click:function(){var $defaults=d.$el.find('#formview_default_fields');var fieldToSet=$defaults.val();if(!fieldToSet){$defaults.parent().addClass('o_form_invalid');return;}
var selfUser=d.$el.find('#formview_default_self').is(':checked');var condition=d.$el.find('#formview_default_conditions').val();var value=_.find(self.fields,function(field){return field.name===fieldToSet;}).value;self._rpc({model:'ir.default',method:'set',args:[self._action.res_model,fieldToSet,value,selfUser,true,condition||false,],}).then(function(){d.close();});}}]});d.args={fields:this.fields,conditions:conditions,};d.template='FormView.set_default';d.open();},fvg:function(){var self=this;var dialog=new Dialog(this,{title:_t("Fields View Get")});dialog.opened().then(function(){$('<pre>').text(utils.json_node_to_xml(self._controller.renderer.arch,true)).appendTo(dialog.$el);});dialog.open();},});function make_context(width,height,fn){var canvas=document.createElement('canvas');canvas.width=width;canvas.height=height;canvas.style.position='relative';var ctx=canvas.getContext('2d');ctx.imageSmoothingEnabled=false;ctx.mozImageSmoothingEnabled=false;ctx.oImageSmoothingEnabled=false;ctx.webkitImageSmoothingEnabled=false;fn&&fn(ctx);return ctx;}
var RequestsOverlay=Widget.extend({template:'WebClient.DebugManager.RequestsOverlay',TRACKS:8,TRACK_WIDTH:9,events:{mousemove:function(e){this.$tooltip.hide();}},init:function(){this._super.apply(this,arguments);this._render=_.throttle(this._render.bind(this),1000/15,{leading:false});},start:function(){var _super=this._super();this.$tooltip=this.$('div.o_debug_tooltip');this.getParent().on('update-stats',this,this._render);this._render();return _super;},tooltip:function(text,start,end,x,y){var top=y-this.el.offsetTop+this.el.scrollTop+1;var left=x-this.el.offsetLeft+this.el.scrollLeft+1;this.$tooltip.css({top:top,left:left}).show()[0].innerHTML=['<p>',text,' (',(end-start),'ms)','</p>'].join('');},_render:function(){var $summary=this.$('header'),w=$summary[0].clientWidth,$requests=this.$('.o_debug_requests');$summary.find('canvas').attr('width',w);var tracks=document.getElementById('o_debug_requests_summary');_.invoke(this.getChildren(),'destroy');var requests=this.getParent()._events;var bounds=this._get_bounds(requests);var scale=w/(bounds.high-bounds.low);var track_ends=_(this.TRACKS).times(_.constant(-Infinity));var ctx=tracks.getContext('2d');ctx.lineWidth=this.TRACK_WIDTH;for(var i=0;i<requests.length;i++){var request=requests[i];var rstart=Math.floor(request[0][3]*1e3);var rend=Math.ceil(request[request.length-1][3]*1e3);for(var track=0;track<track_ends.length;++track){if(track_ends[track]<rstart){break;}}
if(track>=track_ends.length){console.warn("could not find an empty summary track");continue;}
track_ends[track]=rend;ctx.save();ctx.translate(Math.floor((rstart-bounds.low)*scale),track*(this.TRACK_WIDTH+1));this._draw_request(request,ctx,0,scale);ctx.restore();new RequestDetails(this,request,scale).appendTo($requests);}},_draw_request:function(request,to_context,step,hscale,handle_event){var surfaces={request:make_context(to_context.canvas.width,to_context.canvas.height,function(ctx){ctx.strokeStyle='blue';ctx.fillStyle='#88f';ctx.lineJoin='round';ctx.lineWidth=1;}),sql:make_context(to_context.canvas.width,to_context.canvas.height,function(ctx){ctx.strokeStyle='red';ctx.fillStyle='#f88';ctx.lineJoin='round';ctx.lineWidth=1;}),template:make_context(to_context.canvas.width,to_context.canvas.height,function(ctx){ctx.strokeStyle='green';ctx.fillStyle='#8f8';ctx.lineJoin='round';ctx.lineWidth=1;})};var stacks={},start=Math.floor(request[0][3]*1e3*hscale);var event_idx=0;var rect_width=to_context.lineWidth;for(var i=0;i<request.length;i++){var type,m,event=request[i];var tag=event[0],timestamp=Math.floor(event[3]*1e3*hscale)-start;if(m=/(\w+)-start/.exec(tag)){type=m[1];if(!(type in stacks)){stacks[type]=[];}
handle_event&&handle_event(event_idx,timestamp,event);stacks[type].push({timestamp:timestamp,idx:event_idx++});}else if(m=/(\w+)-end/.exec(tag)){type=m[1];var stack=stacks[type];var estart=stack.pop(),duration=Math.ceil(timestamp-estart.timestamp);handle_event&&handle_event(estart.idx,timestamp,event);var surface=surfaces[type];if(!surface){continue;}
var y=step*estart.idx;surface.rect(estart.timestamp+0.5,y+0.5,duration||1,rect_width);}}
var keys=['request','template','sql'];for(var j=0;j<keys.length;++j){var ctx=surfaces[keys[j]];ctx.fill();ctx.stroke();to_context.drawImage(ctx.canvas,0,0);}},_get_bounds:function(requests){var low=+Infinity;var high=-+Infinity;for(var i=0;i<requests.length;i++){var request=requests[i];for(var j=0;j<request.length;j++){var event=request[j];var timestamp=event[3];low=Math.min(low,timestamp);high=Math.max(high,timestamp);}}
return{low:Math.floor(low*1e3),high:Math.ceil(high*1e3)};}});var RequestDetails=Widget.extend({events:{click:function(){this._open=!this._open;this.render();},'mousemove canvas':function(e){e.stopPropagation();var y=e.y||e.offsetY||e.layerY;if(!y){return;}
var event=this._payloads[Math.floor(y/this._REQ_HEIGHT)];if(!event){return;}
this.getParent().tooltip(event.payload,event.start,event.stop,e.clientX,e.clientY);}},init:function(parent,request,scale){this._super.apply(this,arguments);this._request=request;this._open=false;this._scale=scale;this._REQ_HEIGHT=20;},start:function(){this.el.style.borderBottom='1px solid black';this.render();return this._super();},render:function(){var request_cell_height=this._REQ_HEIGHT,TITLE_WIDTH=200;var request=this._request;var req_start=request[0][3]*1e3;var req_duration=request[request.length-1][3]*1e3-req_start;var height=request_cell_height*(this._open?request.length/2:1);var cell_center=request_cell_height/2;var ctx=make_context(210+Math.ceil(req_duration*this._scale),height,function(ctx){ctx.lineWidth=cell_center;});this.$el.empty().append(ctx.canvas);var payloads=this._payloads=[];var text_ctx=make_context(TITLE_WIDTH,height,function(ctx){ctx.font='12px sans-serif';ctx.textAlign='right';ctx.textBaseline='middle';ctx.translate(0,cell_center);});ctx.save();ctx.translate(TITLE_WIDTH+10,((request_cell_height/4)|0));this.getParent()._draw_request(request,ctx,this._open?request_cell_height:0,this._scale,function(idx,timestamp,event){if(/-start$/g.test(event[0])){payloads.push({payload:event[2],start:timestamp,stop:null});var title=event[2];title=title.replace(/\s+$/,'');title=title.length<=50?title:('…'+title.slice(-49));while(text_ctx.measureText(title).width>200){title='…'+title.slice(2);}
text_ctx.fillText(title,TITLE_WIDTH,request_cell_height*idx);}else if(/-end$/g.test(event[0])){payloads[idx].stop=timestamp;}});ctx.restore();ctx.drawImage(text_ctx.canvas,0,0);}});if(config.isDebug()){SystrayMenu.Items.push(DebugManager);WebClient.include({current_action_updated:function(action,controller){this._super.apply(this,arguments);var debugManager=_.find(this.menu.systray_menu.widgets,function(item){return item instanceof DebugManager;});debugManager.update('action',action,controller&&controller.widget);},});ActionManager.include({getCurrentActionInDialog:function(){if(this.currentDialogController){return this.actions[this.currentDialogController.actionID];}
return null;},getCurrentControllerInDialog:function(){return this.currentDialogController;},});Dialog.include({open:function(){var self=this;this.opened(function(){setTimeout(function(){var parent=self.getParent();if(parent instanceof ActionManager){var action=parent.getCurrentActionInDialog();if(action){var controller=parent.getCurrentControllerInDialog();self.debugManager=new DebugManager(self);var $header=self.$modal.find('.modal-header:first');return self.debugManager.prependTo($header).then(function(){self.debugManager.update('action',action,controller.widget);});}}},0);});return this._super.apply(this,arguments);},});}
return DebugManager;});;

/* /web/static/src/js/tools/tools.js defined in bundle 'web.assets_backend' */
odoo.define('web.tools',function(require){"use strict";function deprecated(fn,message){return function(){console.warn(message||(fn.name+' is deprecated.'));return fn.apply(this,arguments);};}
return{deprecated:deprecated,};});;

/* /web/static/src/js/env.js defined in bundle 'web.assets_backend' */
odoo.define("web.env",function(require){"use strict";const commonEnv=require('web.commonEnv');const dataManager=require('web.data_manager');const{blockUI,unblockUI}=require("web.framework");const env=Object.assign(commonEnv,{dataManager});env.services=Object.assign(env.services,{blockUI,unblockUI});return env;});;

/* /web/static/src/js/widgets/data_export.js defined in bundle 'web.assets_backend' */
odoo.define('web.DataExport',function(require){"use strict";var config=require('web.config');var core=require('web.core');var Dialog=require('web.Dialog');var data=require('web.data');var framework=require('web.framework');var pyUtils=require('web.py_utils');var QWeb=core.qweb;var _t=core._t;var DataExport=Dialog.extend({template:'ExportDialog',events:{'change .o_exported_lists_select':'_onChangeExportList','change .o_import_compat input':'_onChangeCompatibleInput','click .o_add_field':'_onClickAddField','click .o_delete_exported_list':'_onClickDeleteExportListBtn','click .o_expand':'_onClickExpand','click .o_remove_field':'_onClickRemoveField','click .o_save_list .o_save_list_btn':'_onClickSaveListBtn','click .o_save_list .o_cancel_list_btn':'_resetTemplateField','click .o_export_tree_item':'_onClickTreeItem','dblclick .o_export_tree_item:not(.haschild)':'_onDblclickTreeItem','keydown .o_export_tree_item':'_onKeydownTreeItem','keydown .o_save_list_name':'_onKeydownSaveList','input .o_export_search_input':'_onSearchInput',},init:function(parent,record,defaultExportFields,groupedBy,activeDomain,idsToExport){var options={title:_t("Export Data"),buttons:[{text:_t("Export"),click:this._onExportData,classes:'btn-primary'},{text:_t("Close"),close:true},],};this._super(parent,options);this.records={};this.record=record;this.defaultExportFields=defaultExportFields;this.groupby=groupedBy;this.exports=new data.DataSetSearch(this,'ir.exports',this.record.getContext());this.rowIndex=0;this.rowIndexLevel=0;this.isCompatibleMode=false;this.domain=activeDomain||this.record.domain;this.idsToExport=activeDomain?false:idsToExport;},start:function(){var self=this;var proms=[this._super.apply(this,arguments)];this.$modal.find('.modal-content').css('height','100%');this.$fieldsList=this.$('.o_fields_list');proms.push(this._rpc({route:'/web/export/formats'}).then(doSetupExportFormats));proms.push(this._onChangeCompatibleInput().then(function(){_.each(self.defaultExportFields,function(field){var record=self.records[field];self._addField(record.id,record.string);});}));proms.push(this._showExportsList());this.opened().then(function(){self.$('.o_fields_list').sortable({axis:'y',handle:'.o_short_field',forcePlaceholderSize:true,placeholder:'o-field-placeholder',update:self.proxy('_resetTemplateField'),});});return Promise.all(proms);function doSetupExportFormats(formats){var $fmts=self.$('.o_export_format');_.each(formats,function(format){var $radio=$('<input/>',{type:'radio',value:format.tag,name:'o_export_format_name',class:'form-check-input',id:'o_radio'+format.label});var $label=$('<label/>',{html:format.label,class:'form-check-label',for:'o_radio'+format.label});if(format.error){$radio.prop('disabled',true);$label.html(_.str.sprintf("%s — %s",format.label,format.error));}
$fmts.append($("<div class='radio form-check form-check-inline pl-4'></div>").append($radio,$label));});self.$exportFormatInputs=$fmts.find('input');self.$exportFormatInputs.filter(':enabled').first().prop('checked',true);}},export(){let exportedFields=this.defaultExportFields.map(field=>({name:field,label:this.record.fields[field].string,}));this._exportData(exportedFields,'xlsx',false);},_addField:function(fieldID,label){var $fieldList=this.$('.o_fields_list');if(!$fieldList.find(".o_export_field[data-field_id='"+fieldID+"']").length){$fieldList.append($('<li>',{'class':'o_export_field','data-field_id':fieldID}).append($('<span>',{'class':"fa fa-arrows o_short_field mx-1"}),label.trim(),$('<span>',{'class':'fa fa-trash m-1 pull-right o_remove_field','title':_t("Remove field")})));}},_exportData(exportedFields,exportFormat,idsToExport){if(_.isEmpty(exportedFields)){Dialog.alert(this,_t("Please select fields to export..."));return;}
if(this.isCompatibleMode){exportedFields.unshift({name:'id',label:_t('External ID')});}
framework.blockUI();this.getSession().get_file({url:'/web/export/'+exportFormat,data:{data:JSON.stringify({model:this.record.model,fields:exportedFields,ids:idsToExport,domain:this.domain,groupby:this.groupby,context:pyUtils.eval('contexts',[this.record.getContext()]),import_compat:this.isCompatibleMode,})},complete:framework.unblockUI,error:(error)=>this.call('crash_manager','rpc_error',error),});},_getFields:function(){var exportFields=this.$('.o_export_field').map(function(){return $(this).data('field_id');}).get();if(exportFields.length===0){Dialog.alert(this,_t("Please select fields to save export list..."));}
return exportFields;},_onExpandAction:function(record){var self=this;if(!record.children){return;}
var model=record.params.model;var prefix=record.params.prefix;var name=record.params.name;var excludeFields=[];if(record.relation_field){excludeFields.push(record.relation_field);}
if(!record.loaded){this._rpc({route:'/web/export/get_fields',params:{model:model,prefix:prefix,parent_name:name,import_compat:this.isCompatibleMode,parent_field_type:record.field_type,parent_field:record.params.parent_field,exclude:excludeFields,},}).then(function(results){record.loaded=true;self._onShowData(results,record.id);});}else{this._showContent(record.id);}},_onShowData:function(records,expansion){var self=this;if(expansion){this.$('.o_export_tree_item[data-id="'+expansion+'"]').addClass('show').find('.o_expand_parent').toggleClass('fa-chevron-right fa-chevron-down').next().after(QWeb.render('Export.TreeItems',{fields:records,debug:config.isDebug()}));}else{this.$('.o_left_field_panel').empty().append($('<div/>').addClass('o_field_tree_structure').append(QWeb.render('Export.TreeItems',{fields:records,debug:config.isDebug()})));}
_.extend(this.records,_.object(_.pluck(records,'id'),records));this.$records=this.$('.o_export_tree_item');this.$records.each(function(i,el){var $el=$(el);$el.find('.o_tree_column').first().toggleClass('o_required',!!self.records[$el.data('id')].required);});this.$('#o-export-search-filter').val('');},_addNewTemplate:function(){this.$('.o_exported_lists').addClass('d-none');this.$(".o_save_list").show().find(".o_save_list_name").val("").focus();},_resetTemplateField:function(){this.$('.o_exported_lists_select').val("");this.$('.o_delete_exported_list').addClass('d-none');this.$('.o_exported_lists').removeClass('d-none');this.$(".o_save_list").hide().find(".o_save_list_name").val("");},_showContent:function(fieldID){var $item=this.$('.o_export_tree_item[data-id="'+fieldID+'"]');$item.toggleClass('show');var isOpen=$item.hasClass('show');$item.children('.o_expand_parent').toggleClass('fa-chevron-down',!!isOpen).toggleClass('fa-chevron-right',!isOpen);var $childField=$item.find('.o_export_tree_item');var childLength=(fieldID.split('/')).length+1;for(var i=0;i<$childField.length;i++){var $child=$childField.eq(i);if(!isOpen){$child.hide();}else if(childLength===$childField.eq(i).data('id').split('/').length){if($child.hasClass('show')){$child.removeClass('show');$child.children('.o_expand_parent').removeClass('fa-chevron-down').addClass('fa-chevron-right');}
$child.show();}}
this.$('#o-export-search-filter').val('');},_showExportsList:function(){var self=this;if(this.$('.o_exported_lists_select').is(':hidden')){this.$('.o_exported_lists').show();return Promise.resolve();}
return this._rpc({model:'ir.exports',method:'search_read',fields:['name'],domain:[['resource','=',this.record.model]]}).then(function(exportList){self.$('.o_exported_lists').append(QWeb.render('Export.SavedList',{existing_exports:exportList,}));});},_onChangeExportList:function(){var self=this;var exportID=this.$('.o_exported_lists_select option:selected').val();this.$('.o_delete_exported_list').toggleClass('d-none',!exportID);if(exportID&&exportID!=='new_template'){this.$('.o_fields_list').empty();this._rpc({route:'/web/export/namelist',params:{model:this.record.model,export_id:parseInt(exportID,10),},}).then(function(fieldList){_.each(fieldList,function(field){self._addField(field.name,field.label);});});}else if(exportID==='new_template'){self._addNewTemplate();}},_onChangeCompatibleInput:function(){var self=this;this.isCompatibleMode=this.$('.o_import_compat input').is(':checked');this.$('.o_field_tree_structure').remove();this._resetTemplateField();return this._rpc({route:'/web/export/get_fields',params:{model:this.record.model,import_compat:this.isCompatibleMode,},}).then(function(records){var compatibleFields=_.map(records,function(record){return record.id;});self._onShowData(records);self.$('.o_fields_list').empty();_.chain(self.$fieldsList.find('.o_export_field')).map(function(field){return $(field).data('field_id');}).union(self.defaultExportFields).intersection(compatibleFields).each(function(field){var record=_.find(records,function(rec){return rec.id===field;});self._addField(record.id,record.string);});self.$('#o-export-search-filter').val('');});},_onClickAddField:function(ev){ev.stopPropagation();var $field=$(ev.currentTarget);this._resetTemplateField();this._addField($field.closest('.o_export_tree_item').data('id'),$field.closest('.o_tree_column').text());},_onClickDeleteExportListBtn:function(){var self=this;var selectExp=this.$('.o_exported_lists_select option:selected');var options={confirm_callback:function(){if(selectExp.val()){self.exports.unlink([parseInt(selectExp.val(),10)]);selectExp.remove();if(self.$('.o_exported_lists_select option').length<=1){self.$('.o_exported_lists').hide();}}}};Dialog.confirm(this,_t("Do you really want to delete this export template?"),options);},_onClickExpand:function(ev){this._onExpandAction(this.records[$(ev.target).closest('.o_export_tree_item').data('id')]);},_onClickRemoveField:function(ev){$(ev.currentTarget).closest('.o_export_field').remove();this._resetTemplateField();},_onClickSaveListBtn:function(){var self=this;var $saveList=this.$('.o_save_list');var value=$saveList.find('input').val();if(!value){Dialog.alert(this,_t("Please enter save field list name"));return;}
var fields=this._getFields();if(fields.length===0){return;}
$saveList.hide();this.exports.create({name:value,resource:this.record.model,export_fields:_.map(fields,function(field){return[0,0,{name:field}];}),}).then(function(exportListID){if(!exportListID){return;}
var $select=self.$('.o_exported_lists_select');if($select.length===0||$select.is(':hidden')){self._showExportsList();}
$select.append(new Option(value,exportListID));self.$('.o_exported_lists').removeClass('d-none');$select.val(exportListID);});},_onClickTreeItem:function(ev){ev.stopPropagation();var $elem=$(ev.currentTarget);var rowIndex=$elem.prevAll('.o_export_tree_item').length;var rowIndexLevel=$elem.parents('.o_export_tree_item').length;if(ev.shiftKey&&rowIndexLevel===this.rowIndexLevel){var minIndex=Math.min(rowIndex,this.rowIndex);var maxIndex=Math.max(rowIndex,this.rowIndex);this.$records.filter(function(){return($elem.parent()[0]===$(this).parent()[0]);}).slice(minIndex,maxIndex+1).addClass('o_selected').filter(':not(:last)').each(processChildren);}
this.rowIndex=rowIndex;this.rowIndexLevel=rowIndexLevel;if(ev.ctrlKey){$elem.toggleClass('o_selected').focus();}else if(ev.shiftKey){$elem.addClass('o_selected').focus();}else{this.$('.o_selected').removeClass('o_selected');$elem.addClass('o_selected').focus();}
function processChildren(){var $child=$(this);if($child.hasClass('show')){$child.children('.o_export_tree_item').addClass('o_selected').each(processChildren);}}},_onExportData(){let exportedFields=this.$('.o_export_field').map((i,field)=>({name:$(field).data('field_id'),label:field.textContent,})).get();let exportFormat=this.$exportFormatInputs.filter(':checked').val();this._exportData(exportedFields,exportFormat,this.idsToExport);},_onDblclickTreeItem:function(ev){var self=this;this._resetTemplateField();function addElement(el){self._addField(el.getAttribute('data-id'),el.querySelector('.o_tree_column').textContent);}
var target=ev.currentTarget;target.classList.remove('o_selected');[].reverse.call($(target).parents('.o_export_tree_item')).each(function(){addElement(this);});addElement(target);},_onKeydownSaveList:function(ev){if(ev.keyCode===$.ui.keyCode.ENTER){this._onClickSaveListBtn();}},_onKeydownTreeItem:function(ev){ev.stopPropagation();var $el=$(ev.currentTarget);var record=this.records[$el.data('id')];switch(ev.keyCode||ev.which){case $.ui.keyCode.LEFT:if($el.hasClass('show')){this._onExpandAction(record);}
break;case $.ui.keyCode.RIGHT:if(!$el.hasClass('show')){this._onExpandAction(record);}
break;case $.ui.keyCode.UP:var $prev=$el.prev('.o_export_tree_item');if($prev.length===1){while($prev.hasClass('show')){$prev=$prev.children('.o_export_tree_item').last();}}else{$prev=$el.parent('.o_export_tree_item');if($prev.length===0){break;}}
$el.removeClass('o_selected').blur();$prev.addClass("o_selected").focus();break;case $.ui.keyCode.DOWN:var $next;if($el.hasClass('show')){$next=$el.children('.o_export_tree_item').first();}else{$next=$el.next('.o_export_tree_item');if($next.length===0){$next=$el.parent('.o_export_tree_item').next('.o_export_tree_item');if($next.length===0){break;}}}
$el.removeClass('o_selected').blur();$next.addClass('o_selected').focus();break;}},_onSearchInput:function(ev){var searchText=$(ev.currentTarget).val().trim().toUpperCase();if(!searchText){this.$('.o_no_match').remove();this.$(".o_export_tree_item").show();this.$(".o_export_tree_item.haschild:not(.show) .o_export_tree_item").hide();return;}
var matchItems=this.$(".o_tree_column").filter(function(){var title=this.getAttribute('title');return this.innerText.toUpperCase().indexOf(searchText)>=0||title&&title.toUpperCase().indexOf(searchText)>=0;}).parent();this.$(".o_export_tree_item").hide();if(matchItems.length){this.$('.o_no_match').remove();_.each(matchItems,function(col){var $col=$(col);$col.show();$col.parents('.haschild.show').show();if(!$col.parent().hasClass('show')&&!$col.parent().hasClass('o_field_tree_structure')){$col.hide();}});}else if(!this.$('.o_no_match').length){this.$(".o_field_tree_structure").append($("<h3/>",{class:'text-center text-muted mt-5 o_no_match',text:_t("No match found.")}));}},});return DataExport;});;

/* /web/static/src/js/widgets/date_picker.js defined in bundle 'web.assets_backend' */
odoo.define('web.datepicker',function(require){"use strict";var core=require('web.core');var field_utils=require('web.field_utils');var time=require('web.time');var Widget=require('web.Widget');var _t=core._t;var DateWidget=Widget.extend({template:"web.datepicker",type_of_date:"date",events:{'error.datetimepicker':'errorDatetime','change .o_datepicker_input':'changeDatetime','click input':'_onInputClicked','input input':'_onInput','keydown':'_onKeydown','show.datetimepicker':'_onDateTimePickerShow','hide.datetimepicker':'_onDateTimePickerHide',},init:function(parent,options){this._super.apply(this,arguments);this.name=parent.name;this.options=_.extend({locale:moment.locale(),format:this.type_of_date==='datetime'?time.getLangDatetimeFormat():time.getLangDateFormat(),minDate:moment({y:1}),maxDate:moment({y:9999,M:11,d:31}),useCurrent:false,icons:{time:'fa fa-clock-o',date:'fa fa-calendar',up:'fa fa-chevron-up',down:'fa fa-chevron-down',previous:'fa fa-chevron-left',next:'fa fa-chevron-right',today:'fa fa-calendar-check-o',clear:'fa fa-trash',close:'fa fa-check primary',},calendarWeeks:true,buttons:{showToday:false,showClear:false,showClose:false,},widgetParent:'body',keyBinds:null,},options||{});this.__libInput=0;this.__isOpen=false;},start:function(){this.$input=this.$('input.o_datepicker_input');this.__libInput++;this.$el.datetimepicker(this.options);this.__libInput--;this._setReadonly(false);},destroy:function(){if(this._onScroll){window.removeEventListener('wheel',this._onScroll,true);}
this.__libInput++;this.$el.datetimepicker('destroy');this.__libInput--;this._super.apply(this,arguments);},changeDatetime:function(){if(this.__libInput>0){if(this.options.warn_future){this._warnFuture(this.getValue());}
this.trigger("datetime_changed");return;}
var oldValue=this.getValue();if(this.isValid()){this._setValueFromUi();var newValue=this.getValue();var hasChanged=!oldValue!==!newValue;if(oldValue&&newValue){var formattedOldValue=oldValue.format(time.getLangDatetimeFormat());var formattedNewValue=newValue.format(time.getLangDatetimeFormat());if(formattedNewValue!==formattedOldValue){hasChanged=true;}}
if(hasChanged){if(this.options.warn_future){this._warnFuture(newValue);}
this.trigger("datetime_changed");}}else{var formattedValue=oldValue?this._formatClient(oldValue):null;this.$input.val(formattedValue);}},errorDatetime:function(e){return false;},focus:function(){this.__libInput++;this.$input.focus();this.__libInput--;},getValue:function(){var value=this.get('value');return value&&value.clone();},isValid:function(){var value=this.$input.val();if(value===""){return true;}else{try{this._parseClient(value);return true;}catch(e){return false;}}},maxDate:function(date){this.__libInput++;this.$el.datetimepicker('maxDate',date||null);this.__libInput--;},minDate:function(date){this.__libInput++;this.$el.datetimepicker('minDate',date||null);this.__libInput--;},setValue:function(value){this.set({'value':value});var formatted_value=value?this._formatClient(value):null;this.$input.val(formatted_value);this._setLibInputValue(value);},_warnFuture:function(currentDate){if(!this.$warning){this.$warning=$('<span>',{class:'fa fa-exclamation-triangle o_tz_warning o_datepicker_warning',});var title=_t("This date is in the future. Make sure this is what you expect.");this.$warning.attr('title',title);this.$input.after(this.$warning);}
if(currentDate&&currentDate.format('YYYY-MM-DD')>moment().format('YYYY-MM-DD')){this.$warning.show();}else{this.$warning.hide();}},_formatClient:function(v){return field_utils.format[this.type_of_date](v,null,{timezone:false});},_parseClient:function(v){return field_utils.parse[this.type_of_date](v,null,{timezone:false});},_setLibInputValue:function(value){this.__libInput++;this.$el.datetimepicker('date',value||null);this.__libInput--;},_setReadonly:function(readonly){this.readonly=readonly;this.$input.prop('readonly',this.readonly);},_setValueFromUi:function(){var value=this.$input.val()||false;this.setValue(this._parseClient(value));},_onDateTimePickerHide:function(){this.__isOpen=false;this.changeDatetime();if(this._onScroll){window.removeEventListener('wheel',this._onScroll,true);}
this.changeDatetime();},_onDateTimePickerShow:function(){this.__isOpen=true;if(this.$input.val().length!==0&&this.isValid()){this.$input.select();}
var self=this;this._onScroll=function(ev){if(ev.target!==self.$input.get(0)){self.__libInput++;self.$el.datetimepicker('hide');self.__libInput--;}};window.addEventListener('wheel',this._onScroll,true);},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ESCAPE){if(this.__isOpen){ev.stopImmediatePropagation();this.__libInput++;this.$el.datetimepicker('hide');this.__libInput--;this.focus();}}},_onInput:function(ev){if(this.__libInput>0){ev.stopImmediatePropagation();}},_onInputClicked:function(){this.__libInput++;this.$el.datetimepicker('toggle');this.__libInput--;this.focus();},});var DateTimeWidget=DateWidget.extend({type_of_date:"datetime",init:function(parent,options){this._super(parent,_.extend({buttons:{showToday:false,showClear:false,showClose:true,},},options||{}));},});return{DateWidget:DateWidget,DateTimeWidget:DateTimeWidget,};});;

/* /web/static/src/js/widgets/domain_selector_dialog.js defined in bundle 'web.assets_backend' */
odoo.define("web.DomainSelectorDialog",function(require){"use strict";var core=require("web.core");var Dialog=require("web.Dialog");var DomainSelector=require("web.DomainSelector");var _t=core._t;return Dialog.extend({init:function(parent,model,domain,options){this.model=model;this.options=_.extend({readonly:true,debugMode:false,},options||{});var buttons;if(this.options.readonly){buttons=[{text:_t("Close"),close:true},];}else{buttons=[{text:_t("Save"),classes:"btn-primary",close:true,click:function(){this.trigger_up("domain_selected",{domain:this.domainSelector.getDomain()});}},{text:_t("Discard"),close:true},];}
this._super(parent,_.extend({},{title:_t("Domain"),buttons:buttons,},options||{}));this.domainSelector=new DomainSelector(this,model,domain,options);},start:function(){var self=this;this.opened().then(function(){self.$el.css('overflow','visible').closest('.modal-dialog').css('height','auto');});return Promise.all([this._super.apply(this,arguments),this.domainSelector.appendTo(this.$el)]);},});});;

/* /web/static/src/js/widgets/domain_selector.js defined in bundle 'web.assets_backend' */
odoo.define("web.DomainSelector",function(require){"use strict";var core=require("web.core");var datepicker=require("web.datepicker");var Domain=require("web.Domain");var field_utils=require("web.field_utils");var ModelFieldSelector=require("web.ModelFieldSelector");var Widget=require("web.Widget");var _t=core._t;var _lt=core._lt;var operator_mapping={"=":"=","!=":_lt("is not ="),">":">","<":"<",">=":">=","<=":"<=","ilike":_lt("contains"),"not ilike":_lt("does not contain"),"in":_lt("in"),"not in":_lt("not in"),"child_of":_lt("child of"),"parent_of":_lt("parent of"),"like":"like","not like":"not like","=like":"=like","=ilike":"=ilike","set":_lt("is set"),"not set":_lt("is not set"),};var DomainNode=Widget.extend({events:{"click .o_domain_add_node_button":"_onAddButtonClick","click .o_domain_delete_node_button":"_onDeleteButtonClick","mouseenter button":"_onButtonEntered","mouseleave button":"_onButtonLeft",},init:function(parent,model,domain,options){this._super.apply(this,arguments);this.model=model;this.options=_.extend({readonly:true,operators:null,debugMode:false,},options||{});this.readonly=this.options.readonly;this.debug=this.options.debugMode;},isValid:function(){},getDomain:function(){},_onAddButtonClick:function(e){e.preventDefault();e.stopPropagation();this.trigger_up("add_node_clicked",{newBranch:!!$(e.currentTarget).data("branch"),child:this});},_onDeleteButtonClick:function(e){e.preventDefault();e.stopPropagation();this.trigger_up("delete_node_clicked",{child:this});},_onButtonEntered:function(e){e.preventDefault();e.stopPropagation();var $target=$(e.currentTarget);this.$el.toggleClass("o_hover_btns",$target.hasClass("o_domain_delete_node_button"));this.$el.toggleClass("o_hover_add_node",$target.hasClass("o_domain_add_node_button"));this.$el.toggleClass("o_hover_add_inset_node",!!$target.data("branch"));},_onButtonLeft:function(e){e.preventDefault();e.stopPropagation();this.$el.removeClass("o_hover_btns o_hover_add_node o_hover_add_inset_node");},});var DomainTree=DomainNode.extend({template:"DomainTree",events:_.extend({},DomainNode.prototype.events,{"click .o_domain_tree_operator_selector .dropdown-item":"_onOperatorChange",}),custom_events:{"add_node_clicked":"_onNodeAdditionAsk","delete_node_clicked":"_onNodeDeletionAsk",},init:function(parent,model,domain){this._super.apply(this,arguments);var parsedDomain=this._parseDomain(domain);if(parsedDomain){this._initialize(parsedDomain);}},start:function(){this._postRender();return Promise.all([this._super.apply(this,arguments),this._renderChildrenTo(this.$childrenContainer)]);},isValid:function(){for(var i=0;i<this.children.length;i++){var cValid=this.children[i].isValid();if(!cValid){return cValid;}}
return this._isValid;},getDomain:function(){var childDomains=[];var nbChildren=0;_.each(this.children,function(child){var childDomain=child.getDomain();if(childDomain.length){nbChildren++;childDomains=childDomains.concat(child.getDomain());}});var nbChildRequired=this.operator==="!"?1:2;var operators=_.times(nbChildren-nbChildRequired+1,_.constant(this.operator));return operators.concat(childDomains);},_addChild:function(domain,afterNode){var i=afterNode?_.indexOf(this.children,afterNode):this.children.length;if(i<0)return false;this.children.splice(i+1,0,instantiateNode(this,this.model,domain,this.options));this.trigger_up("domain_changed",{child:this});return true;},_addFlattenedChildren:function(domain){var node=instantiateNode(this,this.model,domain,this.options);if(node===null){return;}
if(!node.children||node.operator!==this.operator){this.children.push(node);return;}
_.each(node.children,(function(child){child.setParent(this);this.children.push(child);}).bind(this));node.destroy();},_changeOperator:function(operator,silent){this.operator=operator;if(!silent)this.trigger_up("domain_changed",{child:this});},_initialize:function(domain){this._isValid=true;this.operator=domain[0];this.children=[];if(domain.length<=1){return;}
var nbLeafsToFind=1;for(var i=1;i<domain.length;i++){if(domain[i]==="&"||domain[i]==="|"){nbLeafsToFind++;}else if(domain[i]!=="!"){nbLeafsToFind--;}
if(!nbLeafsToFind){var partLeft=domain.slice(1,i+1);var partRight=domain.slice(i+1);if(partLeft.length){this._addFlattenedChildren(partLeft);}
if(partRight.length){this._addFlattenedChildren(partRight);}
break;}}
this._isValid=(nbLeafsToFind===0);if(this.operator==="!"){this.children[0].noControlPanel=true;}},_postRender:function(){this.$childrenContainer=this.$("> .o_domain_node_children_container");},_removeChild:function(oldChild){var i=_.indexOf(this.children,oldChild);if(i<0)return false;this.children[i].destroy();this.children.splice(i,1);this.trigger_up("domain_changed",{child:this});return true;},_renderChildrenTo:function($to){var $div=$("<div/>");return Promise.all(_.map(this.children,(function(child){return child.appendTo($div);}).bind(this))).then((function(){_.each(this.children,function(child){child.$el.appendTo($to);});}).bind(this));},_parseDomain:function(domain){var parsedDomain=false;try{parsedDomain=Domain.prototype.stringToArray(domain);this.invalidDomain=false;}catch(err){this.invalidDomain=true;this.children=[];}
return parsedDomain;},_onOperatorChange:function(e){e.preventDefault();e.stopPropagation();this._changeOperator($(e.target).data("operator"));},_onNodeAdditionAsk:function(e){var domain=this.options.default||[["id","=",1]];if(e.data.newBranch){domain=[this.operator==="&"?"|":"&"].concat(domain).concat(domain);}
if(this._addChild(domain,e.data.child)){e.stopPropagation();}},_onNodeDeletionAsk:function(e){if(this._removeChild(e.data.child)){e.stopPropagation();}},});var DomainSelector=DomainTree.extend({template:"DomainSelector",events:_.extend({},DomainTree.prototype.events,{"click .o_domain_add_first_node_button":"_onAddFirstButtonClick","change .o_domain_debug_input":"_onDebugInputChange",}),custom_events:_.extend({},DomainTree.prototype.custom_events,{domain_changed:"_onDomainChange",}),start:function(){var self=this;return this._super.apply(this,arguments).then(function(){if(self.invalidDomain){var msg=_t("This domain is not supported.");self.$el.html(msg);}});},setDomain:function(domain){if(domain===Domain.prototype.arrayToString(this.getDomain())){return Promise.resolve();}
var parsedDomain=this._parseDomain(domain);if(parsedDomain){return this._redraw(parsedDomain);}},_initialize:function(domain){if(domain.length>1){Domain.prototype.normalizeArray(domain);}else{domain=["&"].concat(domain);}
return this._super(domain);},_postRender:function(){this._super.apply(this,arguments);this.$debugInput=this.$(".o_domain_debug_input");if(this.$debugInput.length){this.$debugInput.val(Domain.prototype.arrayToString(this.getDomain()));}
if(!this._isValid){this.do_warn(false,_t("Domain not supported"));}},_redraw:function(domain){var oldChildren=this.children.slice();this._initialize(domain||this.getDomain());return this._renderChildrenTo($("<div/>")).then((function(){_.each(oldChildren,function(child){child.destroy();});this.renderElement();this._postRender();_.each(this.children,(function(child){child.$el.appendTo(this.$childrenContainer);}).bind(this));}).bind(this));},_onAddFirstButtonClick:function(){this._addChild(this.options.default||[["id","=",1]]);},_onDebugInputChange:function(e){var domain;try{domain=Domain.prototype.stringToArray($(e.currentTarget).val());}catch(err){this.do_warn(_t("Syntax error"),_t("Domain not properly formed"));return;}
this._redraw(domain).then((function(){this.trigger_up("domain_changed",{child:this,alreadyRedrawn:true});}).bind(this));},_onDomainChange:function(e){if(!e.data.alreadyRedrawn){this._redraw();}},});var DomainLeaf=DomainNode.extend({template:"DomainLeaf",events:_.extend({},DomainNode.prototype.events,{"change .o_domain_leaf_operator_select":"_onOperatorSelectChange","change .o_domain_leaf_value_input":"_onValueInputChange","click .o_domain_leaf_value_add_tag_button":"on_add_tag","keyup .o_domain_leaf_value_tags input":"on_add_tag","click .o_domain_leaf_value_remove_tag_button":"on_remove_tag",}),custom_events:{"field_chain_changed":"_onFieldChainChange",},init:function(parent,model,domain,options){this._super.apply(this,arguments);var currentDomain=Domain.prototype.stringToArray(domain);this.chain=currentDomain[0][0];this.operator=currentDomain[0][1];this.value=currentDomain[0][2];this.operator_mapping=operator_mapping;},willStart:function(){var defs=[this._super.apply(this,arguments)];this.fieldSelector=new ModelFieldSelector(this,this.model,this.chain!==undefined?this.chain.toString().split("."):[],this.options);defs.push(this.fieldSelector.appendTo($("<div/>")).then((function(){var wDefs=[];if(!this.readonly){var selectedField=this.fieldSelector.getSelectedField()||{};this.operators=this._getOperatorsFromType(selectedField.type);if(_.contains(["child_of","parent_of","like","not like","=like","=ilike"],this.operator)){this.operators[this.operator]=operator_mapping[this.operator];}else if(!this.operators[this.operator]){this.operators[this.operator]="?";}
this.selectionChoices=null;if(selectedField.type==="boolean"){this.selectionChoices=[["1",_t("set (true)")],["0",_t("not set (false)")]];}else if(selectedField.type==="selection"){this.selectionChoices=selectedField.selection;}
this.displayValue=this.value;try{if(selectedField&&!selectedField.relation&&!_.isArray(this.value)){this.displayValue=field_utils.format[selectedField.type](this.value,selectedField);}}catch(err){}
this.displayOperator=this.operator;if(selectedField.type==="boolean"){this.displayValue=this.value?"1":"0";}else if((this.operator==="!="||this.operator==="=")&&this.value===false){this.displayOperator=this.operator==="!="?"set":"not set";}
if(_.contains(["date","datetime"],selectedField.type)){this.valueWidget=new(selectedField.type==="datetime"?datepicker.DateTimeWidget:datepicker.DateWidget)(this);wDefs.push(this.valueWidget.appendTo("<div/>").then((function(){this.valueWidget.$el.addClass("o_domain_leaf_value_input");this.valueWidget.setValue(moment(this.value));this.valueWidget.on("datetime_changed",this,function(){this._changeValue(this.valueWidget.getValue());});}).bind(this)));}
return Promise.all(wDefs);}}).bind(this)));return Promise.all(defs);},start:function(){this.fieldSelector.$el.prependTo(this.$("> .o_domain_leaf_info, > .o_domain_leaf_edition"));if(!this.readonly&&this.valueWidget){this.$(".o_domain_leaf_value_input").replaceWith(this.valueWidget.$el);}
return this._super.apply(this,arguments);},isValid:function(){return this.fieldSelector&&this.fieldSelector.isValid();},getDomain:function(){return[[this.chain,this.operator,this.value]];},_changeFieldChain:function(chain,silent){this.chain=chain.join(".");this.fieldSelector.setChain(chain).then((function(){if(!this.fieldSelector.isValid())return;var selectedField=this.fieldSelector.getSelectedField()||{};var operators=this._getOperatorsFromType(selectedField.type);if(operators[this.operator]===undefined){this._changeOperator("=",true);}
this._changeValue(this.value,true);if(!silent)this.trigger_up("domain_changed",{child:this});}).bind(this));},_changeOperator:function(operator,silent){this.operator=operator;if(_.contains(["set","not set"],this.operator)){this.operator=this.operator==="not set"?"=":"!=";this.value=false;}else if(_.contains(["in","not in"],this.operator)){this.value=_.isArray(this.value)?this.value:this.value?(""+this.value).split(","):[];}else{if(_.isArray(this.value)){this.value=this.value.join(",");}
this._changeValue(this.value,true);}
if(!silent)this.trigger_up("domain_changed",{child:this});},_changeValue:function(value,silent){var couldNotParse=false;var selectedField=this.fieldSelector.getSelectedField()||{};try{this.value=field_utils.parse[selectedField.type](value,selectedField);}catch(err){this.value=value;couldNotParse=true;}
if(selectedField.type==="boolean"){if(!_.isBoolean(this.value)){this.value=!!parseFloat(this.value);}}else if(selectedField.type==="selection"){if(!_.some(selectedField.selection,(function(option){return option[0]===this.value;}).bind(this))){this.value=selectedField.selection[0][0];}}else if(_.contains(["date","datetime"],selectedField.type)){if(couldNotParse||_.isBoolean(this.value)){this.value=field_utils.parse[selectedField.type](field_utils.format[selectedField.type](moment())).toJSON();}else{this.value=this.value.toJSON();}}else{if(_.isBoolean(this.value)){this.value="";}else if(_.isObject(this.value)&&!_.isArray(this.value)){this.value=this.value.id||value||"";}}
if(!silent)this.trigger_up("domain_changed",{child:this});},_getOperatorsFromType:function(type){var operators={};switch(type){case"boolean":operators={"=":_t("is"),"!=":_t("is not"),};break;case"char":case"text":case"html":operators=_.pick(operator_mapping,"=","!=","ilike","not ilike","set","not set","in","not in");break;case"many2many":case"one2many":case"many2one":operators=_.pick(operator_mapping,"=","!=","ilike","not ilike","set","not set");break;case"integer":case"float":case"monetary":operators=_.pick(operator_mapping,"=","!=",">","<",">=","<=","ilike","not ilike","set","not set");break;case"selection":operators=_.pick(operator_mapping,"=","!=","set","not set");break;case"date":case"datetime":operators=_.pick(operator_mapping,"=","!=",">","<",">=","<=","set","not set");break;default:operators=_.extend({},operator_mapping);break;}
if(this.options.operators){operators=_.pick.apply(_,[operators].concat(this.options.operators));}
return operators;},_onOperatorSelectChange:function(e){this._changeOperator($(e.currentTarget).val());},_onValueInputChange:function(e){if(e.currentTarget!==e.target)return;this._changeValue($(e.currentTarget).val());},_onFieldChainChange:function(e){this._changeFieldChain(e.data.chain);},on_add_tag:function(e){if(e.type==="keyup"&&e.which!==$.ui.keyCode.ENTER)return;if(!_.contains(["not in","in"],this.operator))return;var values=_.isArray(this.value)?this.value.slice():[];var $input=this.$(".o_domain_leaf_value_tags input");var val=$input.val().trim();if(val&&values.indexOf(val)<0){values.push(val);_.defer(this._changeValue.bind(this,values));$input.focus();}},on_remove_tag:function(e){var values=_.isArray(this.value)?this.value.slice():[];var val=this.$(e.currentTarget).data("value");var index=values.indexOf(val);if(index>=0){values.splice(index,1);_.defer(this._changeValue.bind(this,values));}},});function instantiateNode(parent,model,domain,options){if(domain.length>1){return new DomainTree(parent,model,domain,options);}else if(domain.length===1){return new DomainLeaf(parent,model,domain,options);}
return null;}
return DomainSelector;});;

/* /web/static/src/js/widgets/iframe_widget.js defined in bundle 'web.assets_backend' */
odoo.define('web.IFrameWidget',function(require){"use strict";var Widget=require('web.Widget');var IFrameWidget=Widget.extend({tagName:'iframe',init:function(parent,url){this._super(parent);this.url=url;},start:function(){this.$el.css({height:'100%',width:'100%',border:0});this.$el.attr({src:this.url});this.$el.on("load",this._bindEvents.bind(this));return this._super();},_bindEvents:function(){this.$el.contents().click(this._onIFrameClicked.bind(this));},_onIFrameClicked:function(event){}});return IFrameWidget;});;

/* /web/static/src/js/chrome/loading.js defined in bundle 'web.assets_backend' */
odoo.define('web.Loading',function(require){"use strict";var config=require('web.config');var core=require('web.core');var framework=require('web.framework');var Widget=require('web.Widget');var _t=core._t;var Loading=Widget.extend({template:"Loading",init:function(parent){this._super(parent);this.count=0;this.blocked_ui=false;},start:function(){core.bus.on('rpc_request',this,this.request_call);core.bus.on("rpc_response",this,this.response_call);core.bus.on("rpc_response_failed",this,this.response_call);},destroy:function(){this.on_rpc_event(-this.count);this._super();},request_call:function(){this.on_rpc_event(1);},response_call:function(){this.on_rpc_event(-1);},on_rpc_event:function(increment){var self=this;if(!this.count&&increment===1){this.long_running_timer=setTimeout(function(){self.blocked_ui=true;framework.blockUI();},3000);}
this.count+=increment;if(this.count>0){if(config.isDebug()){this.$el.text(_.str.sprintf(_t("Loading (%d)"),this.count));}else{this.$el.text(_t("Loading"));}
this.$el.show();this.getParent().$el.addClass('oe_wait');}else{this.count=0;clearTimeout(this.long_running_timer);if(self.blocked_ui){this.blocked_ui=false;framework.unblockUI();}
this.$el.fadeOut();this.getParent().$el.removeClass('oe_wait');}}});return Loading;});;

/* /web/static/src/js/widgets/model_field_selector.js defined in bundle 'web.assets_backend' */
odoo.define("web.ModelFieldSelector",function(require){"use strict";var core=require("web.core");var Widget=require("web.Widget");var _t=core._t;var modelFieldsCache={cache:{},cacheDefs:{},};core.bus.on('clear_cache',null,function(){modelFieldsCache.cache={};modelFieldsCache.cacheDefs={};});var ModelFieldSelector=Widget.extend({template:"ModelFieldSelector",events:{},editionEvents:{"focusin":"_onFocusIn","focusout":"_onFocusOut","click .o_field_selector_close":"_onCloseClick","click .o_field_selector_prev_page":"_onPrevPageClick","click .o_field_selector_next_page":"_onNextPageClick","click li.o_field_selector_select_button":"_onLastFieldClick","change input.o_field_selector_debug":"_onDebugInputChange","keyup .o_field_selector_search > input":"_onSearchInputChange","mouseover li.o_field_selector_item":"_onItemHover","keydown":"_onKeydown",},init:function(parent,model,chain,options){this._super.apply(this,arguments);this.model=model;this.chain=chain;this.options=_.extend({order:'string',readonly:true,filters:{},fields:null,filter:function(){return true;},followRelations:true,debugMode:false,showSearchInput:true,},options||{});this.options.filters=_.extend({searchable:true,},this.options.filters);if(typeof this.options.followRelations!=='function'){this.options.followRelations=this.options.followRelations?function(){return true;}:function(){return false;};}
this.pages=[];this.dirty=false;if(!this.options.readonly){_.extend(this.events,this.editionEvents);}
this.searchValue='';},willStart:function(){return Promise.all([this._super.apply(this,arguments),this._prefill()]);},start:function(){this.$value=this.$(".o_field_selector_value");this.$popover=this.$(".o_field_selector_popover");this.$input=this.$popover.find(".o_field_selector_popover_footer > input");this.$searchInput=this.$popover.find(".o_field_selector_search > input");this.$valid=this.$(".o_field_selector_warning");this._render();return this._super.apply(this,arguments);},getSelectedField:function(){return _.findWhere(this.pages[this.chain.length-1],{name:_.last(this.chain)});},isValid:function(){return this.valid;},setChain:function(chain){if(_.isEqual(chain,this.chain)){return Promise.resolve();}
this.chain=chain;return this._prefill().then(this._render.bind(this));},_addChainNode:function(fieldName){this.dirty=true;this.chain=this.chain.slice(0,this.pages.length-1);this.chain.push(fieldName);this.searchValue='';this.$searchInput.val('');},_getLastPageField:function(name){return _.findWhere(_.last(this.pages),{name:name,});},_getModelFieldsFromCache:function(model,filters){var self=this;var def=modelFieldsCache.cacheDefs[model];if(!def){def=modelFieldsCache.cacheDefs[model]=this._rpc({model:model,method:'fields_get',args:[false,["store","searchable","type","string","relation","selection","related"]],context:this.getSession().user_context,}).then((function(fields){modelFieldsCache.cache[model]=sortFields(fields,model,self.options.order);}).bind(this));}
return def.then((function(){return _.filter(modelFieldsCache.cache[model],function(f){return(!filters.searchable||f.searchable)&&self.options.filter(f);});}).bind(this));},_goToNextPage:function(field){if(!_.isEqual(this._getLastPageField(field.name),field))return;this._validate(true);this._addChainNode(field.name);this._pushPageData(field.relation).then(this._render.bind(this));},_goToPrevPage:function(){if(this.pages.length<=0)return;this._validate(true);this._removeChainNode();if(this.pages.length>1){this.pages.pop();}
this._render();},_hidePopover:function(){if(!this._isOpen)return;this._isOpen=false;this.$popover.addClass('d-none');if(this.dirty){this.dirty=false;this.trigger_up("field_chain_changed",{chain:this.chain});}},_prefill:function(){this.pages=[];return this._pushPageData(this.model).then((function(){this._validate(true);return(this.chain.length?processChain.call(this,this.chain.slice().reverse()):Promise.resolve());}).bind(this));function processChain(chain){var fieldName=chain.pop();var field=this._getLastPageField(fieldName);if(field&&field.relation){if(chain.length){return this._pushPageData(field.relation).then(processChain.bind(this,chain));}else{return this._pushPageData(field.relation);}}else if(field&&chain.length===0){return Promise.resolve();}else if(!field&&fieldName==="1"){this._validate(true);}else if(!field&&fieldName==="0"){this._validate(true);}else{this._validate(false);}
return Promise.resolve();}},_pushPageData:function(model){var def;if(this.model===model&&this.options.fields){def=Promise.resolve(sortFields(this.options.fields,model,this.options.order));}else{def=this._getModelFieldsFromCache(model,this.options.filters);}
return def.then((function(fields){this.pages.push(fields);}).bind(this));},_removeChainNode:function(){this.dirty=true;this.chain=this.chain.slice(0,this.pages.length-1);this.chain.pop();},_render:function(){this.$value.html(core.qweb.render(this.template+".value",{chain:this.chain,pages:this.pages,}));this.$valid.toggleClass('d-none',!!this.isValid());var page=_.last(this.pages);var title="";if(this.pages.length>1){var prevField=_.findWhere(this.pages[this.pages.length-2],{name:(this.chain.length===this.pages.length)?this.chain[this.chain.length-2]:_.last(this.chain),});if(prevField)title=prevField.string;}
this.$(".o_field_selector_popover_header .o_field_selector_title").text(title);var lines=_.filter(page,this.options.filter);if(this.searchValue){var matches=fuzzy.filter(this.searchValue,_.pluck(lines,'string'));lines=_.map(_.pluck(matches,'index'),function(i){return lines[i];});}
this.$(".o_field_selector_page").replaceWith(core.qweb.render(this.template+".page",{lines:lines,followRelations:this.options.followRelations,debug:this.options.debugMode,}));this.$input.val(this.chain.join("."));},_selectField:function(field){if(!_.isEqual(this._getLastPageField(field.name),field))return;this._validate(true);this._addChainNode(field.name);this._render();this._hidePopover();},_showPopover:function(){if(this._isOpen)return;this._isOpen=true;this.$popover.removeClass('d-none');},_validate:function(valid){this.valid=!!valid;if(!this.valid){this.do_warn(false,_t("Invalid field chain. You may have used a non-existing field name or followed a non-relational field."));}},_onFocusIn:function(){clearTimeout(this._hidePopoverTimeout);this._showPopover();},_onFocusOut:function(){this._hidePopoverTimeout=_.defer(this._hidePopover.bind(this));},_onCloseClick:function(){this._hidePopover();},_onPrevPageClick:function(){this._goToPrevPage();},_onNextPageClick:function(e){e.stopPropagation();this._goToNextPage(this._getLastPageField($(e.currentTarget).data("name")));},_onLastFieldClick:function(e){this._selectField(this._getLastPageField($(e.currentTarget).data("name")));},_onDebugInputChange:function(){var userChainStr=this.$input.val();var userChain=userChainStr.split(".");if(!this.options.followRelations&&userChain.length>1){this.do_warn(_t("Relation not allowed"),_t("You cannot follow relations for this field chain construction"));userChain=[userChain[0]];}
this.setChain(userChain).then((function(){this.trigger_up("field_chain_changed",{chain:this.chain});}).bind(this));},_onSearchInputChange:function(){this.searchValue=this.$searchInput.val();this._render();},_onItemHover:function(e){this.$("li.o_field_selector_item").removeClass("active");$(e.currentTarget).addClass("active");},_onKeydown:function(e){if(!this.$popover.is(":visible"))return;var inputHasFocus=this.$input.is(":focus");var searchInputHasFocus=this.$searchInput.is(":focus");switch(e.which){case $.ui.keyCode.UP:case $.ui.keyCode.DOWN:e.preventDefault();var $active=this.$("li.o_field_selector_item.active");var $to=$active[e.which===$.ui.keyCode.DOWN?"next":"prev"](".o_field_selector_item");if($to.length){$active.removeClass("active");$to.addClass("active");this.$popover.focus();var $page=$to.closest(".o_field_selector_page");var full_height=$page.height();var el_position=$to.position().top;var el_height=$to.outerHeight();var current_scroll=$page.scrollTop();if(el_position<0){$page.scrollTop(current_scroll-el_height);}else if(full_height<el_position+el_height){$page.scrollTop(current_scroll+el_height);}}
break;case $.ui.keyCode.RIGHT:if(inputHasFocus)break;e.preventDefault();var name=this.$("li.o_field_selector_item.active").data("name");if(name){var field=this._getLastPageField(name);if(field.relation){this._goToNextPage(field);}}
break;case $.ui.keyCode.LEFT:if(inputHasFocus)break;e.preventDefault();this._goToPrevPage();break;case $.ui.keyCode.ESCAPE:e.stopPropagation();this._hidePopover();break;case $.ui.keyCode.ENTER:if(inputHasFocus||searchInputHasFocus)break;e.preventDefault();this._selectField(this._getLastPageField(this.$("li.o_field_selector_item.active").data("name")));break;}}});return ModelFieldSelector;function sortFields(fields,model,order){var array=_.chain(fields).pairs().sortBy(function(p){return p[1].string;});if(order!=='string'){array=array.sortBy(function(p){return p[1][order];});}
return array.map(function(p){return _.extend({name:p[0],model:model,},p[1]);}).value();}});;

/* /web/static/src/js/chrome/systray_menu.js defined in bundle 'web.assets_backend' */
odoo.define('web.SystrayMenu',function(require){"use strict";var dom=require('web.dom');var Widget=require('web.Widget');var SystrayMenu=Widget.extend({init:function(parent){this._super(parent);this.items=[];this.widgets=[];},willStart:function(){var self=this;var proms=[];SystrayMenu.Items=_.sortBy(SystrayMenu.Items,function(item){return!_.isUndefined(item.prototype.sequence)?item.prototype.sequence:50;});SystrayMenu.Items.forEach(function(WidgetClass){var cur_systray_item=new WidgetClass(self);self.widgets.push(cur_systray_item);proms.push(cur_systray_item.appendTo($('<div>')));});return this._super.apply(this,arguments).then(function(){return Promise.all(proms);});},on_attach_callback(){this.widgets.filter(widget=>widget.on_attach_callback).forEach(widget=>widget.on_attach_callback());},start:function(){var self=this;return this._super.apply(this,arguments).then(function(){self.widgets.forEach(function(widget){dom.prepend(self.$el,widget.$el);});});},});SystrayMenu.Items=[];return SystrayMenu;});;

/* /web/static/src/js/widgets/switch_company_menu.js defined in bundle 'web.assets_backend' */
odoo.define('web.SwitchCompanyMenu',function(require){"use strict";var config=require('web.config');var core=require('web.core');var session=require('web.session');var SystrayMenu=require('web.SystrayMenu');var Widget=require('web.Widget');var _t=core._t;var SwitchCompanyMenu=Widget.extend({template:'SwitchCompanyMenu',events:{'click .dropdown-item[data-menu] div.log_into':'_onSwitchCompanyClick','keydown .dropdown-item[data-menu] div.log_into':'_onSwitchCompanyClick','click .dropdown-item[data-menu] div.toggle_company':'_onToggleCompanyClick','keydown .dropdown-item[data-menu] div.toggle_company':'_onToggleCompanyClick',},sequence:1,init:function(){this._super.apply(this,arguments);this.isMobile=config.device.isMobile;this._onSwitchCompanyClick=_.debounce(this._onSwitchCompanyClick,1500,true);},willStart:function(){var self=this;this.allowed_company_ids=String(session.user_context.allowed_company_ids).split(',').map(function(id){return parseInt(id);});this.user_companies=session.user_companies.allowed_companies;this.current_company=this.allowed_company_ids[0];this.current_company_name=_.find(session.user_companies.allowed_companies,function(company){return company[0]===self.current_company;})[1];return this._super.apply(this,arguments);},_onSwitchCompanyClick:function(ev){if(ev.type=='keydown'&&ev.which!=$.ui.keyCode.ENTER&&ev.which!=$.ui.keyCode.SPACE){return;}
ev.preventDefault();ev.stopPropagation();var dropdownItem=$(ev.currentTarget).parent();var dropdownMenu=dropdownItem.parent();var companyID=dropdownItem.data('company-id');var allowed_company_ids=this.allowed_company_ids;if(dropdownItem.find('.fa-square-o').length){if(this.allowed_company_ids.length===1){if(this.isMobile){dropdownMenu=dropdownMenu.parent();}
dropdownMenu.find('.fa-check-square').removeClass('fa-check-square').addClass('fa-square-o');dropdownItem.find('.fa-square-o').removeClass('fa-square-o').addClass('fa-check-square');allowed_company_ids=[companyID];}else{allowed_company_ids.push(companyID);dropdownItem.find('.fa-square-o').removeClass('fa-square-o').addClass('fa-check-square');}}
$(ev.currentTarget).attr('aria-pressed','true');session.setCompanies(companyID,allowed_company_ids);},_onToggleCompanyClick:function(ev){if(ev.type=='keydown'&&ev.which!=$.ui.keyCode.ENTER&&ev.which!=$.ui.keyCode.SPACE){return;}
ev.preventDefault();ev.stopPropagation();var dropdownItem=$(ev.currentTarget).parent();var companyID=dropdownItem.data('company-id');var allowed_company_ids=this.allowed_company_ids;var current_company_id=allowed_company_ids[0];if(dropdownItem.find('.fa-square-o').length){allowed_company_ids.push(companyID);dropdownItem.find('.fa-square-o').removeClass('fa-square-o').addClass('fa-check-square');$(ev.currentTarget).attr('aria-checked','true');}else{allowed_company_ids.splice(allowed_company_ids.indexOf(companyID),1);dropdownItem.find('.fa-check-square').addClass('fa-square-o').removeClass('fa-check-square');$(ev.currentTarget).attr('aria-checked','false');}
session.setCompanies(current_company_id,allowed_company_ids);},});if(session.display_switch_company_menu){SystrayMenu.Items.push(SwitchCompanyMenu);}
return SwitchCompanyMenu;});;

/* /web/static/src/js/chrome/user_menu.js defined in bundle 'web.assets_backend' */
odoo.define('web.UserMenu',function(require){"use strict";var config=require('web.config');var core=require('web.core');var framework=require('web.framework');var Dialog=require('web.Dialog');var Widget=require('web.Widget');var _t=core._t;var QWeb=core.qweb;var UserMenu=Widget.extend({template:'UserMenu',start:function(){var self=this;var session=this.getSession();this.$el.on('click','[data-menu]',function(ev){ev.preventDefault();var menu=$(this).data('menu');self['_onMenu'+menu.charAt(0).toUpperCase()+menu.slice(1)]();});return this._super.apply(this,arguments).then(function(){var $avatar=self.$('.oe_topbar_avatar');if(!session.uid){$avatar.attr('src',$avatar.data('default-src'));return Promise.resolve();}
var topbar_name=session.name;if(config.isDebug()){topbar_name=_.str.sprintf("%s (%s)",topbar_name,session.db);}
self.$('.oe_topbar_name').text(topbar_name);var avatar_src=session.url('/web/image',{model:'res.users',field:'image_128',id:session.uid,});$avatar.attr('src',avatar_src);});},_onMenuAccount:function(){var self=this;this.trigger_up('clear_uncommitted_changes',{callback:function(){self._rpc({route:'/web/session/account'}).then(function(url){framework.redirect(url);}).guardedCatch(function(result,ev){ev.preventDefault();framework.redirect('https://accounts.odoo.com/account');});},});},_onMenuDocumentation:function(){window.open('https://www.odoo.com/documentation/user','_blank');},_onMenuLogout:function(){this.trigger_up('clear_uncommitted_changes',{callback:this.do_action.bind(this,'logout'),});},_onMenuSettings:function(){var self=this;var session=this.getSession();this.trigger_up('clear_uncommitted_changes',{callback:function(){self._rpc({model:"res.users",method:"action_get"}).then(function(result){result.res_id=session.uid;self.do_action(result);});},});},_onMenuSupport:function(){window.open('https://www.odoo.com/buy','_blank');},_onMenuShortcuts:function(){new Dialog(this,{size:'large',dialogClass:'o_act_window',title:_t("Keyboard Shortcuts"),$content:$(QWeb.render("UserMenu.shortcuts"))}).open();},});return UserMenu;});;

/* /web/static/src/js/chrome/menu.js defined in bundle 'web.assets_backend' */
odoo.define('web.Menu',function(require){"use strict";var AppsMenu=require('web.AppsMenu');var config=require('web.config');var core=require('web.core');var dom=require('web.dom');var SystrayMenu=require('web.SystrayMenu');var UserMenu=require('web.UserMenu');var Widget=require('web.Widget');UserMenu.prototype.sequence=0;SystrayMenu.Items.push(UserMenu);var QWeb=core.qweb;var Menu=Widget.extend({template:'Menu',menusTemplate:'Menu.sections',events:{'mouseover .o_menu_sections > li:not(.show)':'_onMouseOverMenu','click .o_menu_brand':'_onAppNameClicked',},init:function(parent,menu_data){var self=this;this._super.apply(this,arguments);this.$menu_sections={};this.menu_data=menu_data;var $menu_sections=$(QWeb.render(this.menusTemplate,{menu_data:this.menu_data,}));$menu_sections.filter('section').each(function(){self.$menu_sections[parseInt(this.className,10)]=$(this).children('li');});core.bus.on('change_menu_section',this,this.change_menu_section);},start:function(){var self=this;this.$menu_apps=this.$('.o_menu_apps');this.$menu_brand_placeholder=this.$('.o_menu_brand');this.$section_placeholder=this.$('.o_menu_sections');this._updateMenuBrand();var on_secondary_menu_click=function(ev){ev.preventDefault();var menu_id=$(ev.currentTarget).data('menu');var action_id=$(ev.currentTarget).data('action-id');self._on_secondary_menu_click(menu_id,action_id);};var menu_ids=_.keys(this.$menu_sections);var primary_menu_id,$section;for(var i=0;i<menu_ids.length;i++){primary_menu_id=menu_ids[i];$section=this.$menu_sections[primary_menu_id];$section.on('click','a[data-menu]',self,on_secondary_menu_click.bind(this));}
this._appsMenu=new AppsMenu(self,this.menu_data);var appsMenuProm=this._appsMenu.appendTo(this.$menu_apps);this.systray_menu=new SystrayMenu(this);var systrayMenuProm=this.systray_menu.attachTo(this.$('.o_menu_systray')).then(function(){self.systray_menu.on_attach_callback();dom.initAutoMoreMenu(self.$section_placeholder,{maxWidth:function(){return self.$el.width()-(self.$menu_apps.outerWidth(true)+self.$menu_brand_placeholder.outerWidth(true)+self.systray_menu.$el.outerWidth(true));},sizeClass:'SM',});});return Promise.all([this._super.apply(this,arguments),appsMenuProm,systrayMenuProm]);},change_menu_section:function(primary_menu_id){if(!this.$menu_sections[primary_menu_id]){this._updateMenuBrand();return;}
if(this.current_primary_menu===primary_menu_id){return;}
if(this.current_primary_menu){this.$menu_sections[this.current_primary_menu].detach();}
for(var i=0;i<this.menu_data.children.length;i++){if(this.menu_data.children[i].id===primary_menu_id){this._updateMenuBrand(this.menu_data.children[i].name);break;}}
this.$menu_sections[primary_menu_id].appendTo(this.$section_placeholder);this.current_primary_menu=primary_menu_id;core.bus.trigger('resize');},_trigger_menu_clicked:function(menu_id,action_id){this.trigger_up('menu_clicked',{id:menu_id,action_id:action_id,previous_menu_id:this.current_secondary_menu||this.current_primary_menu,});},_updateMenuBrand:function(brandName){if(brandName){this.$menu_brand_placeholder.text(brandName).show();this.$section_placeholder.show();}else{this.$menu_brand_placeholder.hide()
this.$section_placeholder.hide();}},_on_secondary_menu_click:function(menu_id,action_id){var self=this;if(action_id){self._trigger_menu_clicked(menu_id,action_id);this.current_secondary_menu=menu_id;}},action_id_to_primary_menu_id:function(action_id){var primary_menu_id,found;for(var i=0;i<this.menu_data.children.length&&!primary_menu_id;i++){found=this._action_id_in_subtree(this.menu_data.children[i],action_id);if(found){primary_menu_id=this.menu_data.children[i].id;}}
return primary_menu_id;},_action_id_in_subtree:function(root,action_id){if(root.action&&root.action.split(',')[1]===String(action_id)){return true;}
var found;for(var i=0;i<root.children.length&&!found;i++){found=this._action_id_in_subtree(root.children[i],action_id);}
return found;},menu_id_to_action_id:function(menu_id,root){if(!root){root=$.extend(true,{},this.menu_data);}
if(root.id===menu_id){return root.action.split(',')[1];}
for(var i=0;i<root.children.length;i++){var action_id=this.menu_id_to_action_id(menu_id,root.children[i]);if(action_id!==undefined){return action_id;}}
return undefined;},getCurrentPrimaryMenu:function(){return this.current_primary_menu;},openFirstApp:function(){this._appsMenu.openFirstApp();},_onAppNameClicked:function(ev){var actionID=parseInt(this.menu_id_to_action_id(this.current_primary_menu));this._trigger_menu_clicked(this.current_primary_menu,actionID);},_onMouseOverMenu:function(ev){if(config.device.isMobile){return;}
var $target=$(ev.currentTarget);var $opened=$target.siblings('.show');if($opened.length){$opened.find('[data-toggle="dropdown"]:first').dropdown('toggle');$opened.removeClass('show');$target.find('[data-toggle="dropdown"]:first').dropdown('toggle');$target.addClass('show');}},});return Menu;});;

/* /web/static/src/js/chrome/apps_menu.js defined in bundle 'web.assets_backend' */
odoo.define('web.AppsMenu',function(require){"use strict";var Widget=require('web.Widget');var AppsMenu=Widget.extend({template:'AppsMenu',events:{'click .o_app':'_onAppsMenuItemClicked',},init:function(parent,menuData){this._super.apply(this,arguments);this._activeApp=undefined;this._apps=_.map(menuData.children,function(appMenuData){return{actionID:parseInt(appMenuData.action.split(',')[1]),menuID:appMenuData.id,name:appMenuData.name,xmlID:appMenuData.xmlid,};});},getApps:function(){return this._apps;},openFirstApp:function(){if(!this._apps.length){return}
var firstApp=this._apps[0];this._openApp(firstApp);},_openApp:function(app){this._setActiveApp(app);this.trigger_up('app_clicked',{action_id:app.actionID,menu_id:app.menuID,});},_setActiveApp:function(app){var $oldActiveApp=this.$('.o_app.active');$oldActiveApp.removeClass('active');var $newActiveApp=this.$('.o_app[data-action-id="'+app.actionID+'"]');$newActiveApp.addClass('active');},_onAppsMenuItemClicked:function(ev){var $target=$(ev.currentTarget);var actionID=$target.data('action-id');var menuID=$target.data('menu-id');var app=_.findWhere(this._apps,{actionID:actionID,menuID:menuID});this._openApp(app);},});return AppsMenu;});;

/* /web/static/src/js/widgets/pie_chart.js defined in bundle 'web.assets_backend' */
odoo.define('web.PieChart',function(require){"use strict";var core=require('web.core');var Domain=require('web.Domain');var viewRegistry=require('web.view_registry');var Widget=require('web.Widget');var widgetRegistry=require('web.widget_registry');var qweb=core.qweb;var PieChart=Widget.extend({className:'o_pie_chart',xmlDependencies:['/web/static/src/xml/chart.xml'],init:function(parent,record,node){this._super.apply(this,arguments);var modifiers=node.attrs.modifiers;var domain=record.domain.concat(Domain.prototype.stringToArray(modifiers.domain||'[]'));var arch=qweb.render('web.PieChart',{modifiers:modifiers,title:node.attrs.title||modifiers.title||modifiers.measure,});var pieChartContext=JSON.parse(JSON.stringify(record.context));delete pieChartContext.graph_mode;delete pieChartContext.graph_measure;delete pieChartContext.graph_groupbys;this.subViewParams={modelName:record.model,withButtons:false,withControlPanel:false,withSearchPanel:false,isEmbedded:true,useSampleModel:record.isSample,mode:'pie',};this.subViewParams.searchQuery={context:pieChartContext,domain:domain,groupBy:[],timeRanges:{},};this.viewInfo={arch:arch,fields:record.fields,viewFields:record.fieldsInfo.dashboard,};},willStart:function(){var self=this;var def1=this._super.apply(this,arguments);var SubView=viewRegistry.get('graph');var subView=new SubView(this.viewInfo,this.subViewParams);var def2=subView.getController(this).then(function(controller){self.controller=controller;return self.controller.appendTo(document.createDocumentFragment());});return Promise.all([def1,def2]);},start:function(){this.$el.append(this.controller.$el);return this._super.apply(this,arguments);},on_attach_callback:function(){this.controller.on_attach_callback();},});widgetRegistry.add('pie_chart',PieChart);return PieChart;});;

/* /web/static/src/js/widgets/ribbon.js defined in bundle 'web.assets_backend' */
odoo.define('web.ribbon',function(require){'use strict';var widgetRegistry=require('web.widget_registry');var Widget=require('web.Widget');var RibbonWidget=Widget.extend({template:'web.ribbon',xmlDependencies:['/web/static/src/xml/ribbon.xml'],init:function(parent,data,options){this._super.apply(this,arguments);this.text=options.attrs.title||options.attrs.text;this.tooltip=options.attrs.tooltip;this.className=options.attrs.bg_color?options.attrs.bg_color:'bg-success';if(this.text.length>15){this.className+=' o_small';}else if(this.text.length>10){this.className+=' o_medium';}},});widgetRegistry.add('web_ribbon',RibbonWidget);return RibbonWidget;});;

/* /web/static/src/js/widgets/signature.js defined in bundle 'web.assets_backend' */
odoo.define('web.signature_widget',function(require){"use strict";const framework=require('web.framework');const SignatureDialog=require('web.signature_dialog');const widgetRegistry=require('web.widget_registry');const Widget=require('web.Widget');const WidgetSignature=Widget.extend({custom_events:Object.assign({},Widget.prototype.custom_events,{upload_signature:'_onUploadSignature',}),events:Object.assign({},Widget.prototype.events,{'click .o_sign_label':'_onClickSignature',}),template:'SignButton',init:function(parent,record,nodeInfo){this._super.apply(this,arguments);this.res_id=record.res_id;this.res_model=record.model;this.state=record;this.node=nodeInfo;this.signature_field=this.node.attrs.signature_field||'signature';},_onClickSignature:function(){const nameAndSignatureOptions={displaySignatureRatio:3,mode:'draw',noInputName:true,signatureType:'signature',};if(this.node.attrs.full_name){let signName;const fieldFullName=this.state.data[this.node.attrs.full_name];if(fieldFullName&&fieldFullName.type==='record'){signName=fieldFullName.data.display_name;}else{signName=fieldFullName;}
nameAndSignatureOptions.defaultName=signName||undefined;}
nameAndSignatureOptions.defaultFont=this.node.attrs.default_font||'';this.signDialog=new SignatureDialog(this,{nameAndSignatureOptions:nameAndSignatureOptions,});this.signDialog.open();},_onUploadSignature:function(ev){const file=ev.data.signatureImage[1];const always=()=>{this.trigger_up('reload');framework.unblockUI();};framework.blockUI();const rpcProm=this._rpc({model:this.res_model,method:'write',args:[[this.res_id],{[this.signature_field]:file,}],});rpcProm.then(always).guardedCatch(always);return rpcProm;},});widgetRegistry.add('signature',WidgetSignature);});;

/* /web/static/src/js/components/action_menus.js defined in bundle 'web.assets_backend' */
odoo.define('web.ActionMenus',function(require){"use strict";const Context=require('web.Context');const DropdownMenu=require('web.DropdownMenu');const Registry=require('web.Registry');const{Component}=owl;class ActionMenus extends Component{mounted(){this._addTooltips();}
patched(){this._addTooltips();}
get actionItems(){const callbackActions=(this.props.items.other||[]).map(action=>Object.assign({key:`action-${action.description}`},action));const actionActions=this.props.items.action||[];const relateActions=this.props.items.relate||[];const formattedActions=[...actionActions,...relateActions].map(action=>({action,description:action.name,key:action.id}));const registryActions=this.constructor.registry.values().map(({Component,getProps},index)=>({key:`registry-action-${index}`,Component,props:getProps(this.props),}));return[...callbackActions,...formattedActions,...registryActions];}
get printItems(){const printActions=this.props.items.print||[];const printItems=printActions.map(action=>({action,description:action.name,key:action.id}));return printItems;}
_addTooltips(){$(this.el.querySelectorAll('[title]')).tooltip({delay:{show:500,hide:0}});}
async _executeAction(action){let activeIds=this.props.activeIds;if(this.props.isDomainSelected){activeIds=await this.rpc({model:this.env.action.res_model,method:'search',args:[this.props.domain],kwargs:{limit:this.env.session.active_ids_limit,},});}
const activeIdsContext={active_id:activeIds[0],active_ids:activeIds,active_model:this.env.action.res_model,};if(this.props.domain){activeIdsContext.active_domain=this.props.domain;}
const context=new Context(this.props.context,activeIdsContext).eval();const result=await this.rpc({route:'/web/action/load',params:{action_id:action.id,context},});result.context=new Context(result.context||{},activeIdsContext).set_eval_context(context);result.flags=result.flags||{};result.flags.new_window=true;this.trigger('do-action',{action:result,options:{on_close:()=>this.trigger('reload'),},});}
_onItemSelected(ev){ev.stopPropagation();const{item}=ev.detail;if(item.callback){item.callback([item]);}else if(item.action){this._executeAction(item.action);}else if(item.url){this.env.services.navigate(item.url);}}}
ActionMenus.registry=new Registry();ActionMenus.components={DropdownMenu};ActionMenus.props={activeIds:{type:Array,element:[Number|String]},context:Object,domain:{type:Array,optional:1},isDomainSelected:{type:Boolean,optional:1},items:{type:Object,shape:{action:{type:Array,optional:1},print:{type:Array,optional:1},other:{type:Array,optional:1},},},};ActionMenus.template='web.ActionMenus';return ActionMenus;});;

/* /web/static/src/js/components/dropdown_menu.js defined in bundle 'web.assets_backend' */
odoo.define('web.DropdownMenu',function(require){"use strict";const DropdownMenuItem=require('web.DropdownMenuItem');const{Component,hooks}=owl;const{useExternalListener,useRef,useState}=hooks;class DropdownMenu extends Component{constructor(){super(...arguments);this.dropdownMenu=useRef('dropdown');this.state=useState({open:false});useExternalListener(window,'click',this._onWindowClick);useExternalListener(window,'keydown',this._onWindowKeydown);}
get displayCaret(){return false;}
get displayChevron(){return this.env.device.isMobile;}
get icon(){return this.props.icon;}
get items(){return this.props.items;}
get title(){return this.props.title;}
_onButtonKeydown(ev){switch(ev.key){case'ArrowLeft':case'ArrowRight':case'ArrowUp':case'ArrowDown':const firstItem=this.el.querySelector('.dropdown-item');if(firstItem){ev.preventDefault();firstItem.focus();}}}
_onItemSelected(){if(this.props.closeOnSelected){this.state.open=false;}}
_onWindowClick(ev){if(this.state.open&&!this.el.contains(ev.target)&&!this.el.contains(document.activeElement)){this.state.open=false;}}
_onWindowKeydown(ev){if(this.state.open&&ev.key==='Escape'){this.state.open=false;}}}
DropdownMenu.components={DropdownMenuItem};DropdownMenu.defaultProps={items:[]};DropdownMenu.props={icon:{type:String,optional:1},items:{type:Array,element:Object,optional:1,},title:{type:String,optional:1},closeOnSelected:{type:Boolean,optional:1},};DropdownMenu.template='web.DropdownMenu';return DropdownMenu;});;

/* /web/static/src/js/components/dropdown_menu_item.js defined in bundle 'web.assets_backend' */
odoo.define('web.DropdownMenuItem',function(require){"use strict";const{useListener}=require('web.custom_hooks');const{Component,hooks}=owl;const{useExternalListener,useRef,useState}=hooks;class DropdownMenuItem extends Component{constructor(){super(...arguments);this.canBeOpened=Boolean(this.props.options&&this.props.options.length);this.fallbackFocusRef=useRef('fallback-focus');this.state=useState({open:false});useExternalListener(window,'click',this._onWindowClick);useListener('keydown',this._onKeydown);}
_onKeydown(ev){if(['INPUT','TEXTAREA'].includes(document.activeElement.tagName)){return;}
switch(ev.key){case'ArrowLeft':if(this.canBeOpened&&this.state.open){ev.preventDefault();if(this.fallbackFocusRef.el){this.fallbackFocusRef.el.focus();}
this.state.open=false;}
break;case'ArrowRight':if(this.canBeOpened&&!this.state.open){ev.preventDefault();this.state.open=true;}
break;case'Escape':ev.target.blur();if(this.canBeOpened&&this.state.open){ev.preventDefault();ev.stopPropagation();if(this.fallbackFocusRef.el){this.fallbackFocusRef.el.focus();}
this.state.open=false;}}}
_onWindowClick(ev){if(this.state.open&&!this.el.contains(ev.target)&&!this.el.contains(document.activeElement)){this.state.open=false;}}}
DropdownMenuItem.template='web.DropdownMenuItem';return DropdownMenuItem;});;

/* /web/static/src/js/components/custom_checkbox.js defined in bundle 'web.assets_backend' */
odoo.define('web.CustomCheckbox',function(require){"use strict";const utils=require('web.utils');const{Component}=owl;class CustomCheckbox extends Component{constructor(){super(...arguments);this._id=`checkbox-comp-${utils.generateID()}`;}}
CustomCheckbox.props={id:{type:[String,Number],optional:1,},disabled:{type:Boolean,optional:1,},value:{type:Boolean,optional:1,},text:{type:String,optional:1,},};CustomCheckbox.template='web.CustomCheckbox';return CustomCheckbox;});;

/* /web/static/src/js/components/custom_file_input.js defined in bundle 'web.assets_backend' */
odoo.define('web.CustomFileInput',function(require){"use strict";const{Component,hooks}=owl;const{useRef}=hooks;class CustomFileInput extends Component{constructor(){super(...arguments);this.fileInputRef=useRef('file-input');}
async _onFileInputChange(){const{action,model,id}=this.props;const params={csrf_token:odoo.csrf_token,ufile:[...this.fileInputRef.el.files],};if(model){params.model=model;}
if(id){params.id=id;}
const fileData=await this.env.services.httpRequest(action,params,'text');const parsedFileData=JSON.parse(fileData);if(parsedFileData.error){throw new Error(parsedFileData.error);}
this.trigger('uploaded',{files:parsedFileData});}
_onTriggerClicked(){this.fileInputRef.el.click();}}
CustomFileInput.defaultProps={accepted_file_extensions:'*',action:'/web/binary/upload',multi_upload:false,};CustomFileInput.props={accepted_file_extensions:{type:String,optional:1},action:{type:String,optional:1},id:{type:Number,optional:1},model:{type:String,optional:1},multi_upload:{type:Boolean,optional:1},};CustomFileInput.template='web.CustomFileInput';return CustomFileInput;});;

/* /web/static/src/js/components/datepicker.js defined in bundle 'web.assets_backend' */
odoo.define('web.DatePickerOwl',function(require){"use strict";const field_utils=require('web.field_utils');const time=require('web.time');const{useAutofocus}=require('web.custom_hooks');const{Component,hooks}=owl;const{useExternalListener,useRef,useState}=hooks;let datePickerId=0;class DatePicker extends Component{constructor(){super(...arguments);this.inputRef=useRef('input');this.state=useState({warning:false});this.datePickerId=`o_datepicker_${datePickerId++}`;this.typeOfDate='date';useAutofocus();useExternalListener(window,'scroll',this._onWindowScroll);}
mounted(){$(this.el).on('show.datetimepicker',this._onDateTimePickerShow.bind(this));$(this.el).on('hide.datetimepicker',this._onDateTimePickerHide.bind(this));$(this.el).on('error.datetimepicker',()=>false);const pickerOptions=Object.assign({format:this.defaultFormat},this.props);this._datetimepicker(pickerOptions);this.inputRef.el.value=this._formatDate(this.props.date);}
willUnmount(){this._datetimepicker('destroy');}
willUpdateProps(nextProps){for(const prop in nextProps){this._datetimepicker(prop,nextProps[prop]);}
if(nextProps.date){this.inputRef.el.value=this._formatDate(nextProps.date);}}
get defaultFormat(){return time.getLangDateFormat();}
_datetimepicker(...args){$(this.el).datetimepicker(...args);}
_formatDate(date){try{return field_utils.format[this.typeOfDate](date,null,{timezone:false});}catch(err){return false;}}
_parseInput(inputValue){try{return field_utils.parse[this.typeOfDate](inputValue,null,{timezone:false});}catch(err){return false;}}
_onDateTimePickerHide(){const date=this._parseInput(this.inputRef.el.value);this.state.warning=date.format('YYYY-MM-DD')>moment().format('YYYY-MM-DD');this.trigger('datetime-changed',{date});}
_onDateTimePickerShow(){this.inputRef.el.select();}
_onInputClick(){this._datetimepicker('toggle');}
_onInputChange(){const date=this._parseInput(this.inputRef.el.value);if(date){this.state.warning=date.format('YYYY-MM-DD')>moment().format('YYYY-MM-DD');this.trigger('datetime-changed',{date});}else{this.inputRef.el.value=this._formatDate(this.props.date);}}
_onWindowScroll(ev){if(ev.target!==this.inputRef.el){this._datetimepicker('hide');}}}
DatePicker.defaultProps={calendarWeeks:true,icons:{clear:'fa fa-delete',close:'fa fa-check primary',date:'fa fa-calendar',down:'fa fa-chevron-down',next:'fa fa-chevron-right',previous:'fa fa-chevron-left',time:'fa fa-clock-o',today:'fa fa-calendar-check-o',up:'fa fa-chevron-up',},locale:moment.locale(),maxDate:moment({y:9999,M:11,d:31}),minDate:moment({y:1}),useCurrent:false,widgetParent:'body',};DatePicker.props={date:moment,buttons:{type:Object,shape:{showClear:Boolean,showClose:Boolean,showToday:Boolean,},optional:1,},calendarWeeks:Boolean,format:{type:String,optional:1},icons:{type:Object,shape:{clear:String,close:String,date:String,down:String,next:String,previous:String,time:String,today:String,up:String,},},keyBinds:{validate:kb=>typeof kb==='object'||kb===null,optional:1},locale:String,maxDate:moment,minDate:moment,readonly:{type:Boolean,optional:1},useCurrent:Boolean,widgetParent:String,};DatePicker.template='web.DatePicker';class DateTimePicker extends DatePicker{constructor(){super(...arguments);this.typeOfDate='datetime';}
get defaultFormat(){return time.getLangDatetimeFormat();}}
DateTimePicker.defaultProps=Object.assign({},DatePicker.defaultProps,{buttons:{showClear:false,showClose:true,showToday:false,},});return{DatePicker,DateTimePicker,};});;

/* /web/static/src/js/components/pager.js defined in bundle 'web.assets_backend' */
odoo.define('web.Pager',function(require){"use strict";const{useAutofocus}=require('web.custom_hooks');const{Component,hooks}=owl;const{useState}=hooks;class Pager extends Component{constructor(){super(...arguments);this.state=useState({disabled:false,editing:false,});useAutofocus();}
async willUpdateProps(nextProps){this.state.editing=false;if(this.props.currentMinimum!==nextProps.currentMinimum||this.props.limit!==nextProps.limit||this.props.size!==nextProps.size){this.state.disabled=false;}}
get maximum(){return Math.min(this.props.currentMinimum+this.props.limit-1,this.props.size);}
get singlePage(){const{currentMinimum,size}=this.props;return(1===currentMinimum)&&(this.maximum===size);}
get value(){return this.props.currentMinimum+(this.props.limit>1?`-${this.maximum}`:'');}
async _changeSelection(direction){try{await this.props.validate();}catch(err){return;}
const{limit,size}=this.props;let currentMinimum=(this.props.currentMinimum+limit*direction);if(currentMinimum>size){currentMinimum=1;}else if((currentMinimum<1)&&(limit===1)){currentMinimum=size;}else if((currentMinimum<1)&&(limit>1)){currentMinimum=size-((size%limit)||limit)+1;}
this._updateAndDisable(currentMinimum,limit);}
async _saveValue(value){try{await this.props.validate();}catch(err){return;}
const[min,max]=value.trim().split(/\s*[\-\s,;]\s*/);let currentMinimum=Math.max(Math.min(parseInt(min,10),this.props.size),1);let maximum=max?Math.max(Math.min(parseInt(max,10),this.props.size),1):min;if(!isNaN(currentMinimum)&&!isNaN(maximum)&&currentMinimum<=maximum){const limit=Math.max(maximum-currentMinimum)+1;this._updateAndDisable(currentMinimum,limit);}}
_updateAndDisable(currentMinimum,limit){if(currentMinimum!==this.props.currentMinimum||limit!==this.props.limit){this.state.disabled=true;this.trigger('pager-changed',{currentMinimum,limit});}}
_onEdit(){if(this.props.editable&&!this.state.editing&&!this.state.disabled){this.state.editing=true;}}
_onValueChange(ev){this._saveValue(ev.currentTarget.value);if(!this.state.disabled){ev.preventDefault();}}
_onValueKeydown(ev){switch(ev.key){case'Enter':ev.preventDefault();ev.stopPropagation();this._saveValue(ev.currentTarget.value);break;case'Escape':ev.preventDefault();ev.stopPropagation();this.state.editing=false;break;}}}
Pager.defaultProps={editable:true,validate:async()=>{},withAccessKey:true,};Pager.props={currentMinimum:{type:Number,optional:1},editable:Boolean,limit:{validate:l=>!isNaN(l),optional:1},size:{type:Number,optional:1},validate:Function,withAccessKey:Boolean,};Pager.template='web.Pager';return Pager;});;

/* /web/static/src/js/apps.js defined in bundle 'web.assets_backend' */
odoo.define('web.Apps',function(require){"use strict";var AbstractAction=require('web.AbstractAction');var config=require('web.config');var core=require('web.core');var framework=require('web.framework');var session=require('web.session');var _t=core._t;var apps_client=null;var Apps=AbstractAction.extend({contentTemplate:'EmptyComponent',remote_action_tag:'loempia.embed',failback_action_id:'base.open_module_tree',init:function(parent,action){this._super(parent,action);var options=action.params||{};this.params=options;},get_client:function(){var check_client_available=function(client){var i=new Image();var def=new Promise(function(resolve,reject){i.onerror=function(){reject(client);};i.onload=function(){resolve(client);};});var ts=new Date().getTime();i.src=_.str.sprintf('%s/web/static/src/img/sep-a.gif?%s',client.origin,ts);return def;};if(apps_client){return check_client_available(apps_client);}else{return this._rpc({model:'ir.module.module',method:'get_apps_server'}).then(function(u){var link=$(_.str.sprintf('<a href="%s"></a>',u))[0];var host=_.str.sprintf('%s//%s',link.protocol,link.host);var dbname=link.pathname;if(dbname[0]==='/'){dbname=dbname.substr(1);}
var client={origin:host,dbname:dbname};apps_client=client;return check_client_available(client);});}},destroy:function(){$(window).off("message."+this.uniq);if(this.$ifr){this.$ifr.remove();this.$ifr=null;}
return this._super();},_on_message:function($e){var self=this,client=this.client,e=$e.originalEvent;if(e.origin!==client.origin){return;}
var dispatcher={'event':function(m){self.trigger('message:'+m.event,m);},'action':function(m){self.do_action(m.action).then(function(r){var w=self.$ifr[0].contentWindow;w.postMessage({id:m.id,result:r},client.origin);});},'rpc':function(m){return self._rpc({route:m.args[0],params:m.args[1]}).then(function(r){var w=self.$ifr[0].contentWindow;w.postMessage({id:m.id,result:r},client.origin);});},'Model':function(m){return self._rpc({model:m.model,method:m.args[0],args:m.args[1]}).then(function(r){var w=self.$ifr[0].contentWindow;w.postMessage({id:m.id,result:r},client.origin);});},};if(!_.isObject(e.data)){return;}
if(dispatcher[e.data.type]){dispatcher[e.data.type](e.data);}},start:function(){var self=this;return new Promise(function(resolve,reject){self.get_client().then(function(client){self.client=client;var qs={db:client.dbname};if(config.isDebug()){qs.debug=odoo.debug;}
var u=$.param.querystring(client.origin+"/apps/embed/client",qs);var css={width:'100%',height:'750px'};self.$ifr=$('<iframe>').attr('src',u);self.uniq=_.uniqueId('apps');$(window).on("message."+self.uniq,self.proxy('_on_message'));self.on('message:ready',self,function(m){var w=this.$ifr[0].contentWindow;var act={type:'ir.actions.client',tag:this.remote_action_tag,params:_.extend({},this.params,{db:session.db,origin:session.origin,})};w.postMessage({type:'action',action:act},client.origin);});self.on('message:set_height',self,function(m){this.$ifr.height(m.height);});self.on('message:blockUI',self,function(){framework.blockUI();});self.on('message:unblockUI',self,function(){framework.unblockUI();});self.on('message:warn',self,function(m){self.do_warn(m.title,m.message,m.sticky);});self.$ifr.appendTo(self.$('.o_content')).css(css).addClass('apps-client');resolve();},function(){self.do_warn(_t('Odoo Apps will be available soon'),_t('Showing locally available modules'),true);return self._rpc({route:'/web/action/load',params:{action_id:self.failback_action_id},}).then(function(action){return self.do_action(action);}).then(reject,reject);});});}});var AppsUpdates=Apps.extend({remote_action_tag:'loempia.embed.updates',});core.action_registry.add("apps",Apps);core.action_registry.add("apps.updates",AppsUpdates);return Apps;});;

/* /web/static/src/js/_deprecated/basic_fields.js defined in bundle 'web.assets_backend' */
odoo.define('web.basic_fields.deprecated',function(require){"use strict";var AbstractField=require('web.AbstractField');var core=require('web.core');var _lt=core._lt;var FieldBoolean=AbstractField.extend({className:'o_field_boolean',description:_lt("Checkbox"),events:_.extend({},AbstractField.prototype.events,{change:'_onChange',}),supportedFieldTypes:['boolean'],activate:function(options){var activated=this._super.apply(this,arguments);if(activated&&options&&options.event&&$(options.event.target).closest('.custom-control.custom-checkbox').length){this._setValue(!this.value);}
return activated;},getFocusableElement:function(){return this.mode==='readonly'?$():this.$input;},isSet:function(){return true;},reset:function(record,event){var rendered=this._super.apply(this,arguments);if(event&&event.target.name===this.name){this.activate();}
return rendered;},setIDForLabel:function(id){this._super.apply(this,arguments);this.$('.custom-control-label').attr('for',id);},_render:function(){var $checkbox=this._formatValue(this.value);this.$input=$checkbox.find('input');this.$input.prop('disabled',this.mode==='readonly');this.$el.addClass($checkbox.attr('class'));this.$el.empty().append($checkbox.contents());},_onChange:function(){this._setValue(this.$input[0].checked);},_onKeydown:function(ev){switch(ev.which){case $.ui.keyCode.ENTER:ev.preventDefault();this.$input.prop('checked',!this.value);this._setValue(!this.value);return;case $.ui.keyCode.UP:case $.ui.keyCode.RIGHT:case $.ui.keyCode.DOWN:case $.ui.keyCode.LEFT:ev.preventDefault();}
this._super.apply(this,arguments);},});return{FieldBoolean:FieldBoolean,};});;

/* /web/static/src/js/fields/abstract_field.js defined in bundle 'web.assets_backend' */
odoo.define('web.AbstractField',function(require){"use strict";var field_utils=require('web.field_utils');var Widget=require('web.Widget');var AbstractField=Widget.extend({events:{'keydown':'_onKeydown',},custom_events:{navigation_move:'_onNavigationMove',},fieldDependencies:{},resetOnAnyFieldChange:false,specialData:false,supportedFieldTypes:[],description:"",noLabel:false,label:'',init:function(parent,name,record,options){this._super(parent);options=options||{};this.name=name;this.record=record;this.field=record.fields[name];this.viewType=options.viewType||'default';var fieldsInfo=record.fieldsInfo[this.viewType];this.attrs=options.attrs||(fieldsInfo&&fieldsInfo[name])||{};this.additionalContext=options.additionalContext||{};this.value=record.data[name];this.recordData=record.data;this.string=this.attrs.string||this.field.string||this.name;this.nodeOptions=this.attrs.options||{};this.dataPointID=record.id;this.res_id=record.res_id;this.model=record.model;this.mode=options.mode||"readonly";this._isValid=true;this.lastSetValue=undefined;this.formatType=this.attrs.widget in field_utils.format?this.attrs.widget:this.field.type;this.formatOptions={};this.parseOptions={};if(this.attrs.decorations){this.resetOnAnyFieldChange=true;}},start:function(){var self=this;return this._super.apply(this,arguments).then(function(){self.$el.attr('name',self.name);self.$el.addClass('o_field_widget');return self._render();});},activate:function(options){if(this.isFocusable()){var $focusable=this.getFocusableElement();$focusable.focus();if($focusable.is('input[type="text"], textarea')){$focusable[0].selectionStart=$focusable[0].selectionEnd=$focusable[0].value.length;if(options&&!options.noselect){$focusable.select();}}
return true;}
return false;},commitChanges:function(){},getFocusableElement:function(){return $();},isEmpty:function(){return!this.isSet();},isFocusable:function(){var $focusable=this.getFocusableElement();return $focusable.length&&$focusable.is(':visible');},isSet:function(){return!!this.value;},isValid:function(){return this._isValid;},reset:function(record,event){this._reset(record,event);return this._render()||Promise.resolve();},removeInvalidClass:function(){this.$el.removeClass('o_field_invalid');this.$el.removeAttr('aria-invalid');},setIDForLabel:function(id){this.getFocusableElement().attr('id',id);},setInvalidClass:function(){this.$el.addClass('o_field_invalid');this.$el.attr('aria-invalid','true');},updateModifiersValue:function(modifiers){this.attrs.modifiersValue=modifiers||{};},_applyDecorations:function(){var self=this;this.attrs.decorations.forEach(function(dec){var isToggled=py.PY_isTrue(py.evaluate(dec.expression,self.record.evalContext));const className=self._getClassFromDecoration(dec.name);self.$el.toggleClass(className,isToggled);});},_formatValue:function(value,formatType){var options=_.extend({},this.nodeOptions,{data:this.recordData},this.formatOptions);return field_utils.format[formatType||this.formatType](value,this.field,options);},_getClassFromDecoration:function(decoration){return`text-${decoration.split('-')[1]}`;},_isLastSetValue:function(value){return this.lastSetValue===value||(this.value===false&&value==='');},_isSameValue:function(value){return this.value===value;},_parseValue:function(value){return field_utils.parse[this.formatType](value,this.field,this.parseOptions);},_render:function(){if(this.attrs.decorations){this._applyDecorations();}
if(this.mode==='edit'){return this._renderEdit();}else if(this.mode==='readonly'){return this._renderReadonly();}},_renderEdit:function(){},_renderReadonly:function(){},_reset:function(record,event){this.lastSetValue=undefined;this.record=record;this.value=record.data[this.name];this.recordData=record.data;},_setValue:function(value,options){if(this._isLastSetValue(value)){return Promise.resolve();}
this.lastSetValue=value;try{value=this._parseValue(value);this._isValid=true;}catch(e){this._isValid=false;this.trigger_up('set_dirty',{dataPointID:this.dataPointID});return Promise.reject({message:"Value set is not valid"});}
if(!(options&&options.forceChange)&&this._isSameValue(value)){return Promise.resolve();}
var self=this;return new Promise(function(resolve,reject){var changes={};changes[self.name]=value;self.trigger_up('field_changed',{dataPointID:self.dataPointID,changes:changes,viewType:self.viewType,doNotSetDirty:options&&options.doNotSetDirty,notifyChange:!options||options.notifyChange!==false,allowWarning:options&&options.allowWarning,onSuccess:resolve,onFailure:reject,});});},_onKeydown:function(ev){switch(ev.which){case $.ui.keyCode.TAB:var event=this.trigger_up('navigation_move',{direction:ev.shiftKey?'previous':'next',});if(event.is_stopped()){ev.preventDefault();ev.stopPropagation();}
break;case $.ui.keyCode.ENTER:ev.preventDefault();ev.stopPropagation();this.trigger_up('navigation_move',{direction:'next_line'});break;case $.ui.keyCode.ESCAPE:this.trigger_up('navigation_move',{direction:'cancel',originalEvent:ev});break;case $.ui.keyCode.UP:ev.stopPropagation();this.trigger_up('navigation_move',{direction:'up'});break;case $.ui.keyCode.RIGHT:ev.stopPropagation();this.trigger_up('navigation_move',{direction:'right'});break;case $.ui.keyCode.DOWN:ev.stopPropagation();this.trigger_up('navigation_move',{direction:'down'});break;case $.ui.keyCode.LEFT:ev.stopPropagation();this.trigger_up('navigation_move',{direction:'left'});break;}},_onNavigationMove:function(ev){ev.data.target=this;},});return AbstractField;});;

/* /web/static/src/js/fields/basic_fields.js defined in bundle 'web.assets_backend' */
odoo.define('web.basic_fields',function(require){"use strict";var AbstractField=require('web.AbstractField');var config=require('web.config');var core=require('web.core');var datepicker=require('web.datepicker');var deprecatedFields=require('web.basic_fields.deprecated');var dom=require('web.dom');var Domain=require('web.Domain');var DomainSelector=require('web.DomainSelector');var DomainSelectorDialog=require('web.DomainSelectorDialog');var framework=require('web.framework');var py_utils=require('web.py_utils');var session=require('web.session');var utils=require('web.utils');var view_dialogs=require('web.view_dialogs');var field_utils=require('web.field_utils');var time=require('web.time');const{ColorpickerDialog}=require('web.Colorpicker');let FieldBoolean=deprecatedFields.FieldBoolean;require("web.zoomodoo");var qweb=core.qweb;var _t=core._t;var _lt=core._lt;var TranslatableFieldMixin={_renderTranslateButton:function(){if(_t.database.multi_lang&&this.field.translate){var lang=_t.database.parameters.code.split('_')[0].toUpperCase();return $(`<span class="o_field_translate btn btn-link">${lang}</span>`).on('click',this._onTranslate.bind(this));}
return $();},_onTranslate:function(ev){ev.preventDefault();this.trigger_up('translate',{fieldName:this.name,id:this.dataPointID,isComingFromTranslationAlert:false,});},};var DebouncedField=AbstractField.extend({DEBOUNCE:1000000000,init:function(){this._super.apply(this,arguments);this._isDirty=false;if(this.mode==='edit'){if(this.DEBOUNCE){this._doDebouncedAction=_.debounce(this._doAction,this.DEBOUNCE);}else{this._doDebouncedAction=this._doAction;}
var self=this;var debouncedFunction=this._doDebouncedAction;this._doDebouncedAction=function(){self._isDirty=true;debouncedFunction.apply(self,arguments);};}},commitChanges:function(){if(this._isDirty&&this.mode==='edit'){return this._doAction();}},_doAction:function(){if(!this.isDestroyed()){return this._setValue(this._getValue());}},_getValue:function(){},});var InputField=DebouncedField.extend({custom_events:_.extend({},DebouncedField.prototype.custom_events,{field_changed:'_onFieldChanged',}),events:_.extend({},DebouncedField.prototype.events,{'input':'_onInput','change':'_onChange',}),init:function(){this._super.apply(this,arguments);this.nodeOptions.isPassword='password'in this.attrs;if(this.mode==='edit'){this.tagName='input';}
this.isDirty=false;this.lastChangeEvent=undefined;},getFocusableElement:function(){return this.$input||$();},reset:function(record,event){this._reset(record,event);if(!event||event===this.lastChangeEvent){this.isDirty=false;}
if(this.isDirty||(event&&event.target===this&&event.data.changes&&event.data.changes[this.name]===this.value)){if(this.attrs.decorations){this._applyDecorations();}
return Promise.resolve();}else{return this._render();}},_getValue:function(){return this.$input.val();},_prepareInput:function($input){this.$input=$input||$("<input/>");this.$input.addClass('o_input');var inputAttrs={placeholder:this.attrs.placeholder||""};var inputVal;if(this.nodeOptions.isPassword){inputAttrs=_.extend(inputAttrs,{type:'password',autocomplete:this.attrs.autocomplete||'new-password'});inputVal=this.value||'';}else{inputAttrs=_.extend(inputAttrs,{type:'text',autocomplete:this.attrs.autocomplete||'none'});inputVal=this._formatValue(this.value);}
this.$input.attr(inputAttrs);this.$input.val(inputVal);return this.$input;},_renderEdit:function(){this._prepareInput(this.$el);},_renderReadonly:function(){this.$el.text(this._formatValue(this.value));},_onChange:function(){this._doAction();},_onFieldChanged:function(event){this.lastChangeEvent=event;},_onInput:function(){this.isDirty=!this._isLastSetValue(this.$input.val());this._doDebouncedAction();},_onNavigationMove:function(ev){this._super.apply(this,arguments);if(this.mode==='edit'&&ev.data.direction!=='cancel'){var input=this.$input[0];var selecting=(input.selectionEnd!==input.selectionStart);if((ev.data.direction==="left"&&(selecting||input.selectionStart!==0))||(ev.data.direction==="right"&&(selecting||input.selectionStart!==input.value.length))){ev.stopPropagation();}
if(ev.data.direction==='next'&&this.attrs.modifiersValue&&this.attrs.modifiersValue.required&&this.viewType!=='list'){if(!this.$input.val()){this.setInvalidClass();ev.stopPropagation();}else{this.removeInvalidClass();}}}},});var NumericField=InputField.extend({tagName:'span',init(){this._super.apply(this,arguments);this.shouldFormat=Boolean(JSON.parse('format'in this.nodeOptions?this.nodeOptions.format:true));},isSet:function(){return this.value===0||this._super.apply(this,arguments);},_evalFormula:function(expr,context){var val=expr.replace(new RegExp(/( )/g),'');var safeEvalString='';for(let v of val.split(new RegExp(/([-+*/()^])/g))){if(!['+','-','*','/','(',')','^'].includes(v)&&v.length){v=field_utils.parse.float(v);}
if(v==='^'){v='**';}
safeEvalString+=v;};return py_utils.py_eval(safeEvalString,context);},_formatValue:function(value){if(!this.shouldFormat||(this.mode==='edit'&&this.nodeOptions.type==='number')){return value;}
return this._super.apply(this,arguments);},_parseValue:function(value){if(this.mode==='edit'&&this.nodeOptions.type==='number'){return Number(value);}
return this._super.apply(this,arguments);},_prepareInput:function($input){var result=this._super.apply(this,arguments);if(this.nodeOptions.type==='number'){this.$input.attr({type:'number'});}
if(this.nodeOptions.step){this.$input.attr({step:this.nodeOptions.step});}
return result;},_setValue:function(value,options){var originalValue=value;value=value.trim();if(value.startsWith('=')){try{value=this._evalFormula(value.substr(1));value=this._formatValue(value);this.$input.val(value);}catch(err){value=originalValue;}}
return this._super(value,options);},});var FieldChar=InputField.extend(TranslatableFieldMixin,{description:_lt("Text"),className:'o_field_char',tagName:'span',supportedFieldTypes:['char'],_renderEdit:function(){var def=this._super.apply(this,arguments);if(this.field.size&&this.field.size>0){this.$el.attr('maxlength',this.field.size);}
if(this.field.translate){this.$el=this.$el.add(this._renderTranslateButton());this.$el.addClass('o_field_translate');}
return def;},_setValue:function(value,options){if(this.field.trim){value=value.trim();}
return this._super(value,options);},});var LinkButton=AbstractField.extend({events:_.extend({},AbstractField.prototype.events,{'click':'_onClick'}),_render:function(){if(this.value){var className=this.attrs.icon||'fa-globe';this.$el.html("<span role='img'/>");this.$el.addClass("fa "+className);this.$el.attr('title',this.value);this.$el.attr('aria-label',this.value);}},_onClick:function(event){event.stopPropagation();window.open(this.value,'_blank');},});var FieldDateRange=InputField.extend({className:'o_field_date_range',tagName:'span',jsLibs:['/web/static/lib/daterangepicker/daterangepicker.js','/web/static/src/js/libs/daterangepicker.js',],cssLibs:['/web/static/lib/daterangepicker/daterangepicker.css',],supportedFieldTypes:['date','datetime'],init:function(){this._super.apply(this,arguments);this.isDateField=this.formatType==='date';this.dateRangePickerOptions=_.defaults({},this.nodeOptions.picker_options||{},{timePicker:!this.isDateField,timePicker24Hour:_t.database.parameters.time_format.search('%H')!==-1,autoUpdateInput:false,timePickerIncrement:5,locale:{format:this.isDateField?time.getLangDateFormat():time.getLangDatetimeFormat(),},});this.relatedEndDate=this.nodeOptions.related_end_date;this.relatedStartDate=this.nodeOptions.related_start_date;},destroy:function(){if(this.$pickerContainer){this.$pickerContainer.remove();}
if(this._onScroll){window.removeEventListener('scroll',this._onScroll,true);}
this._super.apply(this,arguments);},_applyChanges:function(ev,picker){var changes={};var displayStartDate=field_utils.format[this.formatType](picker.startDate,{},{timezone:false});var displayEndDate=field_utils.format[this.formatType](picker.endDate,{},{timezone:false});var changedStartDate=picker.startDate;var changedEndDate=picker.endDate;if(this.isDateField){changedStartDate=picker.startDate.add(session.getTZOffset(picker.startDate),'minutes');changedEndDate=picker.endDate.startOf('day').add(session.getTZOffset(picker.endDate),'minutes');}
if(this.relatedEndDate){this.$el.val(displayStartDate);changes[this.name]=this._parseValue(changedStartDate);changes[this.relatedEndDate]=this._parseValue(changedEndDate);}
if(this.relatedStartDate){this.$el.val(displayEndDate);changes[this.name]=this._parseValue(changedEndDate);changes[this.relatedStartDate]=this._parseValue(changedStartDate);}
this.trigger_up('field_changed',{dataPointID:this.dataPointID,viewType:this.viewType,changes:changes,});},_renderEdit:function(){this._super.apply(this,arguments);var self=this;var startDate;var endDate;if(this.relatedEndDate){startDate=this._formatValue(this.value);endDate=this._formatValue(this.recordData[this.relatedEndDate]);}
if(this.relatedStartDate){startDate=this._formatValue(this.recordData[this.relatedStartDate]);endDate=this._formatValue(this.value);}
this.dateRangePickerOptions.startDate=startDate||moment();this.dateRangePickerOptions.endDate=endDate||moment();this.$el.daterangepicker(this.dateRangePickerOptions);this.$el.on('apply.daterangepicker',this._applyChanges.bind(this));this.$el.on('show.daterangepicker',this._onDateRangePickerShow.bind(this));this.$el.on('hide.daterangepicker',this._onDateRangePickerHide.bind(this));this.$el.off('keyup.daterangepicker');this.$pickerContainer=this.$el.data('daterangepicker').container;this.$pickerContainer.on('click',function(ev){ev.stopPropagation();if($(ev.target).hasClass('applyBtn')){self.$el.data('daterangepicker').hide();}});this.$pickerContainer.on('focusin.bs.modal','select',function(ev){ev.stopPropagation();});},_onDateRangePickerHide(){if(this._onScroll){window.removeEventListener('scroll',this._onScroll,true);}},_onDateRangePickerShow(){this._onScroll=ev=>{if(!this.$pickerContainer.get(0).contains(ev.target)){this.$el.data('daterangepicker').hide();}};window.addEventListener('scroll',this._onScroll,true);},});var FieldDate=InputField.extend({description:_lt("Date"),className:"o_field_date",tagName:"span",supportedFieldTypes:['date','datetime'],events:AbstractField.prototype.events,init:function(){this._super.apply(this,arguments);this.formatOptions.timezone=true;this.datepickerOptions=_.defaults({},this.nodeOptions.datepicker||{},{defaultDate:this.value});},start:function(){var self=this;var prom;if(this.mode==='edit'){this.datewidget=this._makeDatePicker();this.datewidget.on('datetime_changed',this,function(){var value=this._getValue();if((!value&&this.value)||(value&&!this._isSameValue(value))){this._setValue(value);}});prom=this.datewidget.appendTo('<div>').then(function(){self.datewidget.$el.addClass(self.$el.attr('class'));self._prepareInput(self.datewidget.$input);self._replaceElement(self.datewidget.$el);});}
return Promise.resolve(prom).then(this._super.bind(this));},activate:function(){if(this.isFocusable()&&this.datewidget){this.datewidget.$input.select();return true;}
return false;},_doDebouncedAction:function(){this.datewidget.changeDatetime();},_getValue:function(){return this.datewidget.getValue();},_isSameValue:function(value){if(value===false){return this.value===false;}
return value.isSame(this.value,'day');},_makeDatePicker:function(){return new datepicker.DateWidget(this,this.datepickerOptions);},_renderEdit:function(){this.datewidget.setValue(this.value);this.$input=this.datewidget.$input;},async _onKeydown(ev){this._super(...arguments);if(ev.which===$.ui.keyCode.ENTER){await this._setValue(this.$input.val());this._render();}},});var FieldDateTime=FieldDate.extend({description:_lt("Date & Time"),supportedFieldTypes:['datetime'],init:function(){this._super.apply(this,arguments);if(this.value){var offset=this.getSession().getTZOffset(this.value);var displayedValue=this.value.clone().add(offset,'minutes');this.datepickerOptions.defaultDate=displayedValue;}},_getValue:function(){var value=this.datewidget.getValue();return value&&value.add(-this.getSession().getTZOffset(value),'minutes');},_isSameValue:function(value){if(value===false){return this.value===false;}
return value.isSame(this.value);},_makeDatePicker:function(){return new datepicker.DateTimeWidget(this,this.datepickerOptions);},_renderEdit:function(){var value=this.value&&this.value.clone().add(this.getSession().getTZOffset(this.value),'minutes');this.datewidget.setValue(value);this.$input=this.datewidget.$input;},});const RemainingDays=FieldDate.extend({description:_lt("Remaining Days"),supportedFieldTypes:['date','datetime'],_renderReadonly(){if(this.value===false){this.$el.removeClass('text-bf text-danger text-warning');return;}
const nowUTC=moment().utc();const nowUserTZ=nowUTC.clone().add(session.getTZOffset(nowUTC),'minutes');const valueUserTZ=this.value.clone().add(session.getTZOffset(this.value),'minutes');const diffDays=valueUserTZ.startOf('day').diff(nowUserTZ.startOf('day'),'days');let text;if(Math.abs(diffDays)>99){text=this._formatValue(this.value,'date');}else if(diffDays===0){text=_t("Today");}else if(diffDays<0){text=diffDays===-1?_t("Yesterday"):_t(`${-diffDays} days ago`);}else{text=diffDays===1?_t("Tomorrow"):_t(`In ${diffDays} days`);}
this.$el.text(text).attr('title',this._formatValue(this.value,'date'));this.$el.toggleClass('text-bf',diffDays<=0);this.$el.toggleClass('text-danger',diffDays<0);this.$el.toggleClass('text-warning',diffDays===0);},});var FieldMonetary=NumericField.extend({description:_lt("Monetary"),className:'o_field_monetary o_field_number',tagName:'span',supportedFieldTypes:['float','monetary'],resetOnAnyFieldChange:true,init:function(){this._super.apply(this,arguments);this._setCurrency();if(this.mode==='edit'){this.tagName='div';this.className+=' o_input';this.formatOptions.noSymbol=true;}
this.formatOptions.currency=this.currency;this.formatOptions.digits=[16,2];this.formatOptions.field_digits=this.nodeOptions.field_digits;},isSet:function(){return this.value===0||this._super.apply(this,arguments);},_renderEdit:function(){this.$el.empty();var def=this._prepareInput(this.$input).appendTo(this.$el);if(this.currency){var $currencySymbol=$('<span>',{text:this.currency.symbol});if(this.currency.position==="after"){this.$el.append($currencySymbol);}else{this.$el.prepend($currencySymbol);}}
return def;},_renderReadonly:function(){this.$el.html(this._formatValue(this.value));},_reset:function(){this._super.apply(this,arguments);this._setCurrency();},_setCurrency:function(){var currencyField=this.nodeOptions.currency_field||this.field.currency_field||'currency_id';var currencyID=this.record.data[currencyField]&&this.record.data[currencyField].res_id;this.currency=session.get_currency(currencyID);this.formatOptions.currency=this.currency;},});var FieldInteger=NumericField.extend({description:_lt("Integer"),className:'o_field_integer o_field_number',supportedFieldTypes:['integer'],_formatValue:function(value){if(typeof value==='string'){if(!/^[0-9]+-/.test(value)){throw new Error('"'+value+'" is not an integer or a virtual id');}
return value;}
return this._super.apply(this,arguments);},});var FieldFloat=NumericField.extend({description:_lt("Decimal"),className:'o_field_float o_field_number',supportedFieldTypes:['float'],init:function(){this._super.apply(this,arguments);if(this.attrs.digits){this.nodeOptions.digits=JSON.parse(this.attrs.digits);}},});var FieldFloatTime=FieldFloat.extend({description:_lt("Time"),formatType:'float_time',init:function(){this._super.apply(this,arguments);this.formatType='float_time';}});var FieldFloatFactor=FieldFloat.extend({supportedFieldTypes:['float'],className:'o_field_float_factor',formatType:'float_factor',init:function(){this._super.apply(this,arguments);if(!this.nodeOptions.factor){this.nodeOptions.factor=1;}
this.parseOptions=this.nodeOptions;}});var FieldFloatToggle=AbstractField.extend({supportedFieldTypes:['float'],formatType:'float_factor',className:'o_field_float_toggle',tagName:'span',events:{click:'_onClick'},init:function(){this._super.apply(this,arguments);this.formatType='float_factor';if(this.mode==='edit'){this.tagName='button';}
if(this.attrs.digits){this.nodeOptions.digits=JSON.parse(this.attrs.digits);}
if(!this.nodeOptions.factor){this.nodeOptions.factor=1;}
if(!this.nodeOptions.range){this.nodeOptions.range=[0.0,0.5,1.0];}
this.parseOptions=this.nodeOptions;},_getDisplayedValue:function(){var usrFormatValue=this._formatValue(this.value);return field_utils.parse['float'](usrFormatValue);},_renderEdit:function(){this.$el.text(this._formatValue(this.value));},_renderReadonly:function(){this.$el.text(this._formatValue(this.value));},_nextValue:function(){var range=this.nodeOptions.range;var val=utils.closestNumber(this._getDisplayedValue(),range);var index=_.indexOf(range,val);if(index!==-1){if(index+1<range.length){return range[index+1];}}
return range[0];},_onClick:function(ev){if(this.mode==='edit'){ev.stopPropagation();var next_val=this._nextValue();next_val=field_utils.format['float'](next_val);this._setValue(next_val);}},isSet:function(){return this.value===0||this._super(...arguments);},});var FieldPercentage=FieldFloat.extend({className:'o_field_float_percentage o_field_number',description:_lt("Percentage"),init(){this._super(...arguments);if(this.mode==='edit'){this.tagName='div';this.className+=' o_input';this.formatOptions.noSymbol=true;}},_renderEdit(){this.$el.empty();this._prepareInput(this.$input).appendTo(this.$el);const $percentageSymbol=$('<span>',{text:'%'});this.$el.append($percentageSymbol);},});var FieldText=InputField.extend(TranslatableFieldMixin,{description:_lt("Multiline Text"),className:'o_field_text',supportedFieldTypes:['text','html'],tagName:'span',init:function(){this._super.apply(this,arguments);if(this.mode==='edit'){this.tagName='textarea';}
this.autoResizeOptions={parent:this};},start:function(){if(this.mode==='edit'){dom.autoresize(this.$el,this.autoResizeOptions);if(this.field.translate){this.$el=this.$el.add(this._renderTranslateButton());this.$el.addClass('o_field_translate');}}
return this._super();},reset:function(){var self=this;return Promise.resolve(this._super.apply(this,arguments)).then(function(){if(self.mode==='edit'){self.$input.trigger('change');}});},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ENTER){ev.stopPropagation();return;}
this._super.apply(this,arguments);},});var ListFieldText=FieldText.extend({init:function(){this._super.apply(this,arguments);this.autoResizeOptions.min_height=0;},});var HandleWidget=AbstractField.extend({description:_lt("Handle"),noLabel:true,className:'o_row_handle fa fa-arrows ui-sortable-handle',widthInList:'33px',tagName:'span',supportedFieldTypes:['integer'],isSet:function(){return true;},});var FieldEmail=InputField.extend({description:_lt("Email"),className:'o_field_email',events:_.extend({},InputField.prototype.events,{'click':'_onClick',}),prefix:'mailto',supportedFieldTypes:['char'],init:function(){this._super.apply(this,arguments);this.tagName=this.mode==='readonly'?'a':'input';},getFocusableElement:function(){return this.mode==='readonly'?this.$el:this._super.apply(this,arguments);},_renderReadonly:function(){if(this.value){this.$el.text(this.value).addClass('o_form_uri o_text_overflow').attr('href',this.prefix+':'+this.value);}else{this.$el.text('');}},_setValue:function(value,options){if(this.field.trim){value=value.trim();}
return this._super(value,options);},_onClick:function(ev){ev.stopPropagation();},});var FieldPhone=FieldEmail.extend({description:_lt("Phone"),className:'o_field_phone',prefix:'tel',_renderReadonly:function(){this._super();this.$el.removeClass('o_text_overflow');},});var UrlWidget=InputField.extend({description:_lt("URL"),className:'o_field_url',events:_.extend({},InputField.prototype.events,{'click':'_onClick',}),supportedFieldTypes:['char'],init:function(){this._super.apply(this,arguments);this.tagName=this.mode==='readonly'?'a':'input';this.websitePath=this.nodeOptions.website_path||false;},getFocusableElement:function(){return this.mode==='readonly'?this.$el:this._super.apply(this,arguments);},_renderReadonly:function(){let href=this.value;if(this.value&&!this.websitePath){const regex=/^(?:[fF]|[hH][tT])[tT][pP][sS]?:\/\//;href=!regex.test(this.value)?`http://${href}`:href;}
this.$el.text(this.attrs.text||this.value).addClass('o_form_uri o_text_overflow').attr('target','_blank').attr('href',href);},_onClick:function(ev){ev.stopPropagation();},});var CopyClipboard={destroy:function(){this._super.apply(this,arguments);if(this.clipboard){this.clipboard.destroy();}},_initClipboard:function(){var self=this;var $clipboardBtn=this.$('.o_clipboard_button');$clipboardBtn.tooltip({title:_t('Copied !'),trigger:'manual',placement:'right'});this.clipboard=new ClipboardJS($clipboardBtn[0],{text:function(){return self.value.trim();},container:self.$el[0]});this.clipboard.on('success',function(){_.defer(function(){$clipboardBtn.tooltip('show');_.delay(function(){$clipboardBtn.tooltip('hide');},800);});});},_renderReadonly:function(){this._super.apply(this,arguments);if(this.value){this.$el.append($(qweb.render(this.clipboardTemplate)));this._initClipboard();}}};var TextCopyClipboard=FieldText.extend(CopyClipboard,{description:_lt("Copy to Clipboard"),clipboardTemplate:'CopyClipboardText',className:"o_field_copy",});var CharCopyClipboard=FieldChar.extend(CopyClipboard,{description:_lt("Copy to Clipboard"),clipboardTemplate:'CopyClipboardChar',className:'o_field_copy o_text_overflow',});var AbstractFieldBinary=AbstractField.extend({events:_.extend({},AbstractField.prototype.events,{'change .o_input_file':'on_file_change','click .o_select_file_button':function(){this.$('.o_input_file').click();},'click .o_clear_file_button':'_onClearClick',}),init:function(parent,name,record){this._super.apply(this,arguments);this.fields=record.fields;this.useFileAPI=!!window.FileReader;this.max_upload_size=64*1024*1024;this.accepted_file_extensions=(this.nodeOptions&&this.nodeOptions.accepted_file_extensions)||this.accepted_file_extensions||'*';if(!this.useFileAPI){var self=this;this.fileupload_id=_.uniqueId('o_fileupload');$(window).on(this.fileupload_id,function(){var args=[].slice.call(arguments).slice(1);self.on_file_uploaded.apply(self,args);});}},destroy:function(){if(this.fileupload_id){$(window).off(this.fileupload_id);}
this._super.apply(this,arguments);},on_file_change:function(e){var self=this;var file_node=e.target;if((this.useFileAPI&&file_node.files.length)||(!this.useFileAPI&&$(file_node).val()!=='')){if(this.useFileAPI){var file=file_node.files[0];if(file.size>this.max_upload_size){var msg=_t("The selected file exceed the maximum file size of %s.");this.do_warn(_t("File upload"),_.str.sprintf(msg,utils.human_size(this.max_upload_size)));return false;}
utils.getDataURLFromFile(file).then(function(data){data=data.split(',')[1];self.on_file_uploaded(file.size,file.name,file.type,data);});}else{this.$('form.o_form_binary_form').submit();}
this.$('.o_form_binary_progress').show();this.$('button').hide();}},on_file_uploaded:function(size,name){if(size===false){this.do_warn(false,_t("There was a problem while uploading your file"));console.warn("Error while uploading file : ",name);}else{this.on_file_uploaded_and_valid.apply(this,arguments);}
this.$('.o_form_binary_progress').hide();this.$('button').show();},on_file_uploaded_and_valid:function(size,name,content_type,file_base64){this.set_filename(name);this._setValue(file_base64);this._render();},set_filename:function(value){var filename=this.attrs.filename;if(filename&&filename in this.fields){var changes={};changes[filename]=value;this.trigger_up('field_changed',{dataPointID:this.dataPointID,changes:changes,viewType:this.viewType,});}},_clearFile:function(){var self=this;this.$('.o_input_file').val('');this.set_filename('');if(!this.isDestroyed()){this._setValue(false).then(function(){self._render();});}},_onClearClick:function(ev){this._clearFile();},});var FieldBinaryImage=AbstractFieldBinary.extend({description:_lt("Image"),fieldDependencies:_.extend({},AbstractFieldBinary.prototype.fieldDependencies,{__last_update:{type:'datetime'},}),template:'FieldBinaryImage',placeholder:"/web/static/src/img/placeholder.png",events:_.extend({},AbstractFieldBinary.prototype.events,{'click img':function(){if(this.mode==="readonly"){this.trigger_up('bounce_edit');}},}),supportedFieldTypes:['binary'],file_type_magic_word:{'/':'jpg','R':'gif','i':'png','P':'svg+xml',},accepted_file_extensions:'image/*',_getImageUrl:function(model,res_id,field,unique){return session.url('/web/image',{model:model,id:JSON.stringify(res_id),field:field,unique:field_utils.format.datetime(unique).replace(/[^0-9]/g,''),});},_render:function(){var self=this;var url=this.placeholder;if(this.value){if(!utils.is_bin_size(this.value)){url='data:image/'+(this.file_type_magic_word[this.value[0]]||'png')+';base64,'+this.value;}else{var field=this.nodeOptions.preview_image||this.name;var unique=this.recordData.__last_update;url=this._getImageUrl(this.model,this.res_id,field,unique);}}
var $img=$(qweb.render("FieldBinaryImage-img",{widget:this,url:url}));var width=this.nodeOptions.size?this.nodeOptions.size[0]:this.attrs.width;var height=this.nodeOptions.size?this.nodeOptions.size[1]:this.attrs.height;if(width){$img.attr('width',width);$img.css('max-width',width+'px');}
if(height){$img.attr('height',height);$img.css('max-height',height+'px');}
this.$('> img').remove();this.$el.prepend($img);$img.one('error',function(){$img.attr('src',self.placeholder);self.do_warn(false,_t("Could not display the selected image"));});return this._super.apply(this,arguments);},_renderReadonly:function(){this._super.apply(this,arguments);if(this.nodeOptions.zoom){var unique=this.recordData.__last_update;var url=this._getImageUrl(this.model,this.res_id,'image_1920',unique);var $img;var imageField=_.find(Object.keys(this.recordData),function(o){return o.startsWith('image_');});if(this.nodeOptions.background)
{if('tag'in this.nodeOptions){this.tagName=this.nodeOptions.tag;}
if('class'in this.attrs){this.$el.addClass(this.attrs.class);}
const image_field=this.field.manual?this.name:'image_128';var urlThumb=this._getImageUrl(this.model,this.res_id,image_field,unique);this.$el.empty();$img=this.$el;$img.css('backgroundImage','url('+urlThumb+')');}else{$img=this.$('img');}
var zoomDelay=0;if(this.nodeOptions.zoom_delay){zoomDelay=this.nodeOptions.zoom_delay;}
if(this.recordData[imageField]){$img.attr('data-zoom',1);$img.attr('data-zoom-image',url);$img.zoomOdoo({event:'mouseenter',timer:zoomDelay,attach:'.o_content',attachToTarget:true,onShow:function(){var zoomHeight=Math.ceil(this.$zoom.height());var zoomWidth=Math.ceil(this.$zoom.width());if(zoomHeight<128&&zoomWidth<128){this.hide();}
core.bus.on('keydown',this,this.hide);core.bus.on('click',this,this.hide);},beforeAttach:function(){this.$flyout.css({width:'512px',height:'512px'});},preventClicks:this.nodeOptions.preventClicks,});}}},});var CharImageUrl=AbstractField.extend({className:'o_field_image',description:_lt("Image"),supportedFieldTypes:['char'],placeholder:"/web/static/src/img/placeholder.png",_renderReadonly:function(){var self=this;const url=this.value;if(url){var $img=$(qweb.render("FieldBinaryImage-img",{widget:this,url:url}));const width=this.nodeOptions.size?this.nodeOptions.size[0]:this.attrs.width;const height=this.nodeOptions.size?this.nodeOptions.size[1]:this.attrs.height;if(width){$img.attr('width',width);$img.css('max-width',width+'px');}
if(height){$img.attr('height',height);$img.css('max-height',height+'px');}
this.$('> img').remove();this.$el.prepend($img);$img.one('error',function(){$img.attr('src',self.placeholder);self.displayNotification({type:'info',message:_t("Could not display the specified image url."),});});}
return this._super.apply(this,arguments);},});var KanbanFieldBinaryImage=FieldBinaryImage.extend({events:{},});var KanbanCharImageUrl=CharImageUrl.extend({events:{},});var FieldBinaryFile=AbstractFieldBinary.extend({description:_lt("File"),template:'FieldBinaryFile',events:_.extend({},AbstractFieldBinary.prototype.events,{'click':function(event){if(this.mode==='readonly'&&this.value&&this.recordData.id){this.on_save_as(event);}},'click .o_input':function(){this.$('.o_input_file').click();},}),supportedFieldTypes:['binary'],init:function(){this._super.apply(this,arguments);this.filename_value=this.recordData[this.attrs.filename];},_renderReadonly:function(){this.do_toggle(!!this.value);if(this.value){this.$el.empty().append($("<span/>").addClass('fa fa-download'));if(this.recordData.id){this.$el.css('cursor','pointer');}else{this.$el.css('cursor','not-allowed');}
if(this.filename_value){this.$el.append(" "+this.filename_value);}}
if(!this.res_id){this.$el.css('cursor','not-allowed');}else{this.$el.css('cursor','pointer');}},_renderEdit:function(){if(this.value){this.$el.children().removeClass('o_hidden');this.$('.o_select_file_button').first().addClass('o_hidden');this.$('.o_input').eq(0).val(this.filename_value||this.value);}else{this.$el.children().addClass('o_hidden');this.$('.o_select_file_button').first().removeClass('o_hidden');}},set_filename:function(value){this._super.apply(this,arguments);this.filename_value=value;this.$('.o_save_file_button').prop('disabled',true);},on_save_as:function(ev){if(!this.value){this.do_warn(false,_t("The field is empty, there's nothing to save."));ev.stopPropagation();}else if(this.res_id){framework.blockUI();var filename_fieldname=this.attrs.filename;this.getSession().get_file({complete:framework.unblockUI,data:{'model':this.model,'id':this.res_id,'field':this.name,'filename_field':filename_fieldname,'filename':this.recordData[filename_fieldname]||"",'download':true,'data':utils.is_bin_size(this.value)?null:this.value,},error:(error)=>this.call('crash_manager','rpc_error',error),url:'/web/content',});ev.stopPropagation();}},});var FieldPdfViewer=FieldBinaryFile.extend({description:_lt("PDF Viewer"),supportedFieldTypes:['binary'],template:'FieldPdfViewer',accepted_file_extensions:'application/pdf',init:function(){this._super.apply(this,arguments);this.PDFViewerApplication=false;},_disableButtons:function(iframe){$(iframe).contents().find('button#openFile').hide();},_getURI:function(fileURI){var page=this.recordData[this.name+'_page']||1;if(!fileURI){var queryObj={model:this.model,field:this.name,id:this.res_id,};var queryString=$.param(queryObj);fileURI='/web/content?'+queryString;}
fileURI=encodeURIComponent(fileURI);var viewerURL='/web/static/lib/pdfjs/web/viewer.html?file=';return viewerURL+fileURI+'#page='+page;},_render:function(){var self=this;var $pdfViewer=this.$('.o_form_pdf_controls').children().add(this.$('.o_pdfview_iframe'));var $selectUpload=this.$('.o_select_file_button').first();var $iFrame=this.$('.o_pdfview_iframe');$iFrame.on('load',function(){self.PDFViewerApplication=this.contentWindow.window.PDFViewerApplication;self._disableButtons(this);});if(this.mode==="readonly"&&this.value){$iFrame.attr('src',this._getURI());}else{if(this.value){var binSize=utils.is_bin_size(this.value);$pdfViewer.removeClass('o_hidden');$selectUpload.addClass('o_hidden');if(binSize){$iFrame.attr('src',this._getURI());}}else{$pdfViewer.addClass('o_hidden');$selectUpload.removeClass('o_hidden');}}},on_file_change:function(ev){this._super.apply(this,arguments);var files=ev.target.files;if(!files||files.length===0){return;}
var fileURI=URL.createObjectURL(files[0]);if(this.PDFViewerApplication){this.PDFViewerApplication.open(fileURI,0);}else{this.$('.o_pdfview_iframe').attr('src',this._getURI(fileURI));}},on_save_as:function(ev){ev.stopPropagation();},});var PriorityWidget=AbstractField.extend({description:_lt("Priority"),className:"o_priority",attributes:{'role':'radiogroup',},events:{'mouseover > a':'_onMouseOver','mouseout > a':'_onMouseOut','click > a':'_onClick','keydown > a':'_onKeydown',},supportedFieldTypes:['selection'],isSet:function(){return true;},getFocusableElement:function(){var checked=this.$("[aria-checked='true']");return checked.length?checked:this.$("[data-index='1']");},_render:function(){var self=this;var index_value=this.value?_.findIndex(this.field.selection,function(v){return v[0]===self.value;}):0;this.$el.empty();this.empty_value=this.field.selection[0][0];this.$el.attr('aria-label',this.string);_.each(this.field.selection.slice(1),function(choice,index){self.$el.append(self._renderStar('<a href="#">',index_value>=index+1,index+1,choice[1],index_value));});},_renderStar:function(tag,isFull,index,tip,indexValue){var isChecked=indexValue===index;var defaultFocus=indexValue===0&&index===1;return $(tag).attr('role','radio').attr('aria-checked',isChecked).attr('title',tip).attr('aria-label',tip).attr('tabindex',isChecked||defaultFocus?0:-1).attr('data-index',index).addClass('o_priority_star fa').toggleClass('fa-star',isFull).toggleClass('fa-star-o',!isFull);},_onClick:function(event){event.preventDefault();event.stopPropagation();var index=$(event.currentTarget).data('index');var newValue=this.field.selection[index][0];if(newValue===this.value){newValue=this.empty_value;}
this._setValue(newValue);},_onMouseOut:function(){clearTimeout(this.hoverTimer);var self=this;this.hoverTimer=setTimeout(function(){self._render();},200);},_onMouseOver:function(event){clearTimeout(this.hoverTimer);this.$('.o_priority_star').removeClass('fa-star-o').addClass('fa-star');$(event.currentTarget).nextAll().removeClass('fa-star').addClass('fa-star-o');},_onKeydown:function(event){if(event.which===$.ui.keyCode.ENTER){return;}
this._super.apply(this,arguments);},_onNavigationMove:function(ev){var $curControl=this.$('a:focus');var $nextControl;if(ev.data.direction==='right'||ev.data.direction==='down'){$nextControl=$curControl.next('a');}else if(ev.data.direction==='left'||ev.data.direction==='up'){$nextControl=$curControl.prev('a');}
if($nextControl&&$nextControl.length){ev.stopPropagation();$nextControl.focus();return;}
this._super.apply(this,arguments);},});var AttachmentImage=AbstractField.extend({className:'o_attachment_image',_render:function(){if(this.value){this.$el.empty().append($('<img>/',{src:"/web/image/"+this.value.data.id+"?unique=1",title:this.value.data.display_name,alt:_t("Image")}));}}});var StateSelectionWidget=AbstractField.extend({template:'FormSelection',events:{'click .dropdown-item':'_setSelection',},supportedFieldTypes:['selection'],getFocusableElement:function(){return this.$("a[data-toggle='dropdown']");},_prepareDropdownValues:function(){var self=this;var _data=[];var current_stage_id=self.recordData.stage_id&&self.recordData.stage_id[0];var stage_data={id:current_stage_id,legend_normal:this.recordData.legend_normal||undefined,legend_blocked:this.recordData.legend_blocked||undefined,legend_done:this.recordData.legend_done||undefined,};_.map(this.field.selection||[],function(selection_item){var value={'name':selection_item[0],'tooltip':selection_item[1],};if(selection_item[0]==='normal'){value.state_name=stage_data.legend_normal?stage_data.legend_normal:selection_item[1];}else if(selection_item[0]==='done'){value.state_class='o_status_green';value.state_name=stage_data.legend_done?stage_data.legend_done:selection_item[1];}else{value.state_class='o_status_red';value.state_name=stage_data.legend_blocked?stage_data.legend_blocked:selection_item[1];}
_data.push(value);});return _data;},_render:function(){var states=this._prepareDropdownValues();var currentState=_.findWhere(states,{name:this.value})||states[0];this.$('.o_status').removeClass('o_status_red o_status_green').addClass(currentState.state_class).prop('special_click',true).parent().attr('title',currentState.state_name).attr('aria-label',this.string+": "+currentState.state_name);var $items=$(qweb.render('FormSelection.items',{states:_.without(states,currentState)}));var $dropdown=this.$('.dropdown-menu');$dropdown.children().remove();$items.appendTo($dropdown);var isReadonly=this.record.evalModifiers(this.attrs.modifiers).readonly;this.$('a[data-toggle=dropdown]').toggleClass('disabled',isReadonly||false);},_setSelection:function(ev){ev.preventDefault();var $item=$(ev.currentTarget);var value=String($item.data('value'));this._setValue(value);if(this.mode==='edit'){this._render();}},});var FavoriteWidget=AbstractField.extend({className:'o_favorite',events:{'click':'_setFavorite'},supportedFieldTypes:['boolean'],isSet:function(){return true;},_render:function(){var tip=this.value?_t('Remove from Favorites'):_t('Add to Favorites');var template=this.attrs.nolabel?'<a href="#"><i class="fa %s" title="%s" aria-label="%s" role="img"></i></a>':'<a href="#"><i class="fa %s" role="img" aria-label="%s"></i> %s</a>';this.$el.empty().append(_.str.sprintf(template,this.value?'fa-star':'fa-star-o',tip,tip));},_setFavorite:function(event){event.preventDefault();event.stopPropagation();this._setValue(!this.value);},});var LabelSelection=AbstractField.extend({supportedFieldTypes:['selection'],_render:function(){this.classes=this.nodeOptions&&this.nodeOptions.classes||{};var labelClass=this.classes[this.value]||'primary';this.$el.addClass('badge badge-'+labelClass).text(this._formatValue(this.value));},});var BooleanToggle=FieldBoolean.extend({description:_lt("Toggle"),className:FieldBoolean.prototype.className+' o_boolean_toggle',events:{'click':'_onClick'},_onClick:function(event){event.stopPropagation();this._setValue(!this.value);},});var StatInfo=AbstractField.extend({supportedFieldTypes:['integer','float'],isSet:function(){return true;},_render:function(){var options={value:this._formatValue(this.value||0),};if(!this.attrs.nolabel){if(this.nodeOptions.label_field&&this.recordData[this.nodeOptions.label_field]){options.text=this.recordData[this.nodeOptions.label_field];}else{options.text=this.string;}}
this.$el.html(qweb.render("StatInfo",options));this.$el.addClass('o_stat_info');},});var FieldPercentPie=AbstractField.extend({description:_lt("Percentage Pie"),template:'FieldPercentPie',supportedFieldTypes:['integer','float'],start:function(){this.$leftMask=this.$('.o_mask').first();this.$rightMask=this.$('.o_mask').last();this.$pieValue=this.$('.o_pie_value');return this._super();},isSet:function(){return true;},_render:function(){var value=this.value||0;var degValue=360*value/100;this.$rightMask.toggleClass('o_full',degValue>=180);var leftDeg='rotate('+((degValue<180)?180:degValue)+'deg)';var rightDeg='rotate('+((degValue<180)?degValue:0)+'deg)';this.$leftMask.css({transform:leftDeg,msTransform:leftDeg,mozTransform:leftDeg,webkitTransform:leftDeg});this.$rightMask.css({transform:rightDeg,msTransform:rightDeg,mozTransform:rightDeg,webkitTransform:rightDeg});this.$pieValue.text(Math.round(value)+'%');},});var FieldProgressBar=AbstractField.extend({description:_lt("Progress Bar"),template:"ProgressBar",events:{'change input':'on_change_input','input input':'on_change_input','keyup input':function(e){if(e.which===$.ui.keyCode.ENTER){this.on_change_input(e);}},},supportedFieldTypes:['integer','float'],init:function(){this._super.apply(this,arguments);if(this.recordData[this.nodeOptions.current_value]){this.value=this.recordData[this.nodeOptions.current_value];}
this.editable_readonly=!!this.nodeOptions.editable_readonly;this.readonly=this.nodeOptions.readonly||!this.nodeOptions.editable;this.canWrite=!this.readonly&&(this.mode==='edit'||(this.editable_readonly&&this.mode==='readonly')||(this.viewType==='kanban'));this.edit_max_value=!!this.nodeOptions.edit_max_value;this.max_value=this.recordData[this.nodeOptions.max_value]||100;this.title=_t(this.attrs.title||this.nodeOptions.title)||'';this.enableBarAsInput=false;this.edit_on_click=this.enableBarAsInput&&this.mode==='readonly'&&!this.edit_max_value;this.write_mode=false;},_render:function(){var self=this;this._render_value();if(this.canWrite){if(this.edit_on_click){this.$el.on('click','.o_progress',function(e){var $target=$(e.currentTarget);var numValue=Math.floor((e.pageX-$target.offset().left)/$target.outerWidth()*self.max_value);self.on_update(numValue);self._render_value();});}else{this.$el.on('click',function(){if(!self.write_mode){var $input=$('<input>',{type:'text',class:'o_progressbar_value o_input'});$input.on('blur',self.on_change_input.bind(self));self.$('.o_progressbar_value').replaceWith($input);self.write_mode=true;self._render_value();}});}}
return this._super();},on_update:function(value){if(this.edit_max_value){this.max_value=value;this._isValid=true;var changes={};changes[this.nodeOptions.max_value]=this.max_value;this.trigger_up('field_changed',{dataPointID:this.dataPointID,changes:changes,});}else{var formattedValue=this._formatValue(value);this._setValue(formattedValue);}},on_change_input:function(e){var $input=$(e.target);if(e.type==='change'&&!$input.is(':focus')){return;}
var parsedValue;try{parsedValue=field_utils.parse.float($input.val());}catch(error){this.do_warn(false,_t("Please enter a numerical value"));}
if(parsedValue!==undefined){if(e.type==='input'){this._render_value(parsedValue);if(parsedValue===0){$input.select();}}else{if(this.edit_max_value){parsedValue=parsedValue||100;}
var $div=$('<div>',{class:'o_progressbar_value'});this.$('.o_progressbar_value').replaceWith($div);this.write_mode=false;this.on_update(parsedValue);this._render_value();}}},_render_value:function(v){var value=this.value;var max_value=this.max_value;if(!isNaN(v)){if(this.edit_max_value){max_value=v;}else{value=v;}}
value=value||0;max_value=max_value||0;var widthComplete;if(value<=max_value){widthComplete=value/max_value*100;}else{widthComplete=100;}
this.$('.o_progress').toggleClass('o_progress_overflow',value>max_value).attr('aria-valuemin','0').attr('aria-valuemax',max_value).attr('aria-valuenow',value);this.$('.o_progressbar_complete').css('width',widthComplete+'%');if(!this.write_mode){if(max_value!==100){this.$('.o_progressbar_value').text(utils.human_number(value)+" / "+utils.human_number(max_value));}else{this.$('.o_progressbar_value').text(utils.human_number(value)+"%");}}else if(isNaN(v)){this.$('.o_progressbar_value').val(this.edit_max_value?max_value:value);this.$('.o_progressbar_value').focus().select();}},_reset:function(){this._super.apply(this,arguments);var new_max_value=this.recordData[this.nodeOptions.max_value];this.max_value=new_max_value!==undefined?new_max_value:this.max_value;},isSet:function(){return true;},});var FieldToggleBoolean=AbstractField.extend({description:_lt("Button"),template:"toggle_button",events:{'click':'_onToggleButton'},supportedFieldTypes:['boolean'],isSet:function(){return true;},_render:function(){this.$('i').toggleClass('o_toggle_button_success',!!this.value).toggleClass('text-muted',!this.value);var title=this.value?this.attrs.options.active:this.attrs.options.inactive;this.$el.attr('title',title);this.$el.attr('aria-pressed',this.value);},_onToggleButton:function(event){event.stopPropagation();this._setValue(!this.value);},});var JournalDashboardGraph=AbstractField.extend({className:"o_dashboard_graph",jsLibs:['/web/static/lib/Chart/Chart.js',],init:function(){this._super.apply(this,arguments);this.graph_type=this.attrs.graph_type;this.data=JSON.parse(this.value);},on_attach_callback:function(){this._isInDOM=true;this._renderInDOM();},on_detach_callback:function(){this._isInDOM=false;},_render:function(){if(this._isInDOM){return this._renderInDOM();}
return Promise.resolve();},_renderInDOM:function(){this.$el.empty();var config,cssClass;if(this.graph_type==='line'){config=this._getLineChartConfig();cssClass='o_graph_linechart';}else if(this.graph_type==='bar'){config=this._getBarChartConfig();cssClass='o_graph_barchart';}
this.$canvas=$('<canvas/>');this.$el.addClass(cssClass);this.$el.empty();this.$el.append(this.$canvas);var context=this.$canvas[0].getContext('2d');this.chart=new Chart(context,config);},_getLineChartConfig:function(){var labels=this.data[0].values.map(function(pt){return pt.x;});var borderColor=this.data[0].is_sample_data?'#dddddd':'#875a7b';var backgroundColor=this.data[0].is_sample_data?'#ebebeb':'#dcd0d9';return{type:'line',data:{labels:labels,datasets:[{data:this.data[0].values,fill:'start',label:this.data[0].key,backgroundColor:backgroundColor,borderColor:borderColor,borderWidth:2,}]},options:{legend:{display:false},scales:{yAxes:[{display:false}],xAxes:[{display:false}]},maintainAspectRatio:false,elements:{line:{tension:0.000001}},tooltips:{intersect:false,position:'nearest',caretSize:0,},},};},_getBarChartConfig:function(){var data=[];var labels=[];var backgroundColor=[];this.data[0].values.forEach(function(pt){data.push(pt.value);labels.push(pt.label);var color=pt.type==='past'?'#ccbdc8':(pt.type==='future'?'#a5d8d7':'#ebebeb');backgroundColor.push(color);});return{type:'bar',data:{labels:labels,datasets:[{data:data,fill:'start',label:this.data[0].key,backgroundColor:backgroundColor,}]},options:{legend:{display:false},scales:{yAxes:[{display:false}],},maintainAspectRatio:false,tooltips:{intersect:false,position:'nearest',caretSize:0,},elements:{line:{tension:0.000001}},},};},});var FieldDomain=AbstractField.extend({specialData:"_fetchSpecialDomain",events:_.extend({},AbstractField.prototype.events,{"click .o_domain_show_selection_button":"_onShowSelectionButtonClick","click .o_field_domain_dialog_button":"_onDialogEditButtonClick",}),custom_events:_.extend({},AbstractField.prototype.custom_events,{domain_changed:"_onDomainSelectorValueChange",domain_selected:"_onDomainSelectorDialogValueChange",open_record:"_onOpenRecord",}),init:function(){this._super.apply(this,arguments);this.inDialog=!!this.nodeOptions.in_dialog;this.fsFilters=this.nodeOptions.fs_filters||{};this.className="o_field_domain";if(this.mode==="edit"){this.className+=" o_edit_mode";}
if(!this.inDialog){this.className+=" o_inline_mode";}
this._setState();},isSet:function(){return true;},isValid:function(){return(this._super.apply(this,arguments)&&(!this.domainSelector||this.domainSelector.isValid())&&this._isValidForModel);},_render:function(){if(!this._domainModel){this._replaceContent();return Promise.resolve();}
var value=this.value||"[]";var def;if(!this.domainSelector){this.domainSelector=new DomainSelector(this,this._domainModel,value,{readonly:this.mode==="readonly"||this.inDialog,filters:this.fsFilters,debugMode:config.isDebug(),});def=this.domainSelector.prependTo(this.$el);}else{def=this.domainSelector.setDomain(value);}
return def.then(this._replaceContent.bind(this));},_replaceContent:function(){if(this._$content){this._$content.remove();}
this._$content=$(qweb.render("FieldDomain.content",{hasModel:!!this._domainModel,isValid:!!this._isValidForModel,nbRecords:this.record.specialData[this.name].nbRecords||0,inDialogEdit:this.inDialog&&this.mode==="edit",}));this._$content.appendTo(this.$el);},_reset:function(){this._super.apply(this,arguments);var oldDomainModel=this._domainModel;this._setState();if(this.domainSelector&&this._domainModel!==oldDomainModel){this.domainSelector.destroy();this.domainSelector=null;}},_setState:function(){var specialData=this.record.specialData[this.name];this._domainModel=specialData.model;this._isValidForModel=(specialData.nbRecords!==false);},_onShowSelectionButtonClick:function(e){e.preventDefault();new view_dialogs.SelectCreateDialog(this,{title:_t("Selected records"),res_model:this._domainModel,context:this.record.getContext({fieldName:this.name,viewType:this.viewType}),domain:this.value||"[]",no_create:true,readonly:true,disable_multiple_selection:true,}).open();},_onDialogEditButtonClick:function(e){e.preventDefault();new DomainSelectorDialog(this,this._domainModel,this.value||"[]",{readonly:this.mode==="readonly",filters:this.fsFilters,debugMode:config.isDebug(),}).open();},_onDomainSelectorValueChange:function(e){if(this.inDialog)return;this._setValue(Domain.prototype.arrayToString(this.domainSelector.getDomain()));},_onDomainSelectorDialogValueChange:function(e){this._setValue(Domain.prototype.arrayToString(e.data.domain));},_onOpenRecord:function(event){event.stopPropagation();},});var AceEditor=DebouncedField.extend({template:"AceEditor",jsLibs:['/web/static/lib/ace/ace.js',['/web/static/lib/ace/mode-python.js','/web/static/lib/ace/mode-xml.js']],events:{},start:function(){this._startAce(this.$('.ace-view-editor')[0]);return this._super.apply(this,arguments);},destroy:function(){if(this.aceEditor){this.aceEditor.destroy();}
this._super.apply(this,arguments);},_formatValue:function(value){return this._super.apply(this,arguments)||'';},_getValue:function(){return this.aceSession.getValue();},_render:function(){var newValue=this._formatValue(this.value);if(this.aceSession.getValue()!==newValue){this.aceSession.setValue(newValue);}},_startAce:function(node){this.aceEditor=ace.edit(node);this.aceEditor.setOptions({maxLines:Infinity,showPrintMargin:false,});if(this.mode==='readonly'){this.aceEditor.renderer.setOptions({displayIndentGuides:false,showGutter:false,});this.aceEditor.setOptions({highlightActiveLine:false,highlightGutterLine:false,readOnly:true,});this.aceEditor.renderer.$cursorLayer.element.style.display="none";}
this.aceEditor.$blockScrolling=true;this.aceSession=this.aceEditor.getSession();this.aceSession.setOptions({useWorker:false,mode:"ace/mode/"+(this.nodeOptions.mode||'xml'),tabSize:2,useSoftTabs:true,});if(this.mode==="edit"){this.aceEditor.on("change",this._doDebouncedAction.bind(this));this.aceEditor.on("blur",this._doAction.bind(this));}},});var FieldColor=AbstractField.extend({template:'FieldColor',events:_.extend({},AbstractField.prototype.events,{'click .o_field_color':'_onColorClick',}),custom_events:_.extend({},AbstractField.prototype.custom_events,{'colorpicker:saved':'_onColorpickerSaved',}),getFocusableElement:function(){return this.$('.o_field_color');},_render:function(){this.$('.o_field_color').data('value',this.value).css('background-color',this.value).attr('title',this.value);return this._super.apply(this,arguments);},_onColorClick:function(){if(this.mode==='edit'){const dialog=new ColorpickerDialog(this,{defaultColor:this.value,noTransparency:true,}).open();dialog.on('closed',this,()=>{Promise.resolve().then(()=>{this.getFocusableElement().focus();});});}},_onColorpickerSaved:function(ev){this._setValue(ev.data.hex);},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ENTER){ev.preventDefault();ev.stopPropagation();this._onColorClick(ev);}else{this._super.apply(this,arguments);}},});var FieldColorPicker=FieldInteger.extend({RECORD_COLORS:[_t('No color'),_t('Red'),_t('Orange'),_t('Yellow'),_t('Light blue'),_t('Dark purple'),_t('Salmon pink'),_t('Medium blue'),_t('Dark blue'),_t('Fushia'),_t('Green'),_t('Purple'),],init:function(){this._super.apply(this,arguments);this.tagName='div';},_renderEdit:function(){this.$el.html(qweb.render('ColorPicker'));this._setupColorPicker();this._highlightSelectedColor();},_renderReadonly:function(){var selectedColorName=this.RECORD_COLORS[this.value];this.$el.html(qweb.render('ColorPickerReadonly',{active_color:this.value,name_color:selectedColorName}));this.$el.on('click','a',function(ev){ev.preventDefault();});},_setupColorPicker:function(){var $colorpicker=this.$('ul');if(!$colorpicker.length){return;}
$colorpicker.html(qweb.render('KanbanColorPicker',{colors:this.RECORD_COLORS}));$colorpicker.on('click','a',this._onColorChanged.bind(this));},_getValue:function(){return this.value;},_onColorChanged:function(ev){ev.preventDefault();var color=null;if(ev.currentTarget&&ev.currentTarget.dataset&&ev.currentTarget.dataset.color){color=ev.currentTarget.dataset.color;}
if(color){this.value=color;this._onChange();this._renderEdit();}},_highlightSelectedColor:function(){try{$(this.$('li')[parseInt(this.value)]).css('border','2px solid teal');}catch(err){}},});return{TranslatableFieldMixin:TranslatableFieldMixin,DebouncedField:DebouncedField,FieldEmail:FieldEmail,FieldBinaryFile:FieldBinaryFile,FieldPdfViewer:FieldPdfViewer,AbstractFieldBinary:AbstractFieldBinary,FieldBinaryImage:FieldBinaryImage,KanbanFieldBinaryImage:KanbanFieldBinaryImage,CharImageUrl:CharImageUrl,KanbanCharImageUrl:KanbanCharImageUrl,FieldBoolean:FieldBoolean,BooleanToggle:BooleanToggle,FieldChar:FieldChar,LinkButton:LinkButton,FieldDate:FieldDate,FieldDateTime:FieldDateTime,FieldDateRange:FieldDateRange,RemainingDays:RemainingDays,FieldDomain:FieldDomain,FieldFloat:FieldFloat,FieldFloatTime:FieldFloatTime,FieldFloatFactor:FieldFloatFactor,FieldFloatToggle:FieldFloatToggle,FieldPercentage:FieldPercentage,FieldInteger:FieldInteger,FieldMonetary:FieldMonetary,FieldPercentPie:FieldPercentPie,FieldPhone:FieldPhone,FieldProgressBar:FieldProgressBar,FieldText:FieldText,ListFieldText:ListFieldText,FieldToggleBoolean:FieldToggleBoolean,HandleWidget:HandleWidget,InputField:InputField,NumericField:NumericField,AttachmentImage:AttachmentImage,LabelSelection:LabelSelection,StateSelectionWidget:StateSelectionWidget,FavoriteWidget:FavoriteWidget,PriorityWidget:PriorityWidget,StatInfo:StatInfo,UrlWidget:UrlWidget,TextCopyClipboard:TextCopyClipboard,CharCopyClipboard:CharCopyClipboard,JournalDashboardGraph:JournalDashboardGraph,AceEditor:AceEditor,FieldColor:FieldColor,FieldColorPicker:FieldColorPicker,};});;

/* /web/static/src/js/fields/field_registry.js defined in bundle 'web.assets_backend' */
odoo.define('web.field_registry',function(require){"use strict";const Registry=require('web.Registry');return new Registry(null,(value)=>!(value.prototype instanceof owl.Component));});odoo.define('web._field_registry',function(require){"use strict";var AbstractField=require('web.AbstractField');var basic_fields=require('web.basic_fields');var relational_fields=require('web.relational_fields');var registry=require('web.field_registry');var special_fields=require('web.special_fields');registry.add('abstract',AbstractField).add('input',basic_fields.InputField).add('integer',basic_fields.FieldInteger).add('boolean',basic_fields.FieldBoolean).add('date',basic_fields.FieldDate).add('datetime',basic_fields.FieldDateTime).add('daterange',basic_fields.FieldDateRange).add('remaining_days',basic_fields.RemainingDays).add('domain',basic_fields.FieldDomain).add('text',basic_fields.FieldText).add('list.text',basic_fields.ListFieldText).add('html',basic_fields.FieldText).add('float',basic_fields.FieldFloat).add('char',basic_fields.FieldChar).add('link_button',basic_fields.LinkButton).add('handle',basic_fields.HandleWidget).add('email',basic_fields.FieldEmail).add('phone',basic_fields.FieldPhone).add('url',basic_fields.UrlWidget).add('CopyClipboardText',basic_fields.TextCopyClipboard).add('CopyClipboardChar',basic_fields.CharCopyClipboard).add('image',basic_fields.FieldBinaryImage).add('image_url',basic_fields.CharImageUrl).add('kanban.image',basic_fields.KanbanFieldBinaryImage).add('kanban.image_url',basic_fields.KanbanCharImageUrl).add('binary',basic_fields.FieldBinaryFile).add('pdf_viewer',basic_fields.FieldPdfViewer).add('monetary',basic_fields.FieldMonetary).add('percentage',basic_fields.FieldPercentage).add('priority',basic_fields.PriorityWidget).add('attachment_image',basic_fields.AttachmentImage).add('label_selection',basic_fields.LabelSelection).add('kanban_label_selection',basic_fields.LabelSelection).add('state_selection',basic_fields.StateSelectionWidget).add('kanban_state_selection',basic_fields.StateSelectionWidget).add('boolean_favorite',basic_fields.FavoriteWidget).add('boolean_toggle',basic_fields.BooleanToggle).add('statinfo',basic_fields.StatInfo).add('percentpie',basic_fields.FieldPercentPie).add('float_time',basic_fields.FieldFloatTime).add('float_factor',basic_fields.FieldFloatFactor).add('float_toggle',basic_fields.FieldFloatToggle).add('progressbar',basic_fields.FieldProgressBar).add('toggle_button',basic_fields.FieldToggleBoolean).add('dashboard_graph',basic_fields.JournalDashboardGraph).add('ace',basic_fields.AceEditor).add('color',basic_fields.FieldColor).add('many2one_reference',basic_fields.FieldInteger).add('color_picker',basic_fields.FieldColorPicker);registry.add('selection',relational_fields.FieldSelection).add('radio',relational_fields.FieldRadio).add('selection_badge',relational_fields.FieldSelectionBadge).add('many2one',relational_fields.FieldMany2One).add('many2one_barcode',relational_fields.Many2oneBarcode).add('list.many2one',relational_fields.ListFieldMany2One).add('kanban.many2one',relational_fields.KanbanFieldMany2One).add('many2one_avatar',relational_fields.Many2OneAvatar).add('many2many',relational_fields.FieldMany2Many).add('many2many_binary',relational_fields.FieldMany2ManyBinaryMultiFiles).add('many2many_tags',relational_fields.FieldMany2ManyTags).add('many2many_tags_avatar',relational_fields.FieldMany2ManyTagsAvatar).add('form.many2many_tags',relational_fields.FormFieldMany2ManyTags).add('kanban.many2many_tags',relational_fields.KanbanFieldMany2ManyTags).add('many2many_checkboxes',relational_fields.FieldMany2ManyCheckBoxes).add('one2many',relational_fields.FieldOne2Many).add('statusbar',relational_fields.FieldStatus).add('reference',relational_fields.FieldReference).add('font',relational_fields.FieldSelectionFont);registry.add('timezone_mismatch',special_fields.FieldTimezoneMismatch).add('report_layout',special_fields.FieldReportLayout).add('iframe_wrapper',special_fields.IframeWrapper)});;

/* /web/static/src/js/fields/field_registry_owl.js defined in bundle 'web.assets_backend' */
odoo.define('web.field_registry_owl',function(require){"use strict";const Registry=require('web.Registry');return new Registry(null,(value)=>value.prototype instanceof owl.Component);});odoo.define('web._field_registry_owl',function(require){"use strict";const basicFields=require('web.basic_fields_owl');const registry=require('web.field_registry_owl');registry.add('badge',basicFields.FieldBadge).add('boolean',basicFields.FieldBoolean);});;

/* /web/static/src/js/views/basic/widget_registry.js defined in bundle 'web.assets_backend' */
odoo.define('web.widget_registry',function(require){"use strict";var Registry=require('web.Registry');return new Registry();});;

/* /web/static/src/js/fields/field_utils.js defined in bundle 'web.assets_backend' */
odoo.define('web.field_utils',function(require){"use strict";var core=require('web.core');var dom=require('web.dom');var session=require('web.session');var time=require('web.time');var utils=require('web.utils');var _t=core._t;function formatBinary(value,field,options){if(!value){return'';}
return utils.binaryToBinsize(value);}
function formatBoolean(value,field,options){if(options&&options.forceString){return value?_t('True'):_t('False');}
return dom.renderCheckbox({prop:{checked:value,disabled:true,},});}
function formatChar(value,field,options){value=typeof value==='string'?value:'';if(options&&options.isPassword){return _.str.repeat('*',value?value.length:0);}
if(options&&options.escape){value=_.escape(value);}
return value;}
function formatDate(value,field,options){if(value===false||isNaN(value)){return"";}
if(field&&field.type==='datetime'){if(!options||!('timezone'in options)||options.timezone){value=value.clone().add(session.getTZOffset(value),'minutes');}}
var date_format=time.getLangDateFormat();return value.format(date_format);}
function formatDateTime(value,field,options){if(value===false){return"";}
if(!options||!('timezone'in options)||options.timezone){value=value.clone().add(session.getTZOffset(value),'minutes');}
return value.format(time.getLangDatetimeFormat());}
function formatFloat(value,field,options){options=options||{};if(value===false){return"";}
if(options.humanReadable&&options.humanReadable(value)){return utils.human_number(value,options.decimals,options.minDigits,options.formatterCallback);}
var l10n=core._t.database.parameters;var precision;if(options.digits){precision=options.digits[1];}else if(field&&field.digits){precision=field.digits[1];}else{precision=2;}
var formatted=_.str.sprintf('%.'+precision+'f',value||0).split('.');formatted[0]=utils.insert_thousand_seps(formatted[0]);return formatted.join(l10n.decimal_point);}
function formatFloatFactor(value,field,options){var factor=options.factor||1;return formatFloat(value*factor,field,options);}
function formatFloatTime(value,field,options){options=options||{};var pattern=options.noLeadingZeroHour?'%1d:%02d':'%02d:%02d';if(value<0){value=Math.abs(value);pattern='-'+pattern;}
var hour=Math.floor(value);var min=Math.round((value%1)*60);if(min===60){min=0;hour=hour+1;}
return _.str.sprintf(pattern,hour,min);}
function formatInteger(value,field,options){options=options||{};if(options.isPassword){return _.str.repeat('*',String(value).length);}
if(!value&&value!==0){return"";}
if(options.humanReadable&&options.humanReadable(value)){return utils.human_number(value,options.decimals,options.minDigits,options.formatterCallback);}
return utils.insert_thousand_seps(_.str.sprintf('%d',value));}
function formatMany2one(value,field,options){if(!value){value='';}else if(_.isArray(value)){value=value[1];}else{while(value.data){value=value.data.display_name||'';}}
if(options&&options.escape){value=_.escape(value);}
return value;}
function formatX2Many(value){if(value.data.length===0){return _t('No records');}else if(value.data.length===1){return _t('1 record');}else{return value.data.length+_t(' records');}}
function formatMonetary(value,field,options){if(value===false){return"";}
options=Object.assign({forceString:false},options);var currency=options.currency;if(!currency){var currency_id=options.currency_id;if(!currency_id&&options.data){var currency_field=options.currency_field||field.currency_field||'currency_id';currency_id=options.data[currency_field]&&options.data[currency_field].res_id;}
currency=session.get_currency(currency_id);}
var digits=(currency&&currency.digits)||options.digits;if(options.field_digits===true){digits=field.digits||digits;}
var formatted_value=formatFloat(value,field,_.extend({},options,{digits:digits}));if(!currency||options.noSymbol){return formatted_value;}
const ws=options.forceString?' ':'&nbsp;';if(currency.position==="after"){return formatted_value+ws+currency.symbol;}else{return currency.symbol+ws+formatted_value;}}
function formatPercentage(value,field,options){options=options||{};let result=formatFloat(value*100,field,options)||'0';if(!options.humanReadable||!options.humanReadable(value*100)){result=parseFloat(result).toString().replace('.',_t.database.parameters.decimal_point);}
return result+(options.noSymbol?'':'%');}
function formatSelection(value,field,options){var val=_.find(field.selection,function(option){return option[0]===value;});if(!val){return'';}
value=val[1];if(options&&options.escape){value=_.escape(value);}
return value;}
function parseSmartDateInput(value){const units={d:'days',m:'months',w:'weeks',y:'years',};const re=new RegExp(`^([+-])(\\d+)([${Object.keys(units).join('')}]?)$`);const match=re.exec(value);if(match){let date=moment();const offset=parseInt(match[2],10);const unit=units[match[3]||'d'];if(match[1]==='+'){date.add(offset,unit);}else{date.subtract(offset,unit);}
return date;}
return false;}
function parseDate(value,field,options){if(!value){return false;}
var datePattern=time.getLangDateFormat();var datePatternWoZero=datePattern.replace('MM','M').replace('DD','D');var date;const smartDate=parseSmartDateInput(value);if(smartDate){date=smartDate;}else{if(options&&options.isUTC){value=value.padStart(10,"0");date=moment.utc(value);}else{date=moment.utc(value,[datePattern,datePatternWoZero,moment.ISO_8601]);}}
if(date.isValid()){if(date.year()===0){date.year(moment.utc().year());}
date.toJSON=function(){return this.clone().locale('en').format('YYYY-MM-DD');};return date;}
throw new Error(_.str.sprintf(core._t("'%s' is not a correct date"),value));}
function parseDateTime(value,field,options){if(!value){return false;}
var datePattern=time.getLangDateFormat(),timePattern=time.getLangTimeFormat();var datePatternWoZero=datePattern.replace('MM','M').replace('DD','D'),timePatternWoZero=timePattern.replace('HH','H').replace('mm','m').replace('ss','s');var pattern1=datePattern+' '+timePattern;var pattern2=datePatternWoZero+' '+timePatternWoZero;var datetime;const smartDate=parseSmartDateInput(value);if(smartDate){datetime=smartDate;}else{if(options&&options.isUTC){datetime=moment.utc(value.replace(' ','T')+'Z');}else{datetime=moment.utc(value,[pattern1,pattern2,moment.ISO_8601]);if(options&&options.timezone){datetime.add(-session.getTZOffset(datetime),'minutes');}}}
if(datetime.isValid()){if(datetime.year()===0){datetime.year(moment.utc().year());}
datetime.toJSON=function(){return this.clone().locale('en').format('YYYY-MM-DD HH:mm:ss');};return datetime;}
throw new Error(_.str.sprintf(core._t("'%s' is not a correct datetime"),value));}
function parseNumber(value){if(core._t.database.parameters.thousands_sep){var escapedSep=_.str.escapeRegExp(core._t.database.parameters.thousands_sep);value=value.replace(new RegExp(escapedSep,'g'),'');}
if(core._t.database.parameters.decimal_point){value=value.replace(core._t.database.parameters.decimal_point,'.');}
return Number(value);}
function parseFloat(value){var parsed=parseNumber(value);if(isNaN(parsed)){throw new Error(_.str.sprintf(core._t("'%s' is not a correct float"),value));}
return parsed;}
function parseMonetary(value,field,options){var values=value.split('&nbsp;');if(values.length===1){return parseFloat(value);}
else if(values.length!==2){throw new Error(_.str.sprintf(core._t("'%s' is not a correct monetary field"),value));}
options=options||{};var currency=options.currency;if(!currency){var currency_id=options.currency_id;if(!currency_id&&options.data){var currency_field=options.currency_field||field.currency_field||'currency_id';currency_id=options.data[currency_field]&&options.data[currency_field].res_id;}
currency=session.get_currency(currency_id);}
return parseFloat(values[0]===currency.symbol?values[1]:values[0]);}
function parseFloatFactor(value,field,options){var parsed=parseFloat(value);var factor=options.factor||1.0;return parsed/factor;}
function parseFloatTime(value){var factor=1;if(value[0]==='-'){value=value.slice(1);factor=-1;}
var float_time_pair=value.split(":");if(float_time_pair.length!==2)
return factor*parseFloat(value);var hours=parseInteger(float_time_pair[0]);var minutes=parseInteger(float_time_pair[1]);return factor*(hours+(minutes/60));}
function parsePercentage(value){return parseFloat(value)/100;}
function parseInteger(value){var parsed=parseNumber(value);if(isNaN(parsed)||parsed%1||parsed<-2147483648||parsed>2147483647){throw new Error(_.str.sprintf(core._t("'%s' is not a correct integer"),value));}
return parsed;}
function parseMany2one(value){if(_.isArray(value)){return{id:value[0],display_name:value[1],};}
if(_.isNumber(value)||_.isString(value)){return{id:parseInt(value,10),};}
return value;}
return{format:{binary:formatBinary,boolean:formatBoolean,char:formatChar,date:formatDate,datetime:formatDateTime,float:formatFloat,float_factor:formatFloatFactor,float_time:formatFloatTime,html:_.identity,integer:formatInteger,many2many:formatX2Many,many2one:formatMany2one,many2one_reference:formatInteger,monetary:formatMonetary,one2many:formatX2Many,percentage:formatPercentage,reference:formatMany2one,selection:formatSelection,text:formatChar,},parse:{binary:_.identity,boolean:_.identity,char:_.identity,date:parseDate,datetime:parseDateTime,float:parseFloat,float_factor:parseFloatFactor,float_time:parseFloatTime,html:_.identity,integer:parseInteger,many2many:_.identity,many2one:parseMany2one,many2one_reference:parseInteger,monetary:parseMonetary,one2many:_.identity,percentage:parsePercentage,reference:parseMany2one,selection:_.identity,text:_.identity,},};});;

/* /web/static/src/js/fields/relational_fields.js defined in bundle 'web.assets_backend' */
odoo.define('web.relational_fields',function(require){"use strict";var AbstractField=require('web.AbstractField');var basicFields=require('web.basic_fields');var concurrency=require('web.concurrency');const ControlPanelX2Many=require('web.ControlPanelX2Many');var core=require('web.core');var data=require('web.data');var Dialog=require('web.Dialog');var dialogs=require('web.view_dialogs');var dom=require('web.dom');const Domain=require('web.Domain');var KanbanRecord=require('web.KanbanRecord');var KanbanRenderer=require('web.KanbanRenderer');var ListRenderer=require('web.ListRenderer');const{ComponentWrapper,WidgetAdapterMixin}=require('web.OwlCompatibility');const{sprintf}=require("web.utils");const{escape}=owl.utils;var _t=core._t;var _lt=core._lt;var qweb=core.qweb;var M2ODialog=Dialog.extend({template:"M2ODialog",init:function(parent,name,value){this.name=name;this.value=value;this._super(parent,{title:_t(`New ${this.name}`),size:'medium',buttons:[{text:_t('Create'),classes:'btn-primary',close:true,click:function(){this.trigger_up('quick_create',{value:this.value});},},{text:_t('Create and edit'),classes:'btn-primary',close:true,click:function(){this.trigger_up('search_create_popup',{view_type:'form',value:this.value,});},},{text:_t('Cancel'),close:true,}],});},close:function(isSet){this.isSet=isSet;this._super.apply(this,arguments);},destroy:function(){if(!this.isSet){this.trigger_up('closed_unset');}
this._super.apply(this,arguments);},});var FieldMany2One=AbstractField.extend({description:_lt("Many2one"),supportedFieldTypes:['many2one'],template:'FieldMany2One',custom_events:_.extend({},AbstractField.prototype.custom_events,{'closed_unset':'_onDialogClosedUnset','field_changed':'_onFieldChanged','quick_create':'_onQuickCreate','search_create_popup':'_onSearchCreatePopup',}),events:_.extend({},AbstractField.prototype.events,{'click input':'_onInputClick','focusout input':'_onInputFocusout','keyup input':'_onInputKeyup','click .o_external_button':'_onExternalButtonClick','click':'_onClick',}),AUTOCOMPLETE_DELAY:200,SEARCH_MORE_LIMIT:320,init:function(parent,name,record,options){options=options||{};this._super.apply(this,arguments);this.limit=7;this.orderer=new concurrency.DropMisordered();const canCreate='can_create'in this.attrs?JSON.parse(this.attrs.can_create):true;this.can_create=canCreate&&!this.nodeOptions.no_create&&!options.noCreate;this.can_write='can_write'in this.attrs?JSON.parse(this.attrs.can_write):true;this.nodeOptions=_.defaults(this.nodeOptions,{quick_create:true,});this.noOpen='noOpen'in options?options.noOpen:this.nodeOptions.no_open;this.m2o_value=this._formatValue(this.value);this.recordParams={fieldName:this.name,viewType:this.viewType};this.isDirty=false;this.lastChangeEvent=undefined;this._autocompleteSources=[];this._addAutocompleteSource(this._search,{placeholder:_t('Loading...'),order:1});this.dp=new concurrency.DropPrevious();this.createDef=undefined;},start:function(){this.floating=false;this.$input=this.$('input');this.$external_button=this.$('.o_external_button');return this._super.apply(this,arguments);},destroy:function(){if(this._onScroll){window.removeEventListener('scroll',this._onScroll,true);}
this._super.apply(this,arguments);},commitChanges:function(){return Promise.resolve(this.createDef);},getFocusableElement:function(){return this.mode==='edit'&&this.$input||this.$el;},reinitialize:function(value){this.isDirty=false;this.floating=false;return this._setValue(value);},reset:function(record,event){this._reset(record,event);if(!event||event===this.lastChangeEvent){this.isDirty=false;}
if(this.isDirty){return Promise.resolve();}else{return this._render();}},_addAutocompleteSource:function(method,params){this._autocompleteSources.push({method:method,placeholder:(params.placeholder?_t(params.placeholder):_t('Loading...'))+'<i class="fa fa-spinner fa-spin pull-right"></i>',validation:params.validation,loading:false,order:params.order||999});this._autocompleteSources=_.sortBy(this._autocompleteSources,'order');},_bindAutoComplete:function(){var self=this;if($.browser.chrome&&this.$input.attr('placeholder')){this.$input.attr('placeholder',function(index,val){return val.split('').join('\ufeff');});}
this.$input.autocomplete({source:function(req,resp){_.each(self._autocompleteSources,function(source){source.results=[];const search=req.term.trim();if(!source.validation||source.validation.call(self,search)){source.loading=true;Promise.resolve(source.method.call(self,search)).then(function(results){source.results=results;source.loading=false;resp(self._concatenateAutocompleteResults());});}});},select:function(event,ui){event.stopImmediatePropagation();event.preventDefault();var item=ui.item;self.floating=false;if(item.id){self.reinitialize({id:item.id,display_name:item.name});}else if(item.action){item.action();}
return false;},focus:function(event){event.preventDefault();},open:function(event){self._onScroll=function(ev){if(ev.target!==self.$input.get(0)&&self.$input.hasClass('ui-autocomplete-input')){self.$input.autocomplete('close');}};window.addEventListener('scroll',self._onScroll,true);},close:function(event){if(event.which===$.ui.keyCode.ESCAPE){event.stopPropagation();}
if(self._onScroll){window.removeEventListener('scroll',self._onScroll,true);}},autoFocus:true,html:true,minLength:0,delay:this.AUTOCOMPLETE_DELAY,});this.$input.autocomplete("option","position",{my:"left top",at:"left bottom"});this.autocomplete_bound=true;},_concatenateAutocompleteResults:function(){var results=[];_.each(this._autocompleteSources,function(source){if(source.results&&source.results.length){results=results.concat(source.results);}else if(source.loading){results.push({label:source.placeholder});}});return results;},_createContext:function(name){var tmp={};var field=this.nodeOptions.create_name_field;if(field===undefined){field="name";}
if(field!==false&&name&&this.nodeOptions.quick_create!==false){tmp["default_"+field]=name;}
return tmp;},_getSearchBlacklist:function(){return[];},_getDisplayName:function(value){return value.split('\n')[0];},_getSearchCreatePopupOptions:function(view,ids,context,dynamicFilters){var self=this;return{res_model:this.field.relation,domain:this.record.getDomain({fieldName:this.name}),context:_.extend({},this.record.getContext(this.recordParams),context||{}),dynamicFilters:dynamicFilters||[],title:(view==='search'?_t("Search: "):_t("Create: "))+this.string,initial_ids:ids,initial_view:view,disable_multiple_selection:true,no_create:!self.can_create,kanban_view_ref:this.attrs.kanban_view_ref,on_selected:function(records){self.reinitialize(records[0]);},on_closed:function(){self.activate();},};},_manageSearchMore:function(values,search_val,domain,context){var self=this;values=values.slice(0,this.limit);values.push({label:_t("Search More..."),action:function(){var prom;if(search_val!==''){prom=self._rpc({model:self.field.relation,method:'name_search',kwargs:{name:search_val,args:domain,operator:"ilike",limit:self.SEARCH_MORE_LIMIT,context:context,},});}
Promise.resolve(prom).then(function(results){var dynamicFilters;if(results){var ids=_.map(results,function(x){return x[0];});dynamicFilters=[{description:_.str.sprintf(_t('Quick search: %s'),search_val),domain:[['id','in',ids]],}];}
self._searchCreatePopup("search",false,{},dynamicFilters);});},classname:'o_m2o_dropdown_option',});return values;},_onFieldChanged:function(event){this.lastChangeEvent=event;},_quickCreate:function(name){var self=this;var createDone;var def=new Promise(function(resolve,reject){self.createDef=new Promise(function(innerResolve){createDone=function(){innerResolve();resolve();self.createDef=undefined;};});var slowCreate=function(){var dialog=self._searchCreatePopup("form",false,self._createContext(name));dialog.on('closed',self,createDone);};if(self.nodeOptions.quick_create){const prom=self.reinitialize({id:false,display_name:name});prom.guardedCatch(reason=>{reason.event.preventDefault();slowCreate();});self.dp.add(prom).then(createDone).guardedCatch(reject);}else{slowCreate();}});return def;},_renderEdit:function(){var value=this.m2o_value;if(this.nodeOptions.always_reload){value=this._getDisplayName(value);}
this.$input.val(value);if(!this.autocomplete_bound){this._bindAutoComplete();}
this._updateExternalButton();},_renderReadonly:function(){var escapedValue=_.escape((this.m2o_value||"").trim());var value=escapedValue.split('\n').map(function(line){return'<span>'+line+'</span>';}).join('<br/>');this.$el.html(value);if(!this.noOpen&&this.value){this.$el.attr('href',_.str.sprintf('#id=%s&model=%s',this.value.res_id,this.field.relation));this.$el.addClass('o_form_uri');}},_reset:function(){this._super.apply(this,arguments);this.floating=false;this.m2o_value=this._formatValue(this.value);},_search:async function(searchValue=""){const value=searchValue.trim();const domain=this.record.getDomain(this.recordParams);const context=Object.assign(this.record.getContext(this.recordParams),this.additionalContext);const blackListedIds=this._getSearchBlacklist();if(blackListedIds.length){domain.push(['id','not in',blackListedIds]);}
const nameSearch=this._rpc({model:this.field.relation,method:"name_search",kwargs:{name:value,args:domain,operator:"ilike",limit:this.limit+1,context,}});const results=await this.orderer.add(nameSearch);let values=results.map((result)=>{const[id,fullName]=result;const displayName=this._getDisplayName(fullName).trim();result[1]=displayName;return{id,label:escape(displayName)||data.noDisplayContent,value:displayName,name:displayName,};});if(this.limit<values.length){values=this._manageSearchMore(values,value,domain,context);}
if(!this.can_create){return values;}
const canQuickCreate=!this.nodeOptions.no_quick_create;const canCreateEdit=!this.nodeOptions.no_create_edit;if(value.length){const nameExists=results.some((result)=>result[1]===value);if(canQuickCreate&&!nameExists){values.push({label:sprintf(_t(`Create "<strong>%s</strong>"`),escape(value)),action:()=>this._quickCreate(value),classname:'o_m2o_dropdown_option'});}
if(canCreateEdit){const valueContext=this._createContext(value);values.push({label:_t("Create and Edit..."),action:()=>{this.el.querySelector(':scope input').value="";return this._searchCreatePopup('form',false,valueContext);},classname:'o_m2o_dropdown_option',});}
if(!values.length){values.push({label:_t("No results to show..."),});}}else if(!this.value&&(canQuickCreate||canCreateEdit)){values.push({label:_t("Start typing..."),classname:'o_m2o_start_typing',});}
return values;},_searchCreatePopup:function(view,ids,context,dynamicFilters){var options=this._getSearchCreatePopupOptions(view,ids,context,dynamicFilters);return new dialogs.SelectCreateDialog(this,_.extend({},this.nodeOptions,options)).open();},_updateExternalButton:function(){var has_external_button=!this.noOpen&&!this.floating&&this.isSet();this.$external_button.toggle(has_external_button);this.$el.toggleClass('o_with_button',has_external_button);},_onClick:function(event){var self=this;if(this.mode==='readonly'&&!this.noOpen){event.preventDefault();event.stopPropagation();this._rpc({model:this.field.relation,method:'get_formview_action',args:[[this.value.res_id]],context:this.record.getContext(this.recordParams),}).then(function(action){self.trigger_up('do_action',{action:action});});}},_onDialogClosedUnset:function(){this.isDirty=false;this.floating=false;this._render();},_onExternalButtonClick:function(){if(!this.value){this.activate();return;}
var self=this;var context=this.record.getContext(this.recordParams);this._rpc({model:this.field.relation,method:'get_formview_id',args:[[this.value.res_id]],context:context,}).then(function(view_id){new dialogs.FormViewDialog(self,{res_model:self.field.relation,res_id:self.value.res_id,context:context,title:_t("Open: ")+self.string,view_id:view_id,readonly:!self.can_write,on_saved:function(record,changed){if(changed){const _setValue=self._setValue.bind(self,self.value.data,{forceChange:true,});self.trigger_up('reload',{db_id:self.value.id,onSuccess:_setValue,onFailure:_setValue,});}},}).open();});},_onInputClick:function(){if(this.$input.autocomplete("widget").is(":visible")){this.$input.autocomplete("close");}else if(this.floating){this.$input.autocomplete("search");}else{this.$input.autocomplete("search",'');}},_onInputFocusout:function(){if(this.can_create&&this.floating){new M2ODialog(this,this.string,this.$input.val()).open();}},_onInputKeyup:function(ev){if(ev.which===$.ui.keyCode.ENTER||ev.which===$.ui.keyCode.TAB){return;}
this.isDirty=true;if(this.$input.val()===""){this.reinitialize(false);}else if(this._getDisplayName(this.m2o_value)!==this.$input.val()){this.floating=true;this._updateExternalButton();}},_onKeydown:function(){this.floating=false;this._super.apply(this,arguments);},_onNavigationMove:function(ev){basicFields.InputField.prototype._onNavigationMove.apply(this,arguments);if(this.mode==='edit'&&$(this.$input.autocomplete('widget')).is(':visible')){ev.stopPropagation();}},_onQuickCreate:function(event){this._quickCreate(event.data.value);},_onSearchCreatePopup:function(event){var data=event.data;this._searchCreatePopup(data.view_type,false,this._createContext(data.value));},});var Many2oneBarcode=FieldMany2One.extend({});var ListFieldMany2One=FieldMany2One.extend({events:_.extend({},FieldMany2One.prototype.events,{'focusin input':'_onInputFocusin',}),init:function(){this._super.apply(this,arguments);this.mustSetValue=false;this.m2oDialogFocused=false;},activate:function(){if(this.mode==='readonly'){return false;}
return this._super.apply(this,arguments);},reinitialize:function(){this.mustSetValue=false;return this._super.apply(this,arguments);},_renderReadonly:function(){this.$el.text(this.m2o_value);},_searchCreatePopup:function(){this.m2oDialogFocused=true;return this._super.apply(this,arguments);},_onInputFocusin:function(){this.m2oDialogFocused=false;},_onInputFocusout:function(){if(this.can_create&&this.floating){var attachedEvents=['click','mousedown'];var stopNextClick=(function(ev){ev.stopPropagation();attachedEvents.forEach(function(eventName){window.removeEventListener(eventName,stopNextClick,true);});}).bind(this);attachedEvents.forEach(function(eventName){window.addEventListener(eventName,stopNextClick,true);});}
this._super.apply(this,arguments);if(!this.m2oDialogFocused&&this.$input.val()===""&&this.mustSetValue){this.reinitialize(false);}},_onInputKeyup:function(){if(this.$input.val()!==""){this._super.apply(this,arguments);}else{this.mustSetValue=true;}},});var KanbanFieldMany2One=AbstractField.extend({tagName:'span',init:function(){this._super.apply(this,arguments);this.m2o_value=this._formatValue(this.value);},_render:function(){this.$el.text(this.m2o_value);},});const Many2OneAvatar=FieldMany2One.extend({_template:'web.Many2OneAvatar',init(){this._super.apply(this,arguments);if(this.mode==='readonly'){this.template=null;this.tagName='div';this.className='o_field_many2one_avatar';this.noOpen=true;}},_renderReadonly(){this.$el.empty();if(this.value){this.$el.html(qweb.render(this._template,{url:`/web/image/${this.field.relation}/${this.value.res_id}/image_128`,value:this.m2o_value,}));}},});var FieldX2Many=AbstractField.extend(WidgetAdapterMixin,{tagName:'div',custom_events:_.extend({},AbstractField.prototype.custom_events,{add_record:'_onAddRecord',discard_changes:'_onDiscardChanges',edit_line:'_onEditLine',field_changed:'_onFieldChanged',open_record:'_onOpenRecord',kanban_record_delete:'_onRemoveRecord',list_record_remove:'_onRemoveRecord',resequence_records:'_onResequenceRecords',save_line:'_onSaveLine',toggle_column_order:'_onToggleColumnOrder',activate_next_widget:'_onActiveNextWidget',navigation_move:'_onNavigationMove',save_optional_fields:'_onSaveOrLoadOptionalFields',load_optional_fields:'_onSaveOrLoadOptionalFields',pager_changed:'_onPagerChanged',}),resetOnAnyFieldChange:true,useSubview:true,init:function(parent,name,record,options){this._super.apply(this,arguments);this.nodeOptions=_.defaults(this.nodeOptions,{create_text:_t('Add'),});this.operations=[];this.isReadonly=this.mode==='readonly';this.view=this.attrs.views[this.attrs.mode];this.isMany2Many=this.field.type==='many2many'||this.attrs.widget==='many2many';this.activeActions={};this.recordParams={fieldName:this.name,viewType:this.viewType};this.pagingState={currentMinimum:this.value.offset+1,limit:this.value.limit,size:this.value.count,validate:()=>{return this.view.arch.tag==='tree'?this.renderer.unselectRow():Promise.resolve();},withAccessKey:false,};var arch=this.view&&this.view.arch;if(arch){this.activeActions.create=arch.attrs.create?!!JSON.parse(arch.attrs.create):true;this.activeActions.delete=arch.attrs.delete?!!JSON.parse(arch.attrs.delete):true;this.editable=arch.attrs.editable;}
this._computeAvailableActions(record);if(this.attrs.columnInvisibleFields){this._processColumnInvisibleFields();}},start:async function(){const _super=this._super.bind(this);if(this.view){this._renderButtons();this._controlPanelWrapper=new ComponentWrapper(this,ControlPanelX2Many,{cp_content:{$buttons:this.$buttons},pager:this.pagingState,});await this._controlPanelWrapper.mount(this.el,{position:'first-child'});}
return _super(...arguments);},destroy:function(){WidgetAdapterMixin.destroy.call(this);this._super();},on_attach_callback:function(){this.isInDOM=true;WidgetAdapterMixin.on_attach_callback.call(this);if(this.renderer){this.renderer.on_attach_callback();}},on_detach_callback:function(){this.isInDOM=false;WidgetAdapterMixin.on_detach_callback.call(this);if(this.renderer){this.renderer.on_detach_callback();}},commitChanges:function(){var self=this;var inEditionRecordID=this.renderer&&this.renderer.viewType==="list"&&this.renderer.getEditableRecordID();if(inEditionRecordID){return this.renderer.commitChanges(inEditionRecordID).then(function(){return self._saveLine(inEditionRecordID);});}
return this._super.apply(this,arguments);},isSet:function(){return true;},reset:function(record,ev,fieldChanged){const oldCanCreate=this.canCreate;const oldCanDelete=this.canDelete;this._computeAvailableActions(record);const actionsChanged=this.canCreate!==oldCanCreate||this.canDelete!==oldCanDelete;if(!fieldChanged&&!actionsChanged){var newEval=this._evalColumnInvisibleFields();if(_.isEqual(this.currentColInvisibleFields,newEval)){return Promise.resolve();}}else if(ev&&ev.target===this&&ev.data.changes&&this.view.arch.tag==='tree'){var command=ev.data.changes[this.name];if(command&&command.operation==='UPDATE'&&command.data){var state=record.data[this.name];var fieldNames=state.getFieldNames({viewType:'list'});this._reset(record,ev);return this.renderer.confirmUpdate(state,command.id,fieldNames,ev.initialEvent);}}
return this._super.apply(this,arguments).then(()=>{if(this.view){this._renderButtons();this._updateControlPanel();}});},getFocusableElement:function(){return(this.mode==='edit'&&this.$input)||this.$el;},activate:function(options){if(!this.activeActions.create||this.isReadonly||!this.$el.is(":visible")){return false;}
if(this.view.type==='kanban'){this.$buttons.find(".o-kanban-button-new").focus();}
if(this.view.arch.tag==='tree'){if(options&&options.noAutomaticCreate){this.renderer.$('.o_field_x2many_list_row_add a:first').focus();}else{this.renderer.$('.o_field_x2many_list_row_add a:first').click();}}
return true;},_computeAvailableActions:function(record){const evalContext=record.evalContext;this.canCreate='create'in this.nodeOptions?new Domain(this.nodeOptions.create,evalContext).compute(evalContext):true;this.canDelete='delete'in this.nodeOptions?new Domain(this.nodeOptions.delete,evalContext).compute(evalContext):true;},_evalColumnInvisibleFields:function(){var self=this;return _.mapObject(this.columnInvisibleFields,function(domains){return self.record.evalModifiers({column_invisible:domains,}).column_invisible;});},_getButtonsRenderingContext(){return{btnClass:'btn-secondary',create_text:this.nodeOptions.create_text,};},_getRenderer:function(){if(this.view.arch.tag==='tree'){return ListRenderer;}
if(this.view.arch.tag==='kanban'){return KanbanRenderer;}},_hasCreateLine:function(){return!this.isReadonly&&((this.activeActions.create&&this.canCreate)||(this.isMany2Many));},_hasTrashIcon:function(){return!this.isReadonly&&((this.activeActions.delete&&this.canDelete)||(this.isMany2Many));},_render:function(){var self=this;if(!this.view){return this._super();}
if(this.renderer){this.currentColInvisibleFields=this._evalColumnInvisibleFields();return this.renderer.updateState(this.value,{addCreateLine:this._hasCreateLine(),addTrashIcon:this._hasTrashIcon(),columnInvisibleFields:this.currentColInvisibleFields,keepWidths:true,}).then(()=>{this._updateControlPanel({size:this.value.count});});}
var arch=this.view.arch;var viewType;var rendererParams={arch:arch,};if(arch.tag==='tree'){viewType='list';this.currentColInvisibleFields=this._evalColumnInvisibleFields();_.extend(rendererParams,{editable:this.mode==='edit'&&arch.attrs.editable,addCreateLine:this._hasCreateLine(),addTrashIcon:this._hasTrashIcon(),isMany2Many:this.isMany2Many,columnInvisibleFields:this.currentColInvisibleFields,});}
if(arch.tag==='kanban'){viewType='kanban';var record_options={editable:false,deletable:false,read_only_mode:this.isReadonly,};_.extend(rendererParams,{record_options:record_options,readOnlyMode:this.isReadonly,});}
_.extend(rendererParams,{viewType:viewType,});var Renderer=this._getRenderer();this.renderer=new Renderer(this,this.value,rendererParams);this.$el.addClass('o_field_x2many o_field_x2many_'+viewType);if(this.renderer){return this.renderer.appendTo(document.createDocumentFragment()).then(function(){dom.append(self.$el,self.renderer.$el,{in_DOM:self.isInDOM,callbacks:[{widget:self.renderer}],});});}else{return this._super();}},_renderButtons:function(){if(!this.isReadonly&&this.view.arch.tag==='kanban'){const renderingContext=this._getButtonsRenderingContext();this.$buttons=$(qweb.render('KanbanView.buttons',renderingContext));this.$buttons.on('click','button.o-kanban-button-new',this._onAddRecord.bind(this));}},_saveLine:function(recordID){var self=this;return new Promise(function(resolve,reject){var fieldNames=self.renderer.canBeSaved(recordID);if(fieldNames.length){self.trigger_up('discard_changes',{recordID:recordID,onSuccess:resolve,onFailure:reject,});}else{self.renderer.setRowMode(recordID,'readonly').then(resolve);}}).then(async function(){self._updateControlPanel({size:self.value.count});var newEval=self._evalColumnInvisibleFields();if(!_.isEqual(self.currentColInvisibleFields,newEval)){self.currentColInvisibleFields=newEval;self.renderer.updateState(self.value,{columnInvisibleFields:self.currentColInvisibleFields,});}});},_updateControlPanel:function(pagingState){if(this._controlPanelWrapper){const newProps={cp_content:{$buttons:this.$buttons},pager:Object.assign(this.pagingState,pagingState),};return this._controlPanelWrapper.update(newProps);}},_processColumnInvisibleFields:function(){var columnInvisibleFields={};_.each(this.attrs.columnInvisibleFields,function(domains,fieldName){if(_.isArray(domains)){columnInvisibleFields[fieldName]=_.map(domains,function(domain){if(_.isArray(domain)){return[domain[0].split('.')[1]].concat(domain.slice(1));}
return domain;});}});this.columnInvisibleFields=columnInvisibleFields;},_onAddRecord:function(){},_onRemoveRecord:function(ev){ev.stopPropagation();var operation=this.isMany2Many?'FORGET':'DELETE';this._setValue({operation:operation,ids:[ev.data.id],});},_onDiscardChanges:function(ev){if(ev.target!==this){ev.stopPropagation();this.trigger_up('discard_changes',_.extend({},ev.data,{fieldName:this.name}));}},_onEditLine:function(ev){ev.stopPropagation();this.trigger_up('edited_list',{id:this.value.id});this.renderer.setRowMode(ev.data.recordId,'edit').then(ev.data.onSuccess);},_onFieldChanged:function(ev){if(ev.target===this){ev.initialEvent=this.lastInitialEvent;return;}
ev.stopPropagation();var changes=ev.data.changes;this.lastInitialEvent=undefined;if(Object.keys(changes).length){this.lastInitialEvent=ev;this._setValue({operation:'UPDATE',id:ev.data.dataPointID,data:changes,}).then(function(){if(ev.data.onSuccess){ev.data.onSuccess();}}).guardedCatch(function(reason){if(ev.data.onFailure){ev.data.onFailure(reason);}});}},_onNavigationMove:function(ev){if(this.view.arch.tag==='tree'){var $curControl=this.renderer.$('.o_field_x2many_list_row_add a:focus');if($curControl.length){var $nextControl;if(ev.data.direction==='right'){$nextControl=$curControl.next('a');}else if(ev.data.direction==='left'){$nextControl=$curControl.prev('a');}
if($nextControl&&$nextControl.length){ev.stopPropagation();$nextControl.focus();return;}}}
this._super.apply(this,arguments);},_onOpenRecord:function(){},_onPagerChanged:function(ev){ev.stopPropagation();const{currentMinimum,limit}=ev.data;this._updateControlPanel({currentMinimum,limit});this.trigger_up('load',{id:this.value.id,limit,offset:currentMinimum-1,on_success:value=>{this.value=value;this.pagingState.limit=value.limit;this.pagingState.size=value.count;this._render();},});},_onSaveLine:function(ev){var self=this;ev.stopPropagation();this.renderer.commitChanges(ev.data.recordID).then(function(){self.trigger_up('mutexify',{action:function(){return self._saveLine(ev.data.recordID).then(ev.data.onSuccess).guardedCatch(ev.data.onFailure);},});});},_onSaveOrLoadOptionalFields:function(ev){ev.data.keyParts.relationalField=this.name;ev.data.keyParts.subViewId=this.view.view_id;ev.data.keyParts.subViewType=this.view.type;},_onResequenceRecords:function(ev){ev.stopPropagation();var self=this;if(this.view.arch.tag==='tree'){this.trigger_up('edited_list',{id:this.value.id});}
var handleField=ev.data.handleField;var offset=ev.data.offset;var recordIds=ev.data.recordIds.slice();var recordId=recordIds.pop();var proms=recordIds.map(function(recordId,index){var data={};data[handleField]=offset+index;return self._setValue({operation:'UPDATE',id:recordId,data:data,},{notifyChange:false,});});Promise.all(proms).then(function(){function always(){if(self.view.arch.tag==='tree'){self.trigger_up('toggle_column_order',{id:self.value.id,name:handleField,});}}
var data={};data[handleField]=offset+recordIds.length;self._setValue({operation:'UPDATE',id:recordId,data:data,}).then(always).guardedCatch(always);});},_onToggleColumnOrder:function(ev){ev.data.field=this.name;},_onActiveNextWidget:function(e){e.stopPropagation();this.renderer.unselectRow();this.trigger_up('navigation_move',{direction:e.data.direction||'next',});},});var One2ManyKanbanRecord=KanbanRecord.extend({_postProcessObjectButtons:function(){var self=this;if(!this.state.res_id){this.$('.oe_kanban_action[data-type=object]').each(function(index,button){var $button=$(button);if($button.attr('warn')){$button.on('click',function(e){e.stopPropagation();self.do_warn(false,_t('Please click on the "save" button first'));});}else{$button.attr('disabled','disabled');}});}},_render:function(){var self=this;return this._super.apply(this,arguments).then(function(){self._postProcessObjectButtons();});},});var One2ManyKanbanRenderer=KanbanRenderer.extend({config:_.extend({},KanbanRenderer.prototype.config,{KanbanRecord:One2ManyKanbanRecord,}),});var FieldOne2Many=FieldX2Many.extend({description:_lt("One2many"),className:'o_field_one2many',supportedFieldTypes:['one2many'],init:function(){this._super.apply(this,arguments);this.creatingRecord=false;},reset:function(record,ev){var self=this;return this._super.apply(this,arguments).then(()=>{if(ev&&ev.target===self&&ev.data.changes&&self.view.arch.tag==='tree'){if(ev.data.changes[self.name]&&ev.data.changes[self.name].operation==='CREATE'){var index=0;if(self.editable!=='top'){index=self.value.data.length-1;self._updateControlPanel({size:self.value.count-1});}
var newID=self.value.data[index].id;self.renderer.editRecord(newID);}}});},_getButtonsRenderingContext(){const renderingContext=this._super(...arguments);renderingContext.noCreate=!this.canCreate;return renderingContext;},_getRenderer:function(){if(this.view.arch.tag==='kanban'){return One2ManyKanbanRenderer;}
return this._super.apply(this,arguments);},_renderButtons:function(){if(this.activeActions.create){return this._super(...arguments);}},_openFormDialog:function(params){var context=this.record.getContext(_.extend({},this.recordParams,{additionalContext:params.context}));this.trigger_up('open_one2many_record',_.extend(params,{domain:this.record.getDomain(this.recordParams),context:context,field:this.field,fields_view:this.attrs.views&&this.attrs.views.form,parentID:this.value.id,viewInfo:this.view,deletable:this.activeActions.delete&&params.deletable&&this.canDelete,}));},_onAddRecord:function(ev){var self=this;var data=ev.data||{};ev.stopPropagation();if(this.editable||data.forceEditable){if(!this.activeActions.create){if(data.onFail){data.onFail();}}else if(!this.creatingRecord){this.creatingRecord=true;this.trigger_up('edited_list',{id:this.value.id});this._setValue({operation:'CREATE',position:this.editable||data.forceEditable,context:data.context,},{allowWarning:data.allowWarning}).then(function(){self.creatingRecord=false;}).then(function(){if(data.onSuccess){data.onSuccess();}}).guardedCatch(function(){self.creatingRecord=false;});}}else{this._openFormDialog({context:data.context&&data.context[0],on_saved:function(record){self._setValue({operation:'ADD',id:record.id});},});}},_onOpenRecord:function(ev){var self=this;ev.stopPropagation();var id=ev.data.id;var onSaved=function(record){if(_.some(self.value.data,{id:record.id})){self._setValue({operation:'UPDATE',id:record.id});}else{self._setValue({operation:'ADD',id:record.id});}};this._openFormDialog({id:id,on_saved:onSaved,on_remove:function(){self._setValue({operation:'DELETE',ids:[id]});},deletable:this.activeActions.delete&&this.view.arch.tag!=='tree'&&this.canDelete,readonly:this.mode==='readonly',});},});var FieldMany2Many=FieldX2Many.extend({description:_lt("Many2many"),className:'o_field_many2many',supportedFieldTypes:['many2many'],onAddRecordOpenDialog:function(){var self=this;var domain=this.record.getDomain({fieldName:this.name});new dialogs.SelectCreateDialog(this,{res_model:this.field.relation,domain:domain.concat(["!",["id","in",this.value.res_ids]]),context:this.record.getContext(this.recordParams),title:_t("Add: ")+this.string,no_create:this.nodeOptions.no_create||!this.activeActions.create||!this.canCreate,fields_view:this.attrs.views.form,kanban_view_ref:this.attrs.kanban_view_ref,on_selected:function(records){var resIDs=_.pluck(records,'id');var newIDs=_.difference(resIDs,self.value.res_ids);if(newIDs.length){var values=_.map(newIDs,function(id){return{id:id};});self._setValue({operation:'ADD_M2M',ids:values,});}}}).open();},_onAddRecord:function(ev){ev.stopPropagation();this.onAddRecordOpenDialog();},_onOpenRecord:function(ev){var self=this;_.extend(ev.data,{context:this.record.getContext(this.recordParams),domain:this.record.getDomain(this.recordParams),fields_view:this.attrs.views&&this.attrs.views.form,on_saved:function(){self._setValue({operation:'TRIGGER_ONCHANGE'},{forceChange:true}).then(function(){self.trigger_up('reload',{db_id:ev.data.id});});},on_remove:function(){self._setValue({operation:'FORGET',ids:[ev.data.id]});},readonly:this.mode==='readonly',deletable:this.activeActions.delete&&this.view.arch.tag!=='tree'&&this.canDelete,string:this.string,});},});var FieldMany2ManyBinaryMultiFiles=AbstractField.extend({template:"FieldBinaryFileUploader",template_files:"FieldBinaryFileUploader.files",supportedFieldTypes:['many2many'],fieldsToFetch:{name:{type:'char'},mimetype:{type:'char'},},events:{'click .o_attach':'_onAttach','click .o_attachment_delete':'_onDelete','change .o_input_file':'_onFileChanged',},init:function(){this._super.apply(this,arguments);if(this.field.type!=='many2many'||this.field.relation!=='ir.attachment'){var msg=_t("The type of the field '%s' must be a many2many field with a relation to 'ir.attachment' model.");throw _.str.sprintf(msg,this.field.string);}
this.uploadedFiles={};this.uploadingFiles=[];this.fileupload_id=_.uniqueId('oe_fileupload_temp');this.accepted_file_extensions=(this.nodeOptions&&this.nodeOptions.accepted_file_extensions)||this.accepted_file_extensions||'*';$(window).on(this.fileupload_id,this._onFileLoaded.bind(this));this.metadata={};},destroy:function(){this._super();$(window).off(this.fileupload_id);},_getFileUrl:function(attachment){return'/web/content/'+attachment.id+'?download=true';},_generatedMetadata:function(){var self=this;_.each(this.value.data,function(record){self.metadata[record.id]={allowUnlink:self.uploadedFiles[record.data.id]||false,url:self._getFileUrl(record.data),};});},_render:function(){this._generatedMetadata();this.$('.oe_placeholder_files, .o_attachments').replaceWith($(qweb.render(this.template_files,{widget:this,})));this.$('.oe_fileupload').show();this.$('.o_image[data-mimetype^="image"]').each(function(){var $img=$(this);if(/gif|jpe|jpg|png/.test($img.data('mimetype'))&&$img.data('src')){$img.css('background-image',"url('"+$img.data('src')+"')");}});},_onAttach:function(){this.$('.o_input_file').click();},_onDelete:function(ev){ev.preventDefault();ev.stopPropagation();var fileID=$(ev.currentTarget).data('id');var record=_.findWhere(this.value.data,{res_id:fileID});if(record){this._setValue({operation:'FORGET',ids:[record.id],});var metadata=this.metadata[record.id];if(!metadata||metadata.allowUnlink){this._rpc({model:'ir.attachment',method:'unlink',args:[record.res_id],});}}},_onFileChanged:function(ev){var self=this;ev.stopPropagation();var files=ev.target.files;var attachment_ids=this.value.res_ids;if(files.length===0)
return;_.each(files,function(file){var record=_.find(self.value.data,function(attachment){return attachment.data.name===file.name;});if(record){var metadata=self.metadata[record.id];if(!metadata||metadata.allowUnlink){attachment_ids=_.without(attachment_ids,record.res_id);self._rpc({model:'ir.attachment',method:'unlink',args:[record.res_id],});}}
self.uploadingFiles.push(file);});this._setValue({operation:'REPLACE_WITH',ids:attachment_ids,});this.$('form.o_form_binary_form').submit();this.$('.oe_fileupload').hide();ev.target.value="";},_onFileLoaded:function(){var self=this;var files=Array.prototype.slice.call(arguments,1);this.uploadingFiles=[];var attachment_ids=this.value.res_ids;_.each(files,function(file){if(file.error){self.do_warn(_t('Uploading Error'),file.error);}else{attachment_ids.push(file.id);self.uploadedFiles[file.id]=true;}});this._setValue({operation:'REPLACE_WITH',ids:attachment_ids,});},});var FieldMany2ManyTags=AbstractField.extend({description:_lt("Tags"),tag_template:"FieldMany2ManyTag",className:"o_field_many2manytags",supportedFieldTypes:['many2many'],custom_events:_.extend({},AbstractField.prototype.custom_events,{field_changed:'_onFieldChanged',}),events:_.extend({},AbstractField.prototype.events,{'click .o_delete':'_onDeleteTag',}),fieldsToFetch:{display_name:{type:'char'},},limit:1000,init:function(){this._super.apply(this,arguments);if(this.mode==='edit'){this.className+=' o_input';}
this.colorField=this.nodeOptions.color_field;this.hasDropdown=false;this._computeAvailableActions(this.record);this.resetOnAnyFieldChange=this.resetOnAnyFieldChange||'create'in this.nodeOptions;},activate:function(){return this.many2one?this.many2one.activate():false;},getFocusableElement:function(){return this.many2one?this.many2one.getFocusableElement():$();},isSet:function(){return!!this.value&&this.value.count;},reset:function(record,event){var self=this;this._computeAvailableActions(record);return this._super.apply(this,arguments).then(function(){if(event&&event.target===self){self.activate();}});},_addTag:function(data){if(!_.contains(this.value.res_ids,data.id)){return this._setValue({operation:'ADD_M2M',ids:data});}
return Promise.resolve();},_computeAvailableActions:function(record){const evalContext=record.evalContext;this.canCreate='create'in this.nodeOptions?new Domain(this.nodeOptions.create,evalContext).compute(evalContext):true;},_getRenderTagsContext:function(){var elements=this.value?_.pluck(this.value.data,'data'):[];return{colorField:this.colorField,elements:elements,hasDropdown:this.hasDropdown,readonly:this.mode==="readonly",};},_removeTag:function(id){var record=_.findWhere(this.value.data,{res_id:id});this._setValue({operation:'FORGET',ids:[record.id],});},_renderEdit:function(){var self=this;this._renderTags();if(this.many2one){this.many2one.destroy();}
this.many2one=new FieldMany2One(this,this.name,this.record,{mode:'edit',noOpen:true,noCreate:!this.canCreate,viewType:this.viewType,attrs:this.attrs,});this.many2one.value=false;this.many2one.m2o_value='';this.many2one._getSearchBlacklist=function(){return self.value.res_ids;};var _getSearchCreatePopupOptions=this.many2one._getSearchCreatePopupOptions;this.many2one._getSearchCreatePopupOptions=function(view,ids,context,dynamicFilters){var options=_getSearchCreatePopupOptions.apply(this,arguments);var domain=this.record.getDomain({fieldName:this.name});var m2mRecords=[];return _.extend({},options,{domain:domain.concat(["!",["id","in",self.value.res_ids]]),disable_multiple_selection:false,on_selected:function(records){m2mRecords.push(...records);},on_closed:function(){self.many2one.reinitialize(m2mRecords);},});};return this.many2one.appendTo(this.$el);},_renderReadonly:function(){this._renderTags();},_renderTags:function(){this.$el.html(qweb.render(this.tag_template,this._getRenderTagsContext()));},_onDeleteTag:function(event){event.preventDefault();event.stopPropagation();this._removeTag($(event.target).parent().data('id'));},_onFieldChanged:function(ev){if(ev.target!==this.many2one){return;}
ev.stopPropagation();var newValue=ev.data.changes[this.name];if(newValue){this._addTag(newValue).then(ev.data.onSuccess||function(){}).guardedCatch(ev.data.onFailure||function(){});this.many2one.reinitialize(false);}},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.BACKSPACE&&this.$('input').val()===""){var $badges=this.$('.badge');if($badges.length){this._removeTag($badges.last().data('id'));return;}}
this._super.apply(this,arguments);},_onQuickCreate:function(event){this._quickCreate(event.data.value);},});var FieldMany2ManyTagsAvatar=FieldMany2ManyTags.extend({tag_template:'FieldMany2ManyTagAvatar',className:'o_field_many2manytags avatar',_getRenderTagsContext:function(){var result=this._super.apply(this,arguments);result.avatarModel=this.nodeOptions.avatarModel||this.field.relation;result.avatarField=this.nodeOptions.avatarField||'image_128';return result;},});var FormFieldMany2ManyTags=FieldMany2ManyTags.extend({events:_.extend({},FieldMany2ManyTags.prototype.events,{'click .dropdown-toggle':'_onOpenColorPicker','mousedown .o_colorpicker a':'_onUpdateColor','mousedown .o_colorpicker .o_hide_in_kanban':'_onUpdateColor',}),init:function(){this._super.apply(this,arguments);this.hasDropdown=!!this.colorField;},_onOpenColorPicker:function(ev){ev.preventDefault();if(this.nodeOptions.no_edit_color){ev.stopPropagation();return;}
var tagID=$(ev.currentTarget).parent().data('id');var tagColor=$(ev.currentTarget).parent().data('color');var tag=_.findWhere(this.value.data,{res_id:tagID});if(tag&&this.colorField in tag.data){this.$color_picker=$(qweb.render('FieldMany2ManyTag.colorpicker',{'widget':this,'tag_id':tagID,}));$(ev.currentTarget).after(this.$color_picker);this.$color_picker.dropdown();this.$color_picker.attr("tabindex",1).focus();if(!tagColor){this.$('.custom-checkbox input').prop('checked',true);}}},_onUpdateColor:function(ev){ev.preventDefault();var $target=$(ev.currentTarget);var color=$target.data('color');var id=$target.data('id');var $tag=this.$(".badge[data-id='"+id+"']");var currentColor=$tag.data('color');var changes={};if($target.is('.o_hide_in_kanban')){var $checkbox=$('.o_hide_in_kanban .custom-checkbox input');$checkbox.prop('checked',!$checkbox.prop('checked'));this.prevColors=this.prevColors?this.prevColors:{};if($checkbox.is(':checked')){this.prevColors[id]=currentColor;}else{color=this.prevColors[id]?this.prevColors[id]:1;}}else if($target.is('[class^="o_tag_color"]')){if(color===currentColor){return;}}
changes[this.colorField]=color;this.trigger_up('field_changed',{dataPointID:_.findWhere(this.value.data,{res_id:id}).id,changes:changes,force_save:true,});},});var KanbanFieldMany2ManyTags=FieldMany2ManyTags.extend({events:AbstractField.prototype.events,_render:function(){var self=this;if(this.$el){this.$el.empty().addClass('o_field_many2manytags o_kanban_tags');}
_.each(this.value.data,function(m2m){if(self.colorField in m2m.data&&!m2m.data[self.colorField]){return;}
$('<span>',{class:'o_tag o_tag_color_'+(m2m.data[self.colorField]||0),text:m2m.data.display_name,}).prepend('<span>').appendTo(self.$el);});},});var FieldMany2ManyCheckBoxes=AbstractField.extend({description:_lt("Checkboxes"),template:'FieldMany2ManyCheckBoxes',events:_.extend({},AbstractField.prototype.events,{change:'_onChange',}),specialData:"_fetchSpecialRelation",supportedFieldTypes:['many2many'],init:function(){this._super.apply(this,arguments);this.m2mValues=this.record.specialData[this.name];},isSet:function(){return true;},_renderCheckboxes:function(){var self=this;this.m2mValues=this.record.specialData[this.name];this.$el.html(qweb.render(this.template,{widget:this}));_.each(this.value.res_ids,function(id){self.$('input[data-record-id="'+id+'"]').prop('checked',true);});},_renderEdit:function(){this._renderCheckboxes();},_renderReadonly:function(){this._renderCheckboxes();this.$("input").prop("disabled",true);},_onChange:function(){var ids=_.map(this.$('input:checked'),function(input){return $(input).data("record-id");});this._setValue({operation:'REPLACE_WITH',ids:ids,});},});var FieldStatus=AbstractField.extend({className:'o_statusbar_status',events:{'click button:not(.dropdown-toggle)':'_onClickStage',},specialData:"_fetchSpecialStatus",supportedFieldTypes:['selection','many2one'],init:function(){this._super.apply(this,arguments);this._setState();this._onClickStage=_.debounce(this._onClickStage,300,true);try{this.isClickable=!!JSON.parse(this.attrs.clickable);}catch(_){this.isClickable=!!this.nodeOptions.clickable;}},isEmpty:function(){return false;},_reset:function(){this._super.apply(this,arguments);this._setState();},_setState:function(){var self=this;if(this.field.type==='many2one'){this.status_information=_.map(this.record.specialData[this.name],function(info){return _.extend({selected:info.id===self.value.res_id,},info);});}else{var selection=this.field.selection;if(this.attrs.statusbar_visible){var restriction=this.attrs.statusbar_visible.split(",");selection=_.filter(selection,function(val){return _.contains(restriction,val[0])||val[0]===self.value;});}
this.status_information=_.map(selection,function(val){return{id:val[0],display_name:val[1],selected:val[0]===self.value,fold:false};});}},_render:function(){var selections=_.partition(this.status_information,function(info){return(info.selected||!info.fold);});this.$el.html(qweb.render("FieldStatus.content",{selection_unfolded:selections[0],selection_folded:selections[1],clickable:this.isClickable,}));},_onClickStage:function(e){this._setValue($(e.currentTarget).data("value"));},});var FieldSelection=AbstractField.extend({description:_lt("Selection"),template:'FieldSelection',specialData:"_fetchSpecialRelation",supportedFieldTypes:['selection'],events:_.extend({},AbstractField.prototype.events,{'change':'_onChange',}),init:function(){this._super.apply(this,arguments);this._setValues();},getFocusableElement:function(){return this.$el&&this.$el.is('select')?this.$el:$();},isSet:function(){return this.value!==false;},updateModifiersValue:function(){this._super.apply(this,arguments);if(!this.attrs.modifiersValue.invisible&&this.mode!=='readonly'){this._setValues();this._renderEdit();}},_renderEdit:function(){this.$el.empty();var required=this.attrs.modifiersValue&&this.attrs.modifiersValue.required;for(var i=0;i<this.values.length;i++){var disabled=required&&this.values[i][0]===false;this.$el.append($('<option/>',{value:JSON.stringify(this.values[i][0]),text:this.values[i][1],style:disabled?"display: none":"",}));}
this.$el.val(JSON.stringify(this._getRawValue()));},_renderReadonly:function(){this.$el.empty().text(this._formatValue(this.value));this.$el.attr('raw-value',this._getRawValue());},_getRawValue:function(){var raw_value=this.value;if(this.field.type==='many2one'&&raw_value){raw_value=raw_value.data.id;}
return raw_value;},_reset:function(){this._super.apply(this,arguments);this._setValues();},_setValues:function(){if(this.field.type==='many2one'){this.values=this.record.specialData[this.name];this.formatType='many2one';}else{this.values=_.reject(this.field.selection,function(v){return v[0]===false&&v[1]==='';});}
this.values=[[false,this.attrs.placeholder||'']].concat(this.values);},_onChange:function(){var res_id=JSON.parse(this.$el.val());if(this.field.type==='many2one'){var value=_.find(this.values,function(val){return val[0]===res_id;});this._setValue({id:res_id,display_name:value[1]});}else{this._setValue(res_id);}},});var FieldRadio=FieldSelection.extend({description:_lt("Radio"),template:null,className:'o_field_radio',tagName:'span',specialData:"_fetchSpecialMany2ones",supportedFieldTypes:['selection','many2one'],events:_.extend({},AbstractField.prototype.events,{'click input':'_onInputClick',}),init:function(){this._super.apply(this,arguments);if(this.mode==='edit'){this.tagName='div';this.className+=this.nodeOptions.horizontal?' o_horizontal':' o_vertical';}
this.unique_id=_.uniqueId("radio");this._setValues();},getFocusableElement:function(){return this.mode==='edit'&&this.$input||this.$el;},isSet:function(){return true;},getFocusableElement:function(){var checked=this.$("[checked='true']");return checked.length?checked:this.$("[data-index='0']");},setIDForLabel:function(id){this.$el.attr('id',id);},_renderEdit:function(){var self=this;var currentValue;if(this.field.type==='many2one'){currentValue=this.value&&this.value.data.id;}else{currentValue=this.value;}
this.$el.empty();this.$el.attr('role','radiogroup').attr('aria-label',this.string);_.each(this.values,function(value,index){self.$el.append(qweb.render('FieldRadio.button',{checked:value[0]===currentValue,id:self.unique_id+'_'+value[0],index:index,name:self.unique_id,value:value,}));});},_reset:function(){this._super.apply(this,arguments);this._setValues();},_setValues:function(){if(this.field.type==='selection'){this.values=this.field.selection||[];}else if(this.field.type==='many2one'){this.values=_.map(this.record.specialData[this.name],function(val){return[val.id,val.display_name];});}},_onInputClick:function(event){var index=$(event.target).data('index');var value=this.values[index];if(this.field.type==='many2one'){this._setValue({id:value[0],display_name:value[1]});}else{this._setValue(value[0]);}},});var FieldSelectionBadge=FieldSelection.extend({description:_lt("Badges"),template:null,className:'o_field_selection_badge',tagName:'span',specialData:"_fetchSpecialMany2ones",events:_.extend({},AbstractField.prototype.events,{'click span.o_selection_badge':'_onBadgeClicked',}),_renderEdit:function(){this.currentValue=this.value;if(this.field.type==='many2one'){this.currentValue=this.value&&this.value.data.id;}
this.$el.empty();this.$el.html(qweb.render('FieldSelectionBadge',{'values':this.values,'current_value':this.currentValue}));},_setValues:function(){if(this.field.type==='selection'){this.values=this.field.selection||[];}else if(this.field.type==='many2one'){this.values=_.map(this.record.specialData[this.name],function(val){return[val.id,val.display_name];});}},_onBadgeClicked:function(event){var index=$(event.target).data('index');var value=this.values[index];if(value[0]!==this.currentValue){if(this.field.type==='many2one'){this._setValue({id:value[0],display_name:value[1]});}else{this._setValue(value[0]);}}else{this._setValue(false);}},});var FieldSelectionFont=FieldSelection.extend({_renderEdit:function(){this._super.apply(this,arguments);this.$('option').each(function(i,option){if(!option.label){$(option).remove();}
$(option).css('font-family',option.value);});this.$el.css('font-family',this.value);},});var FieldReference=FieldMany2One.extend({specialData:"_fetchSpecialReference",supportedFieldTypes:['reference'],template:'FieldReference',events:_.extend({},FieldMany2One.prototype.events,{'change select':'_onSelectionChange',}),init:function(){this._super.apply(this,arguments);this.field=_.extend({},this.field);this._setState();},start:function(){this.$('select').val(this.field.relation);return this._super.apply(this,arguments);},getFocusableElement:function(){if(this.mode==='edit'&&!this.field.relation){return this.$('select');}
return this._super.apply(this,arguments);},_formatValue:function(){var value;if(this.field.type==='char'){value=this.record.specialData[this.name];}else{value=this.value;}
return value&&value.data&&value.data.display_name||'';},_renderEdit:function(){this._super.apply(this,arguments);if(this.$('select').val()){this.$('.o_input_dropdown').show();this.$el.addClass('o_row');}else{this.$('.o_input_dropdown').hide();}},_reset:function(){this._super.apply(this,arguments);var value=this.$('select').val();this._setState();this.$('select').val(this.value&&this.value.model||value);},_setRelation:function(model){this.field.relation=model;},_setState:function(){if(this.field.type==='char'){this.value=this.record.specialData[this.name];}
if(this.value){this._setRelation(this.value.model);}},_setValue:function(value,options){value=value||{};value.model=this.$('select').val();return this._super(value,options);},_onSelectionChange:function(){var value=this.$('select').val();this.reinitialize(false);this._setRelation(value);},});return{FieldMany2One:FieldMany2One,Many2oneBarcode:Many2oneBarcode,KanbanFieldMany2One:KanbanFieldMany2One,ListFieldMany2One:ListFieldMany2One,Many2OneAvatar:Many2OneAvatar,FieldX2Many:FieldX2Many,FieldOne2Many:FieldOne2Many,FieldMany2Many:FieldMany2Many,FieldMany2ManyBinaryMultiFiles:FieldMany2ManyBinaryMultiFiles,FieldMany2ManyCheckBoxes:FieldMany2ManyCheckBoxes,FieldMany2ManyTags:FieldMany2ManyTags,FieldMany2ManyTagsAvatar:FieldMany2ManyTagsAvatar,FormFieldMany2ManyTags:FormFieldMany2ManyTags,KanbanFieldMany2ManyTags:KanbanFieldMany2ManyTags,FieldRadio:FieldRadio,FieldSelectionBadge:FieldSelectionBadge,FieldSelection:FieldSelection,FieldStatus:FieldStatus,FieldSelectionFont:FieldSelectionFont,FieldReference:FieldReference,};});;

/* /web/static/src/js/fields/special_fields.js defined in bundle 'web.assets_backend' */
odoo.define('web.special_fields',function(require){"use strict";var core=require('web.core');var field_utils=require('web.field_utils');var relational_fields=require('web.relational_fields');var AbstractField=require('web.AbstractField');var FieldSelection=relational_fields.FieldSelection;var _t=core._t;var _lt=core._lt;var FieldTimezoneMismatch=FieldSelection.extend({start:function(){var interval=navigator.platform.toUpperCase().indexOf('MAC')>=0?60000:1000;this._datetime=setInterval(this._renderDateTimeTimezone.bind(this),interval);return this._super.apply(this,arguments);},destroy:function(){clearInterval(this._datetime);return this._super();},_render:function(){this._super.apply(this,arguments);this._renderTimezoneMismatch();},_renderDateTimeTimezone:function(){if(!this.mismatch||!this.$option.html()){return;}
var offset=this.recordData.tz_offset.match(/([+-])([0-9]{2})([0-9]{2})/);offset=(offset[1]==='-'?-1:1)*(parseInt(offset[2])*60+parseInt(offset[3]));var datetime=field_utils.format.datetime(moment.utc().add(offset,'minutes'),this.field,{timezone:false});var content=this.$option.html().split(' ')[0];content+='    ('+datetime+')';this.$option.html(content);},_renderTimezoneMismatch:function(){this.$el.last().filter('.o_tz_warning').remove();this.$el=this.$el.first();var value=this.$el.val();var $span=$('<span class="fa fa-exclamation-triangle o_tz_warning"/>');if(this.$option&&this.$option.html()){this.$option.html(this.$option.html().split(' ')[0]);}
var userOffset=this.recordData.tz_offset;this.mismatch=false;if(userOffset&&value!==""&&value!=="false"){var offset=-(new Date().getTimezoneOffset());var browserOffset=(offset<0)?"-":"+";browserOffset+=_.str.sprintf("%02d",Math.abs(offset/60));browserOffset+=_.str.sprintf("%02d",Math.abs(offset%60));this.mismatch=(browserOffset!==userOffset);}
if(this.mismatch){$span.insertAfter(this.$el);$span.attr('title',_t("Timezone Mismatch : This timezone is different from that of your browser.\nPlease, set the same timezone as your browser's to avoid time discrepancies in your system."));this.$el=this.$el.add($span);this.$option=this.$('option').filter(function(){return $(this).attr('value')===value;});this._renderDateTimeTimezone();}else if(value=="false"){$span.insertAfter(this.$el);$span.attr('title',_t("Set a timezone on your user"));this.$el=this.$el.add($span);}},_renderEdit:function(){var $otherEl=this.$el.not('select');this.$el=this.$el.first();this._super.apply(this,arguments);$otherEl.insertAfter(this.$el);this.$el=this.$el.add($otherEl);},});var FieldReportLayout=relational_fields.FieldMany2One.extend({events:_.extend({},relational_fields.FieldMany2One.prototype.events,{'click img':'_onImgClicked',}),willStart:function(){var self=this;this.previews={};return this._super().then(function(){return self._rpc({model:'report.layout',method:"search_read"}).then(function(values){self.previews=values;});});},_render:function(){var self=this;this.$el.empty();var value=_.isObject(this.value)?this.value.data.id:this.value;_.each(this.previews,function(val){var $container=$('<div>').addClass('col-3 text-center');var $img=$('<img>').addClass('img img-fluid img-thumbnail ml16').toggleClass('btn-info',val.view_id[0]===value).attr('src',val.image).data('key',val.view_id[0]);$container.append($img);if(val.pdf){var $previewLink=$('<a>').text('Example').attr('href',val.pdf).attr('target','_blank');$container.append($previewLink);}
self.$el.append($container);});},_onImgClicked:function(event){this._setValue($(event.currentTarget).data('key'));},});const IframeWrapper=AbstractField.extend({description:_lt("Wrap raw html within an iframe"),supportedFieldTypes:['text','html'],template:"web.IframeWrapper",_render(){const spinner=this.el.querySelector('.o_iframe_wrapper_spinner');const iframe=this.el.querySelector('.o_preview_iframe');iframe.style.display='none';spinner.style.display='block';let resolver;$(iframe).data('ready',new Promise((resolve)=>{resolver=resolve;}));const onloadReplacement=setInterval(()=>{const iframeDoc=iframe.contentDocument;if(iframeDoc&&(iframeDoc.readyState==='complete'||iframeDoc.readyState==='interactive')){iframeDoc.open();iframeDoc.write(this.value);iframeDoc.close();iframe.style.display='block';spinner.style.display='none';resolver();clearInterval(onloadReplacement);}},100);}});return{FieldTimezoneMismatch:FieldTimezoneMismatch,FieldReportLayout:FieldReportLayout,IframeWrapper,};});;

/* /web/static/src/js/fields/upgrade_fields.js defined in bundle 'web.assets_backend' */
odoo.define('web.upgrade_widgets',function(require){"use strict";var AbstractField=require('web.AbstractField');var basic_fields=require('web.basic_fields');var core=require('web.core');var Dialog=require('web.Dialog');var field_registry=require('web.field_registry');var framework=require('web.framework');var relational_fields=require('web.relational_fields');var _t=core._t;var QWeb=core.qweb;var FieldBoolean=basic_fields.FieldBoolean;var FieldRadio=relational_fields.FieldRadio;var AbstractFieldUpgrade={_confirmUpgrade:function(){return this._rpc({model:'res.users',method:'search_count',args:[[["share","=",false]]],}).then(function(data){framework.redirect("https://www.odoo.com/odoo-enterprise/upgrade?num_users="+data);});},_insertEnterpriseLabel:function($enterpriseLabel){},_openDialog:function(){var message=$(QWeb.render('EnterpriseUpgrade'));var buttons=[{text:_t("Upgrade now"),classes:'btn-primary',close:true,click:this._confirmUpgrade.bind(this),},{text:_t("Cancel"),close:true,},];return new Dialog(this,{size:'medium',buttons:buttons,$content:$('<div>',{html:message,}),title:_t("Odoo Enterprise"),}).open();},_render:function(){this._super.apply(this,arguments);this._insertEnterpriseLabel($("<span>",{text:"Enterprise",'class':"badge badge-primary oe_inline o_enterprise_label"}));},_resetValue:function(){},_onInputClicked:function(event){if($(event.currentTarget).prop("checked")){this._openDialog().on('closed',this,this._resetValue.bind(this));}},};var UpgradeBoolean=FieldBoolean.extend(AbstractFieldUpgrade,{supportedFieldTypes:[],events:_.extend({},AbstractField.prototype.events,{'click input':'_onInputClicked',}),renderWithLabel:function($label){this.$label=$label;this._render();},_insertEnterpriseLabel:function($enterpriseLabel){var $el=this.$label||this.$el;$el.append('&nbsp;').append($enterpriseLabel);},_resetValue:function(){this.$input.prop("checked",false).change();},});var UpgradeRadio=FieldRadio.extend(AbstractFieldUpgrade,{supportedFieldTypes:[],events:_.extend({},FieldRadio.prototype.events,{'click input:last':'_onInputClicked',}),isSet:function(){return true;},_insertEnterpriseLabel:function($enterpriseLabel){this.$('label').last().append('&nbsp;').append($enterpriseLabel);},_resetValue:function(){this.$('input').first().prop("checked",true).click();},});field_registry.add('upgrade_boolean',UpgradeBoolean).add('upgrade_radio',UpgradeRadio);});;

/* /web/static/src/js/fields/field_wrapper.js defined in bundle 'web.assets_backend' */
odoo.define('web.FieldWrapper',function(require){"use strict";const{ComponentWrapper}=require('web.OwlCompatibility');const field_utils=require('web.field_utils');class FieldWrapper extends ComponentWrapper{constructor(){super(...arguments);this._data={};const options=this.props.options||{};const record=this.props.record;this._data.name=this.props.fieldName;this._data.record=record;this._data.field=record.fields[this._data.name];this._data.viewType=options.viewType||'default';const fieldsInfo=record.fieldsInfo[this._data.viewType];this._data.attrs=options.attrs||(fieldsInfo&&fieldsInfo[this._data.name])||{};this._data.additionalContext=options.additionalContext||{};this._data.value=record.data[this._data.name];this._data.recordData=record.data;this._data.string=this._data.attrs.string||this._data.field.string||this._data.name;this._data.nodeOptions=this._data.attrs.options||{};this._data.dataPointID=record.id;this._data.res_id=record.res_id;this._data.model=record.model;this._data.mode=options.mode||"readonly";this._data.formatType=this._data.attrs.widget in field_utils.format?this._data.attrs.widget:this._data.field.type;this._data.formatOptions={};this._data.parseOptions={};if(this._data.attrs.decorations){this._data.resetOnAnyFieldChange=true;}
for(let key in this._data){Object.defineProperty(this,key,{get:()=>{if(this.el){if(key==='dataPointID'){return this.componentRef.comp.dataPointId;}else if(key==='res_id'){return this.componentRef.comp.resId;}}
return(this.el?this.componentRef.comp:this._data)[key];},});}}
mounted(){super.mounted(...arguments);this.componentRef.comp.__node=this.__node;}
get $el(){return $(this.el);}
get fieldDependencies(){return this.Component.fieldDependencies;}
get specialData(){return this.Component.specialData;}
get supportedFieldTypes(){return this.Component.supportedFieldTypes;}
get description(){return this.Component.description;}
get noLabel(){return this.Component.noLabel;}
activate(){return this.componentRef.comp.activate(...arguments);}
commitChanges(){return this.componentRef.comp.commitChanges(...arguments);}
getFocusableElement(){return $(this.componentRef.comp.focusableElement);}
isEmpty(){return this.componentRef.comp.isEmpty;}
isFocusable(){return this.componentRef.comp.isFocusable;}
isSet(){if(this.componentRef.comp){return this.componentRef.comp.isSet;}
const c=new this.Component(null,this.props);const isSet=c.isSet;c.destroy();return isSet;}
isValid(){return this.componentRef.comp.isValid;}
removeInvalidClass(){return this.componentRef.comp.removeInvalidClass(...arguments);}
reset(record,event){return this.update({record,event});}
setIDForLabel(){return this.componentRef.comp.setIdForLabel(...arguments);}
setInvalidClass(){return this.componentRef.comp.setInvalidClass(...arguments);}
updateModifiersValue(modifiers){if(this.props.options.attrs){this.props.options.attrs.modifiersValue=modifiers||{};}else{const viewType=this.props.options.viewType||'default';const fieldsInfo=this.props.record.fieldsInfo[viewType];fieldsInfo[this.props.fieldName].modifiersValue=modifiers||{};}
this.componentRef.comp.props=this.props;}}
return FieldWrapper;});;

/* /web/static/src/js/fields/abstract_field_owl.js defined in bundle 'web.assets_backend' */
odoo.define('web.AbstractFieldOwl',function(require){"use strict";const field_utils=require('web.field_utils');const{useListener}=require('web.custom_hooks');const{onMounted,onPatched}=owl.hooks;class AbstractField extends owl.Component{constructor(){super(...arguments);this._isValid=true;this._lastSetValue=undefined;useListener('keydown',this._onKeydown);useListener('navigation-move',this._onNavigationMove);onMounted(()=>this._applyDecorations());onPatched(()=>this._applyDecorations());}
__patch(){const res=super.__patch(...arguments);this.el.setAttribute('name',this.name);this.el.classList.add('o_field_widget');return res;}
async willUpdateProps(nextProps){this._lastSetValue=undefined;return super.willUpdateProps(nextProps);}
get additionalContext(){return this.options.additionalContext||{};}
get attrs(){const fieldsInfo=this.record.fieldsInfo[this.viewType];return this.options.attrs||(fieldsInfo&&fieldsInfo[this.name])||{};}
get dataPointId(){return this.record.id;}
get field(){return this.record.fields[this.name];}
get focusableElement(){return null;}
get formatOptions(){return{};}
get formatType(){return this.attrs.widget in field_utils.format?this.attrs.widget:this.field.type;}
get isEmpty(){return!this.isSet;}
get isFocusable(){const focusable=this.focusableElement;return focusable&&!!(focusable.offsetWidth||focusable.offsetHeight||focusable.getClientRects().length);}
get isSet(){return!!this.value;}
get isValid(){return this._isValid;}
get mode(){return this.options.mode||"readonly";}
get model(){return this.record.model;}
get name(){return this.props.fieldName;}
get nodeOptions(){return this.attrs.options||{};}
get options(){return this.props.options||{};}
get parseOptions(){return{};}
get record(){return this.props.record;}
get recordData(){return this.record.data;}
get resetOnAnyFieldChange(){return!!this.attrs.decorations;}
get resId(){return this.record.res_id;}
get string(){return this.attrs.string||this.field.string||this.name;}
get value(){return this.record.data[this.name];}
get viewType(){return this.options.viewType||'default';}
activate(options){if(this.isFocusable){const focusable=this.focusableElement;focusable.focus();if(focusable.matches('input[type="text"], textarea')){focusable.selectionStart=focusable.selectionEnd=focusable.value.length;if(options&&!options.noselect){focusable.select();}}
return true;}
return false;}
commitChanges(){}
removeInvalidClass(){this.el.classList.remove('o_field_invalid');this.el.removeAttribute('aria-invalid');}
setIdForLabel(id){if(this.focusableElement){this.focusableElement.setAttribute('id',id);}}
setInvalidClass(){this.el.classList.add('o_field_invalid');this.el.setAttribute('aria-invalid','true');}
_applyDecorations(){for(const dec of this.attrs.decorations||[]){const isToggled=py.PY_isTrue(py.evaluate(dec.expression,this.record.evalContext));const className=this._getClassFromDecoration(dec.name);this.el.classList.toggle(className,isToggled);}}
_formatValue(value){const options=Object.assign({},this.nodeOptions,{data:this.recordData},this.formatOptions);return field_utils.format[this.formatType](value,this.field,options);}
_getClassFromDecoration(decoration){return`text-${decoration.split('-')[1]}`;}
_isLastSetValue(value){return this._lastSetValue===value||(this.value===false&&value==='');}
_isSameValue(value){return this.value===value;}
_parseValue(value){return field_utils.parse[this.formatType](value,this.field,this.parseOptions);}
_setValue(value,options){if(this._isLastSetValue(value)){return Promise.resolve();}
this._lastSetValue=value;try{value=this._parseValue(value);this._isValid=true;}catch(e){this._isValid=false;this.trigger('set-dirty',{dataPointID:this.dataPointId});return Promise.reject({message:"Value set is not valid"});}
if(!(options&&options.forceChange)&&this._isSameValue(value)){return Promise.resolve();}
return new Promise((resolve,reject)=>{const changes={};changes[this.name]=value;this.trigger('field-changed',{dataPointID:this.dataPointId,changes:changes,viewType:this.viewType,doNotSetDirty:options&&options.doNotSetDirty,notifyChange:!options||options.notifyChange!==false,allowWarning:options&&options.allowWarning,onSuccess:resolve,onFailure:reject,});});}
_onKeydown(ev){switch(ev.which){case $.ui.keyCode.TAB:this.trigger('navigation-move',{direction:ev.shiftKey?'previous':'next',originalEvent:ev,});break;case $.ui.keyCode.ENTER:ev.preventDefault();ev.stopPropagation();this.trigger('navigation-move',{direction:'next_line'});break;case $.ui.keyCode.ESCAPE:this.trigger('navigation-move',{direction:'cancel',originalEvent:ev});break;case $.ui.keyCode.UP:ev.stopPropagation();this.trigger('navigation-move',{direction:'up'});break;case $.ui.keyCode.RIGHT:ev.stopPropagation();this.trigger('navigation-move',{direction:'right'});break;case $.ui.keyCode.DOWN:ev.stopPropagation();this.trigger('navigation-move',{direction:'down'});break;case $.ui.keyCode.LEFT:ev.stopPropagation();this.trigger('navigation-move',{direction:'left'});break;}}
_onNavigationMove(ev){ev.detail.target=this;}}
AbstractField.fieldDependencies={};AbstractField.specialData=false;AbstractField.supportedFieldTypes=[];AbstractField.description="";AbstractField.noLabel=false;AbstractField.label="";return AbstractField;});;

/* /web/static/src/js/fields/basic_fields_owl.js defined in bundle 'web.assets_backend' */
odoo.define('web.basic_fields_owl',function(require){"use strict";const AbstractField=require('web.AbstractFieldOwl');const CustomCheckbox=require('web.CustomCheckbox');const{_lt}=require('web.translation');class FieldBadge extends AbstractField{_getClassFromDecoration(decoration){return`bg-${decoration.split('-')[1]}-light`;}}
FieldBadge.description=_lt("Badge");FieldBadge.supportedFieldTypes=['selection','many2one','char'];FieldBadge.template='web.FieldBadge';class FieldBoolean extends AbstractField{patched(){super.patched();if(this.props.event&&this.props.event.target===this){this.activate();}}
get focusableElement(){return this.mode==='readonly'?null:this.el.querySelector('input');}
get isSet(){return true;}
activate(options){const activated=super.activate(options);if(activated&&options&&options.event&&options.event.target.closest('.custom-control.custom-checkbox')){this._setValue(!this.value);}
return activated;}
setIdForLabel(id){super.setIdForLabel(id);this.el.querySelector('label').setAttribute('for',id);}
_onChange(ev){this._setValue(ev.target.checked);}
_onKeydown(ev){switch(ev.which){case $.ui.keyCode.ENTER:ev.preventDefault();this._setValue(!this.value);return;case $.ui.keyCode.UP:case $.ui.keyCode.RIGHT:case $.ui.keyCode.DOWN:case $.ui.keyCode.LEFT:ev.preventDefault();}
super._onKeydown(ev);}}
FieldBoolean.components={CustomCheckbox};FieldBoolean.description=_lt("Checkbox");FieldBoolean.supportedFieldTypes=['boolean'];FieldBoolean.template='web.FieldBoolean';return{FieldBadge,FieldBoolean,};});;

/* /web/static/src/js/views/abstract_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.AbstractView',function(require){"use strict";const ActionModel=require("web/static/src/js/views/action_model.js");var AbstractModel=require('web.AbstractModel');var AbstractRenderer=require('web.AbstractRenderer');var AbstractController=require('web.AbstractController');const ControlPanel=require('web.ControlPanel');const SearchPanel=require("web/static/src/js/views/search_panel.js");var mvc=require('web.mvc');var viewUtils=require('web.viewUtils');const{Component}=owl;var Factory=mvc.Factory;var AbstractView=Factory.extend({display_name:'',mobile_friendly:false,icon:'fa-question',multi_record:true,viewType:undefined,withSearchBar:true,searchMenuTypes:['filter','groupBy','favorite'],withControlPanel:true,withSearchPanel:true,config:_.extend({},Factory.prototype.config,{Model:AbstractModel,Renderer:AbstractRenderer,Controller:AbstractController,ControlPanel,SearchPanel,}),init:function(viewInfo,params){this._super.apply(this,arguments);var action=params.action||{};params=_.defaults(params,this._extractParamsFromAction(action));if(typeof viewInfo.arch==='string'){this.fieldsView=this._processFieldsView(viewInfo);}else{this.fieldsView=viewInfo;}
this.arch=this.fieldsView.arch;this.fields=this.fieldsView.viewFields;this.userContext=params.userContext||{};var isEmbedded=params.isEmbedded||false;var help=params.noContentHelp||"";var htmlHelp=document.createElement("div");htmlHelp.innerHTML=help;this.rendererParams={arch:this.arch,isEmbedded:isEmbedded,noContentHelp:htmlHelp.innerText.trim()?help:"",};this.controllerParams={actionViews:params.actionViews,activeActions:{edit:this.arch.attrs.edit?!!JSON.parse(this.arch.attrs.edit):true,create:this.arch.attrs.create?!!JSON.parse(this.arch.attrs.create):true,delete:this.arch.attrs.delete?!!JSON.parse(this.arch.attrs.delete):true,duplicate:this.arch.attrs.duplicate?!!JSON.parse(this.arch.attrs.duplicate):true,},bannerRoute:this.arch.attrs.banner_route,controllerID:params.controllerID,displayName:params.displayName,isEmbedded:isEmbedded,modelName:params.modelName,viewType:this.viewType,};var controllerState=params.controllerState||{};var currentId=controllerState.currentId||params.currentId;this.loadParams={context:params.context,count:params.count||((this.controllerParams.ids!==undefined)&&this.controllerParams.ids.length)||0,domain:params.domain,modelName:params.modelName,res_id:currentId,res_ids:controllerState.resIds||params.ids||(currentId?[currentId]:undefined),};const useSampleModel='useSampleModel'in params?params.useSampleModel:!!(this.arch.attrs.sample&&JSON.parse(this.arch.attrs.sample));this.modelParams={fields:this.fields,modelName:params.modelName,useSampleModel,};if(useSampleModel){this.modelParams.SampleModel=this.config.Model;}
var defaultOrder=this.arch.attrs.default_order;if(defaultOrder){this.loadParams.orderedBy=_.map(defaultOrder.split(','),function(order){order=order.trim().split(' ');return{name:order[0],asc:order[1]!=='desc'};});}
if(params.searchQuery){this._updateMVCParams(params.searchQuery);}
this.withControlPanel=this.withControlPanel&&params.withControlPanel;this.withSearchPanel=this.withSearchPanel&&this.multi_record&&params.withSearchPanel&&!('search_panel'in params.context&&!params.search_panel);const searchModelParams=Object.assign({},params,{action});if(this.withControlPanel||this.withSearchPanel){const{arch,fields,favoriteFilters}=params.controlPanelFieldsView||{};const archInfo=ActionModel.extractArchInfo({search:arch},this.viewType);const controlPanelInfo=archInfo[this.config.ControlPanel.modelExtension];const searchPanelInfo=archInfo[this.config.SearchPanel.modelExtension];this.withSearchPanel=this.withSearchPanel&&Boolean(searchPanelInfo);Object.assign(searchModelParams,{fields,favoriteFilters,controlPanelInfo,searchPanelInfo,});}
const searchModel=this._createSearchModel(searchModelParams);this.controllerParams.searchModel=searchModel;if(this.controllerParams.controlPanel){this.controllerParams.controlPanel.props.searchModel=searchModel;}
if(this.controllerParams.searchPanel){this.controllerParams.searchPanel.props.searchModel=searchModel;}},_createSearchModel:function(params,extraExtensions){const{fields,favoriteFilters,controlPanelInfo,searchPanelInfo}=params;const extensions=Object.assign({},extraExtensions);const importedState=params.controllerState||{};if(this.withControlPanel){const ControlPanelComponent=this.config.ControlPanel;extensions[ControlPanelComponent.modelExtension]={actionId:params.action.id,activateDefaultFavorite:params.activateDefaultFavorite,archNodes:controlPanelInfo.children,dynamicFilters:params.dynamicFilters,favoriteFilters,withSearchBar:params.withSearchBar,};this.controllerParams.withControlPanel=true;const controlPanelProps={action:params.action,breadcrumbs:params.breadcrumbs,fields,searchMenuTypes:params.searchMenuTypes,view:this.fieldsView,views:params.action.views&&params.action.views.filter(v=>v.multiRecord===this.multi_record),withBreadcrumbs:params.withBreadcrumbs,withSearchBar:params.withSearchBar,};this.controllerParams.controlPanel={Component:ControlPanelComponent,props:controlPanelProps,};}
if(this.withSearchPanel){const SearchPanelComponent=this.config.SearchPanel;extensions[SearchPanelComponent.modelExtension]={archNodes:searchPanelInfo.children,};this.controllerParams.withSearchPanel=true;this.rendererParams.withSearchPanel=true;const searchPanelProps={importedState:importedState.searchPanel,};if(searchPanelInfo.attrs.class){searchPanelProps.className=searchPanelInfo.attrs.class;}
this.controllerParams.searchPanel={Component:SearchPanelComponent,props:searchPanelProps,};}
const searchModel=new ActionModel(extensions,{env:Component.env,modelName:params.modelName,context:Object.assign({},this.loadParams.context),domain:this.loadParams.domain||[],importedState:importedState.searchModel,searchMenuTypes:params.searchMenuTypes,searchQuery:params.searchQuery,fields,});return searchModel;},getController:async function(){const _super=this._super.bind(this);const{searchModel}=this.controllerParams;await searchModel.load();this._updateMVCParams(searchModel.get("query"));const modelParent=this.model&&this.model.getParent();const[controller]=await Promise.all([_super(...arguments),searchModel.isReady(),]);if(modelParent){this.model.setParent(modelParent);}
return controller;},getModel:function(){if(!this.model){this.model=this._super.apply(this,arguments);}
return this.model;},setController:function(Controller){this.Controller=Controller;},_extractParamsFromAction:function(action){action=action||{};var context=action.context||{};var inline=action.target==='inline';const params={actionId:action.id||false,actionViews:action.views||[],activateDefaultFavorite:!context.active_id&&!context.active_ids,context:action.context||{},controlPanelFieldsView:action.controlPanelFieldsView,currentId:action.res_id?action.res_id:undefined,displayName:action.display_name||action.name,domain:action.domain||[],limit:action.limit,modelName:action.res_model,noContentHelp:action.help,searchMenuTypes:inline?[]:this.searchMenuTypes,withBreadcrumbs:'no_breadcrumbs'in context?!context.no_breadcrumbs:true,withControlPanel:this.withControlPanel,withSearchBar:inline?false:this.withSearchBar,withSearchPanel:this.withSearchPanel,};if('useSampleModel'in action){params.useSampleModel=action.useSampleModel;}
return params;},_processFieldsView:function(fieldsView){var fv=_.extend({},fieldsView);fv.arch=viewUtils.parseArch(fv.arch);fv.viewFields=_.defaults({},fv.viewFields,fv.fields);return fv;},_updateMVCParams:function(searchQuery){this.loadParams=_.extend(this.loadParams,{context:searchQuery.context,domain:searchQuery.domain,groupedBy:searchQuery.groupBy,});this.loadParams.orderedBy=Array.isArray(searchQuery.orderedBy)&&searchQuery.orderedBy.length?searchQuery.orderedBy:this.loadParams.orderedBy;if(searchQuery.timeRanges){this.loadParams.timeRanges=searchQuery.timeRanges;this.rendererParams.timeRanges=searchQuery.timeRanges;}},});return AbstractView;});;

/* /web/static/src/js/views/abstract_renderer.js defined in bundle 'web.assets_backend' */
odoo.define('web.AbstractRenderer',function(require){"use strict";var mvc=require('web.mvc');const FOCUSABLE_ELEMENTS=['a','button','input','select','textarea','[tabindex="0"]'].map((sel)=>`:scope ${sel}`).join(', ');return mvc.Renderer.extend({sampleDataTargets:[],init:function(parent,state,params){this._super.apply(this,arguments);this.arch=params.arch;this.noContentHelp=params.noContentHelp;this.withSearchPanel=params.withSearchPanel;},async start(){this.$el.addClass(this.arch.attrs.class);if(this.withSearchPanel){this.$el.addClass('o_renderer_with_searchpanel');}
await Promise.all([this._render(),this._super()]);},on_attach_callback:function(){},on_detach_callback:function(){},getLocalState:function(){},giveFocus:function(){},setLocalState:function(localState){},async updateState(state,params){this._setState(state);if(!params.noRender){await this._render();}},async _render(){await this._renderView();this._suppressFocusableElements();},_renderNoContentHelper:function(context){let templateName;if(!context&&this.noContentHelp){templateName="web.ActionHelper";context={noContentHelp:this.noContentHelp};}else{templateName="web.NoContentHelper";}
const template=document.createElement('template');const owlQWeb=owl.Component.env.qweb;template.innerHTML=owlQWeb.renderToString(templateName,context);this.el.append(template.content.firstChild);},async _renderView(){},_setState(state=false){if(state!==false){this.state=state;}},_suppressFocusableElements(){if(!this.state.isSample||this.isEmbedded){return;}
const rootEls=[];for(const selector of this.sampleDataTargets){rootEls.push(...this.el.querySelectorAll(`:scope ${selector}`));}
const focusableEls=new Set(rootEls);for(const rootEl of rootEls){rootEl.classList.add('o_sample_data_disabled');for(const focusableEl of rootEl.querySelectorAll(FOCUSABLE_ELEMENTS)){focusableEls.add(focusableEl);}}
for(const focusableEl of focusableEls){focusableEl.setAttribute('tabindex',-1);if(focusableEl.classList.contains('dropdown-item')){focusableEl.classList.add('disabled');}}},});});;

/* /web/static/src/js/views/abstract_renderer_owl.js defined in bundle 'web.assets_backend' */
odoo.define('web.AbstractRendererOwl',function(){"use strict";const FOCUSABLE_ELEMENTS=['a','button','input','select','textarea','[tabindex="0"]'].map((sel)=>`:scope ${sel}`).join(', ');class AbstractRenderer extends owl.Component{constructor(){super(...arguments);this.sampleDataTargets=[];}
mounted(){this._suppressFocusableElements();}
patched(){this._suppressFocusableElements();}
_suppressFocusableElements(){if(!this.props.isSample||this.props.isEmbedded){const disabledEls=this.el.querySelectorAll(`.o_sample_data_disabled`);disabledEls.forEach(el=>el.classList.remove('o_sample_data_disabled'));return;}
const rootEls=[];for(const selector of this.sampleDataTargets){rootEls.push(...this.el.querySelectorAll(`:scope ${selector}`));}
const focusableEls=new Set(rootEls);for(const rootEl of rootEls){rootEl.classList.add('o_sample_data_disabled');for(const focusableEl of rootEl.querySelectorAll(FOCUSABLE_ELEMENTS)){focusableEls.add(focusableEl);}}
for(const focusableEl of focusableEls){focusableEl.setAttribute('tabindex',-1);if(focusableEl.classList.contains('dropdown-item')){focusableEl.classList.add('disabled');}}}}
return AbstractRenderer;});;

/* /web/static/src/js/views/abstract_model.js defined in bundle 'web.assets_backend' */
odoo.define('web.AbstractModel',function(require){"use strict";var fieldUtils=require('web.field_utils');var mvc=require('web.mvc');const SampleServer=require('web.SampleServer');var AbstractModel=mvc.Model.extend({init(parent,params={}){this._super(...arguments);this.useSampleModel=params.useSampleModel||false;if(params.isSampleModel){this.isSampleModel=true;this.sampleServer=new SampleServer(params.modelName,params.fields);}else if(this.useSampleModel){const sampleModelParams=Object.assign({},params,{isSampleModel:true,SampleModel:null,useSampleModel:false,});this.sampleModel=new params.SampleModel(this,sampleModelParams);this._isInSampleMode=false;}},get(_,options){let state;if(options&&options.withSampleData&&this._isInSampleMode){state=this.sampleModel.__get(...arguments);}else{state=this.__get(...arguments);}
return state;},isInSampleMode(){return!!this._isInSampleMode;},leaveSampleMode(){if(this.useSampleModel){this.useSampleModel=false;this._isInSampleMode=false;this.sampleModel.destroy();}},async load(params){this.loadParams=params;const handle=await this.__load(...arguments);await this._callSampleModel('__load',handle,...arguments);return handle;},async reload(_,params){const handle=await this.__reload(...arguments);if(this._isInSampleMode){if(!this._haveParamsChanged(params)){await this._callSampleModel('__reload',handle,...arguments);}else{this.leaveSampleMode();}}
return handle;},async _callSampleModel(method,handle,...args){if(this.useSampleModel&&this._isEmpty(handle)){try{if(method==='__load'){await this.sampleModel.__load(...args);}else if(method==='__reload'){await this.sampleModel.__reload(...args);}
this._isInSampleMode=true;}catch(error){if(error instanceof SampleServer.UnimplementedRouteError){this.leaveSampleMode();}else{throw error;}}}else{this.leaveSampleMode();}},__get(){return{};},_isEmpty(){return false;},async __load(){return Promise.resolve();},_parseServerValue:function(field,value){if(field.type==='date'||field.type==='datetime'){value=fieldUtils.parse[field.type](value,field,{isUTC:true});}else if(field.type==='selection'&&value===false){var hasKey0=_.find(field.selection,function(option){return option[0]===0;});value=hasKey0?0:value;}
return value;},async __reload(){return Promise.resolve();},_haveParamsChanged(params={}){for(const key of['context','domain','timeRanges']){if(key in params){const diff=JSON.stringify(params[key])!==JSON.stringify(this.loadParams[key]);if(diff){return true;}}}
if(this.useSampleModel&&'groupBy'in params){return JSON.stringify(params.groupBy)!==JSON.stringify(this.loadParams.groupedBy);}},async _rpc(){if(this.isSampleModel){return this.sampleServer.mockRpc(...arguments);}
return this._super(...arguments);},});return AbstractModel;});;

/* /web/static/src/js/model.js defined in bundle 'web.assets_backend' */
odoo.define("web/static/src/js/model.js",function(require){"use strict";const{groupBy,partitionBy}=require("web.utils");const Registry=require("web.Registry");const{Component,core}=owl;const{EventBus,Observer}=core;const isNotNull=(val)=>val!==null&&val!==undefined;class ModelExtension{constructor(config){this.config=config;this.env=this.config.env;this.shouldLoad=true;this.state={};}
async callLoad(params){if(this.shouldLoad){this.shouldLoad=false;await this.load(params);}}
dispatch(method,...args){if(method in this){this[method](...args);}}
exportState(){return this.state;}
get(){return null;}
importState(state){this.shouldLoad=!state;if(this.shouldLoad){this.prepareState();}else{Object.assign(this.state,state);}}
async load(){}
prepareState(){}}
ModelExtension.layer=0;class Model extends EventBus{constructor(extensions={},globalConfig={}){super();this.config=globalConfig;this.env=this.config.env;this.dispatching=false;this.extensions=[];this.externalState={};this.mapping={};this.rev=1;const{name,registry}=this.constructor;if(!registry||!(registry instanceof Registry)){throw new Error(`Unimplemented registry on model "${name}".`);}
const registryExtensions=Object.entries(registry.entries());const extensionNameLayers=registryExtensions.map(([name,{layer}])=>({name,layer}));const groupedNameLayers=groupBy(extensionNameLayers,"layer");for(const groupNameLayers of Object.values(groupedNameLayers)){for(const{name}of groupNameLayers){if(name in extensions){this.addExtension(name,extensions[name]);}}}
this.importState(this.config.importedState);}
addExtension(extensionName,extensionConfig){const{name,registry}=this.constructor;const Extension=registry.get(extensionName);if(!Extension){throw new Error(`Unknown model extension "${extensionName}" in model "${name}"`);}
const get=this.__get.bind(this,Extension.name);const trigger=this.trigger.bind(this);const config=Object.assign({get,trigger},this.config,extensionConfig);const extension=new Extension(config);if(!(Extension.layer in this.extensions)){this.extensions[Extension.layer]=[];}
this.extensions[Extension.layer].push(extension);}
dispatch(method,...args){const isInitialDispatch=!this.dispatching;this.dispatching=true;for(const extension of this.extensions.flat()){extension.dispatch(method,...args);}
if(!isInitialDispatch){return;}
this.dispatching=false;let rev=this.rev;this._loadExtensions({isInitialLoad:false}).then(()=>{if(rev===this.rev){this._notifyComponents();}});}
exportState(){const exported={};for(const extension of this.extensions.flat()){exported[extension.constructor.name]=extension.exportState();}
const fullState=Object.assign({},this.externalState,exported);return JSON.stringify(fullState);}
get(property,...args){for(const extension of this.extensions.flat()){const result=extension.get(property,...args);if(isNotNull(result)){return result;}}
return null;}
importState(stringifiedState="null"){const state=JSON.parse(stringifiedState)||{};Object.assign(this.externalState,state);for(const extension of this.extensions.flat()){extension.importState(state[extension.constructor.name]);}}
async load(){await this._loadExtensions({isInitialLoad:true});}
__get(excluded,property,...args){const results=[];for(const extension of this.extensions.flat()){if(extension.constructor.name!==excluded){const result=extension.get(property,...args);if(isNotNull(result)){results.push(result);}}}
return results;}
async _loadExtensions(params){for(let layer=0;layer<this.extensions.length;layer++){await Promise.all(this.extensions[layer].map((extension)=>extension.callLoad(params)));}}
async _notifyComponents(){const rev=++this.rev;const subscriptions=this.subscriptions.update;const groups=partitionBy(subscriptions,(s)=>s.owner?s.owner.__owl__.depth:-1);for(let group of groups){const proms=group.map((sub)=>sub.callback.call(sub.owner,rev));Component.scheduler.flush();await Promise.all(proms);}}}
Model.Extension=ModelExtension;function useModel(modelName){const component=Component.current;const model=component.env[modelName];if(!(model instanceof Model)){throw new Error(`No Model found when connecting '${
                component.name
                }'`);}
const mapping=model.mapping;const __owl__=component.__owl__;const componentId=__owl__.id;if(!__owl__.observer){__owl__.observer=new Observer();__owl__.observer.notifyCB=component.render.bind(component);}
const currentCB=__owl__.observer.notifyCB;__owl__.observer.notifyCB=function(){if(model.rev>mapping[componentId]){return;}
currentCB();};mapping[componentId]=0;const renderFn=__owl__.renderFn;__owl__.renderFn=function(comp,params){mapping[componentId]=model.rev;return renderFn(comp,params);};model.on("update",component,async(modelRev)=>{if(mapping[componentId]<modelRev){mapping[componentId]=modelRev;await component.render();}});const __destroy=component.__destroy;component.__destroy=(parent)=>{model.off("update",component);__destroy.call(component,parent);};return model;}
return{Model,useModel,};});;

/* /web/static/src/js/views/abstract_controller.js defined in bundle 'web.assets_backend' */
odoo.define('web.AbstractController',function(require){"use strict";var ActionMixin=require('web.ActionMixin');var ajax=require('web.ajax');var concurrency=require('web.concurrency');const{ComponentWrapper}=require('web.OwlCompatibility');var mvc=require('web.mvc');var session=require('web.session');var AbstractController=mvc.Controller.extend(ActionMixin,{custom_events:_.extend({},ActionMixin.custom_events,{navigation_move:'_onNavigationMove',open_record:'_onOpenRecord',switch_view:'_onSwitchView',}),events:{'click a[type="action"]':'_onActionClicked',},init:function(parent,model,renderer,params){this._super.apply(this,arguments);this._title=params.displayName;this.modelName=params.modelName;this.activeActions=params.activeActions;this.controllerID=params.controllerID;this.initialState=params.initialState;this.bannerRoute=params.bannerRoute;this.actionViews=params.actionViews;this.viewType=params.viewType;this.dp=new concurrency.DropPrevious();this.withControlPanel=params.withControlPanel;this.withSearchPanel=params.withSearchPanel;if(params.searchModel){this.searchModel=params.searchModel;}
if(this.withControlPanel){const{Component,props}=params.controlPanel;this.ControlPanel=Component;this.controlPanelProps=props;}
if(this.withSearchPanel){const{Component,props}=params.searchPanel;this.SearchPanel=Component;this.searchPanelProps=props;}},start:async function(){this.$el.addClass('o_view_controller');this.renderButtons();const promises=[this._super(...arguments)];if(this.withControlPanel){this._updateControlPanelProps(this.initialState);this._controlPanelWrapper=new ComponentWrapper(this,this.ControlPanel,this.controlPanelProps);this._controlPanelWrapper.env.bus.on('focus-view',this,()=>this._giveFocus());promises.push(this._controlPanelWrapper.mount(this.el,{position:'first-child'}));}
if(this.withSearchPanel){this._searchPanelWrapper=new ComponentWrapper(this,this.SearchPanel,this.searchPanelProps);const content=this.el.querySelector(':scope .o_content');content.classList.add('o_controller_with_searchpanel');promises.push(this._searchPanelWrapper.mount(content,{position:'first-child'}));}
await Promise.all(promises);await this._update(this.initialState,{shouldUpdateSearchComponents:false});this.updateButtons();this.el.classList.toggle('o_view_sample_data',this.model.isInSampleMode());},destroy:function(){if(this.$buttons){this.$buttons.off();}
ActionMixin.destroy.call(this);this._super.apply(this,arguments);},on_attach_callback:function(){ActionMixin.on_attach_callback.call(this);this.searchModel.on('search',this,this._onSearch);if(this.withControlPanel){this.searchModel.on('get-controller-query-params',this,this._onGetOwnedQueryParams);}
if(!(this.renderer instanceof owl.Component)){this.renderer.on_attach_callback();}},on_detach_callback:function(){ActionMixin.on_detach_callback.call(this);this.searchModel.off('search',this);if(this.withControlPanel){this.searchModel.off('get-controller-query-params',this);}
if(!(this.renderer instanceof owl.Component)){this.renderer.on_detach_callback();}},canBeRemoved:function(){return this.discardChanges(undefined,{noAbandon:true,readonlyIfRealDiscard:true,});},discardChanges:function(recordID,options){return Promise.resolve();},exportState(){const exported={searchModel:this.searchModel.exportState(),};if(this.withSearchPanel){const searchPanel=this._searchPanelWrapper.componentRef.comp;exported.searchPanel=searchPanel.exportState();}
return exported;},importState(state){this.searchModel.importState(state.searchModel);if(this.withSearchPanel){const searchPanel=this._searchPanelWrapper.componentRef.comp;searchPanel.importState(state.searchPanel);}},is_action_enabled:function(action){return this.activeActions[action];},reload:async function(params={}){if(params.controllerState){this.importState(params.controllerState);Object.assign(params,this.searchModel.get('query'));}
return this.update(params,{});},async update(params,options={}){const shouldReload='reload'in options?options.reload:true;if(shouldReload){this.handle=await this.dp.add(this.model.reload(this.handle,params));}
const localState=this.renderer.getLocalState();const state=this.model.get(this.handle,{withSampleData:true});const promises=[this._updateRendererState(state,params).then(()=>{this.renderer.setLocalState(localState);}),this._update(this.model.get(this.handle),params)];await this.dp.add(Promise.all(promises));this.updateButtons();this.el.classList.toggle('o_view_sample_data',this.model.isInSampleMode());},_getPagingInfo:function(state){return null;},_getActionMenuItems:function(state){return null;},_giveFocus(){if(!this.model.isInSampleMode()){this.renderer.giveFocus();}},_pushState:function(){this.trigger_up('push_state',{controllerID:this.controllerID,state:this.getState(),});},async _removeSampleData(callback){this.model.leaveSampleMode();if(callback){await callback();}
this.el.classList.remove('o_view_sample_data');},_renderBanner:async function(){if(this.bannerRoute!==undefined){const response=await this._rpc({route:this.bannerRoute});if(!response.html){this.$el.removeClass('o_has_banner');return Promise.resolve();}
this.$el.addClass('o_has_banner');var $banner=$(response.html);if(this._$banner&&this._$banner.remove){this._$banner.remove();}
var defs=[];$('link[rel="stylesheet"]',$banner).each(function(i,link){defs.push(ajax.loadCSS(link.href));link.remove();});$('script[type="text/javascript"]',$banner).each(function(i,js){defs.push(ajax.loadJS(js.src));js.remove();});await Promise.all(defs);$banner.insertBefore(this.$('> .o_content'));this._$banner=$banner;}},_startRenderer:function(){if(this.renderer instanceof owl.Component){return this.renderer.mount(this.$('.o_content')[0]);}
return this.renderer.appendTo(this.$('.o_content'));},async _update(state,params){if(!this.$buttons){this.renderButtons();}
const promises=[this._renderBanner()];if(params.shouldUpdateSearchComponents!==false){if(this.withControlPanel){this._updateControlPanelProps(state);if(params.breadcrumbs){this.controlPanelProps.breadcrumbs=params.breadcrumbs;}
promises.push(this.updateControlPanel());}
if(this.withSearchPanel){this._updateSearchPanel();}}
this._pushState();await Promise.all(promises);},_updateControlPanelProps(state){if(!this.controlPanelProps.cp_content){this.controlPanelProps.cp_content={};}
if(this.$buttons){this.controlPanelProps.cp_content.$buttons=this.$buttons;}
Object.assign(this.controlPanelProps,{actionMenus:this._getActionMenuItems(state),pager:this._getPagingInfo(state),title:this.getTitle(),});},_updatePaging:async function(state,newProps){const pagingInfo=this._getPagingInfo(state);if(pagingInfo){Object.assign(pagingInfo,newProps);return this.updateControlPanel({pager:pagingInfo});}},_updateRendererState(state,params={}){if(this.renderer instanceof owl.Component){return this.renderer.update(state);}
return this.renderer.updateState(state,params);},async _updateSearchPanel(newProps){Object.assign(this.searchPanelProps,newProps);await this._searchPanelWrapper.update(this.searchPanelProps);},_onActionClicked:function(ev){ev.preventDefault();var $target=$(ev.currentTarget);var self=this;var data=$target.data();if(data.method!==undefined&&data.model!==undefined){var options={};if(data.reloadOnClose){options.on_close=function(){self.trigger_up('reload');};}
this.dp.add(this._rpc({model:data.model,method:data.method,context:session.user_context,})).then(function(action){if(action!==undefined){self.do_action(action,options);}});}else if($target.attr('name')){this.do_action($target.attr('name'),data.context&&{additional_context:data.context});}else{this.do_action({name:$target.attr('title')||_.str.strip($target.text()),type:'ir.actions.act_window',res_model:data.model||this.modelName,res_id:data.resId,target:'current',views:data.views||(data.resId?[[false,'form']]:[[false,'list'],[false,'form']]),domain:data.domain||[],},{additional_context:_.extend({},data.context)});}},_onNavigationMove:function(ev){switch(ev.data.direction){case'up':ev.stopPropagation();this.searchModel.trigger('focus-control-panel');break;case'down':ev.stopPropagation();this._giveFocus();break;}},_onOpenRecord:function(ev){ev.stopPropagation();var record=this.model.get(ev.data.id,{raw:true});this.trigger_up('switch_view',{view_type:'form',res_id:record.res_id,mode:ev.data.mode||'readonly',model:this.modelName,});},_onSearch:function(searchQuery){this.reload(_.extend({offset:0,groupsOffset:0},searchQuery));},_onSwitchView:function(ev){ev.data.controllerID=this.controllerID;},});return AbstractController;});;

/* /web/static/src/js/views/renderer_wrapper.js defined in bundle 'web.assets_backend' */
odoo.define('web.RendererWrapper',function(require){"use strict";const{ComponentWrapper}=require('web.OwlCompatibility');class RendererWrapper extends ComponentWrapper{getLocalState(){}
setLocalState(){}
giveFocus(){}}
return RendererWrapper;});;

/* /web/static/src/js/views/basic/basic_model.js defined in bundle 'web.assets_backend' */
odoo.define('web.BasicModel',function(require){"use strict";var AbstractModel=require('web.AbstractModel');var concurrency=require('web.concurrency');var Context=require('web.Context');var core=require('web.core');var Domain=require('web.Domain');const pyUtils=require('web.py_utils');var session=require('web.session');var utils=require('web.utils');var viewUtils=require('web.viewUtils');var localStorage=require('web.local_storage');var _t=core._t;const AGGREGATABLE_TYPES=['float','integer','monetary'];var x2ManyCommands={CREATE:0,create:function(virtualID,values){delete values.id;return[x2ManyCommands.CREATE,virtualID||false,values];},UPDATE:1,update:function(id,values){delete values.id;return[x2ManyCommands.UPDATE,id,values];},DELETE:2,delete:function(id){return[x2ManyCommands.DELETE,id,false];},FORGET:3,forget:function(id){return[x2ManyCommands.FORGET,id,false];},LINK_TO:4,link_to:function(id){return[x2ManyCommands.LINK_TO,id,false];},DELETE_ALL:5,delete_all:function(){return[5,false,false];},REPLACE_WITH:6,replace_with:function(ids){return[6,false,ids];}};var BasicModel=AbstractModel.extend({OPEN_GROUP_LIMIT:10,noCacheModels:['ir.actions.act_window','ir.filters','ir.ui.view',],init:function(){this.mutex=new concurrency.Mutex();this.batchedRPCsRequests=[];this.localData=Object.create(null);this.__id=0;this._super.apply(this,arguments);},addDefaultRecord:function(listID,options){var self=this;var list=this.localData[listID];var context=_.extend({},this._getDefaultContext(list),this._getContext(list));var position=(options&&options.position)||'top';var params={context:context,fields:list.fields,fieldsInfo:list.fieldsInfo,parentID:list.id,position:position,viewType:list.viewType,};return this._makeDefaultRecord(list.model,params).then(function(id){list.count++;if(position==='top'){list.data.unshift(id);}else{list.data.push(id);}
var record=self.localData[id];list._cache[record.res_id]=id;return id;});},addFieldsInfo:function(dataPointID,viewInfo){var dataPoint=this.localData[dataPointID];dataPoint.fields=_.extend({},dataPoint.fields,viewInfo.fields);dataPoint.fieldsInfo=dataPoint.fieldsInfo||{};const mainFieldInfo=dataPoint.fieldsInfo[dataPoint[viewInfo.viewType]];dataPoint.fieldsInfo[viewInfo.viewType]=_.defaults({},viewInfo.fieldInfo,mainFieldInfo);return this.applyRawChanges(dataPointID,viewInfo.viewType).then(()=>{const proms=[];const fieldInfo=dataPoint.fieldsInfo[viewInfo.viewType];if(dataPoint.type==='list'){Object.values(dataPoint._cache).forEach(subDataPointID=>{proms.push(this.addFieldsInfo(subDataPointID,{fields:dataPoint.fields,fieldInfo:dataPoint.fieldsInfo[viewInfo.viewType],viewType:viewInfo.viewType,}));});}else{const values=_.extend({},dataPoint.data,dataPoint._changes);Object.keys(fieldInfo).forEach(fieldName=>{const fieldType=dataPoint.fields[fieldName].type;if(fieldType==='one2many'||fieldType==='many2many'){const mode=fieldInfo[fieldName].mode;const views=fieldInfo[fieldName].views;const x2mDataPointID=values[fieldName];if(views[mode]&&x2mDataPointID){proms.push(this.addFieldsInfo(x2mDataPointID,{fields:views[mode].fields,fieldInfo:views[mode].fieldsInfo[mode],viewType:mode,}));}}});}
return Promise.all(proms);});},applyRawChanges:function(recordID,viewType){var record=this.localData[recordID];return this._applyOnChange(record._rawChanges,record,{viewType}).then(function(){return record.id;});},canBeAbandoned:function(id){if(this.localData[id]._noAbandon){return false;}
var record=this.localData[id];var parent=this.localData[record.parentID];if(parent){var entry=_.findWhere(parent._savePoint,{operation:'ADD',id:id});if(entry){if(!entry.isNew){return false;}
var lastEntry=_.last(parent._savePoint);if(lastEntry.operation==='UPDATE'&&lastEntry.id===id){return false;}}}
return this.isNew(id);},deleteRecords:function(recordIds,modelName){var self=this;var records=_.map(recordIds,function(id){return self.localData[id];});var context=_.extend(records[0].getContext(),session.user_context);return this._rpc({model:modelName,method:'unlink',args:[_.pluck(records,'res_id')],context:context,}).then(function(){_.each(records,function(record){var parent=record.parentID&&self.localData[record.parentID];if(parent&&parent.type==='list'){parent.data=_.without(parent.data,record.id);delete self.localData[record.id];}else{record.res_ids.splice(record.offset,1);record.offset=Math.min(record.offset,record.res_ids.length-1);record.res_id=record.res_ids[record.offset];record.count--;}});self._invalidateCache(records[0]);});},discardChanges:function(id,options){options=options||{};var element=this.localData[id];var isNew=this.isNew(id);var rollback='rollback'in options?options.rollback:isNew;var initialOffset=element.offset;element._domains={};this._visitChildren(element,function(elem){if(rollback&&elem._savePoint){if(elem._savePoint instanceof Array){elem._changes=elem._savePoint.slice(0);}else{elem._changes=_.extend({},elem._savePoint);}
elem._isDirty=!isNew;}else{elem._changes=null;elem._isDirty=false;}
elem.offset=0;if(elem.tempLimitIncrement){elem.limit-=elem.tempLimitIncrement;delete elem.tempLimitIncrement;}});element.offset=initialOffset;},duplicateRecord:function(recordID){var self=this;var record=this.localData[recordID];var context=this._getContext(record);return this._rpc({model:record.model,method:'copy',args:[record.data.id],context:context,}).then(function(res_id){var index=record.res_ids.indexOf(record.res_id);record.res_ids.splice(index+1,0,res_id);return self.load({fieldsInfo:record.fieldsInfo,fields:record.fields,modelName:record.model,res_id:res_id,res_ids:record.res_ids.slice(0),viewType:record.viewType,context:context,});});},freezeOrder:function(listID){var list=this.localData[listID];if(list.type==='record'){return;}
list=this._applyX2ManyOperations(list);this._sortList(list);this.localData[listID].orderedResIDs=list.res_ids;},__get:function(id,options){var self=this;options=options||{};if(!(id in this.localData)){return null;}
var element=this.localData[id];if(options.env){var env={ids:element.res_ids?element.res_ids.slice(0):[],};if(element.type==='record'){env.currentId=this.isNew(element.id)?undefined:element.res_id;}
return env;}
if(element.type==='record'){var data=_.extend({},element.data,element._changes);var relDataPoint;for(var fieldName in data){var field=element.fields[fieldName];if(data[fieldName]===null){data[fieldName]=false;}
if(!field){continue;}
if(field.type==='many2one'){if(options.raw){relDataPoint=this.localData[data[fieldName]];data[fieldName]=relDataPoint?relDataPoint.res_id:false;}else{data[fieldName]=this.__get(data[fieldName])||false;}}else if(field.type==='reference'){if(options.raw){relDataPoint=this.localData[data[fieldName]];data[fieldName]=relDataPoint?relDataPoint.model+','+relDataPoint.res_id:false;}else{data[fieldName]=this.__get(data[fieldName])||false;}}else if(field.type==='one2many'||field.type==='many2many'){if(options.raw){if(typeof data[fieldName]==='string'){relDataPoint=this.localData[data[fieldName]];relDataPoint=this._applyX2ManyOperations(relDataPoint);data[fieldName]=relDataPoint.res_ids;}else{data[fieldName]=data[fieldName]||[];}}else{data[fieldName]=this.__get(data[fieldName])||[];}}}
var record={context:_.extend({},element.context),count:element.count,data:data,domain:element.domain.slice(0),evalModifiers:element.evalModifiers,fields:element.fields,fieldsInfo:element.fieldsInfo,getContext:element.getContext,getDomain:element.getDomain,getFieldNames:element.getFieldNames,id:element.id,isDirty:element.isDirty,limit:element.limit,model:element.model,offset:element.offset,ref:element.ref,res_ids:element.res_ids.slice(0),specialData:_.extend({},element.specialData),type:'record',viewType:element.viewType,};if(!this.isNew(element.id)){record.res_id=element.res_id;}
var evalContext;Object.defineProperty(record,'evalContext',{get:function(){evalContext=evalContext||self._getEvalContext(element);return evalContext;},});return record;}
element=this._applyX2ManyOperations(element);this._sortList(element);if(!element.orderedResIDs&&element._changes){_.each(element._changes,function(change){if(change.operation==='ADD'&&change.isNew){element.data=_.without(element.data,change.id);if(change.position==='top'){element.data.unshift(change.id);}else{element.data.push(change.id);}}});}
var list={aggregateValues:_.extend({},element.aggregateValues),context:_.extend({},element.context),count:element.count,data:_.map(element.data,function(elemID){return self.__get(elemID,options);}),domain:element.domain.slice(0),fields:element.fields,getContext:element.getContext,getDomain:element.getDomain,getFieldNames:element.getFieldNames,groupedBy:element.groupedBy,groupsCount:element.groupsCount,groupsLimit:element.groupsLimit,groupsOffset:element.groupsOffset,id:element.id,isDirty:element.isDirty,isOpen:element.isOpen,isSample:this.isSampleModel,limit:element.limit,model:element.model,offset:element.offset,orderedBy:element.orderedBy,res_id:element.res_id,res_ids:element.res_ids.slice(0),type:'list',value:element.value,viewType:element.viewType,};if(element.fieldsInfo){list.fieldsInfo=element.fieldsInfo;}
return list;},generateDefaultValues(recordID,options={}){const record=this.localData[recordID];const viewType=options.viewType||record.viewType;const fieldNames=options.fieldNames||Object.keys(record.fieldsInfo[viewType]);const numericFields=['float','integer','monetary'];const proms=[];record._changes=record._changes||{};fieldNames.forEach(fieldName=>{record.data[fieldName]=null;if(!(fieldName in record._changes)){const field=record.fields[fieldName];if(numericFields.includes(field.type)){record._changes[fieldName]=0;}else if(field.type==='one2many'||field.type==='many2many'){proms.push(this._processX2ManyCommands(record,fieldName,[],options));}else{record._changes[fieldName]=null;}}});return Promise.all(proms);},getName:function(id){var record=this.localData[id];var returnValue='';if(record._changes&&'display_name'in record._changes){returnValue=record._changes.display_name;}
else if('display_name'in record.data){returnValue=record.data.display_name;}
return returnValue||_t("New");},isDirty:function(id){var isDirty=false;this._visitChildren(this.localData[id],function(r){if(r._isDirty){isDirty=true;}});return isDirty;},_isEmpty(dataPointID){const dataPoint=this.localData[dataPointID];if(dataPoint.type==='list'){const hasRecords=dataPoint.count===0;if(dataPoint.groupedBy.length){return dataPoint.data.length>0&&hasRecords;}else{return hasRecords;}}
return false;},isNew:function(id){var data=this.localData[id];if(data.type!=="record"){return false;}
var res_id=data.res_id;if(typeof res_id==='number'){return false;}else if(typeof res_id==='string'&&/^[0-9]+-/.test(res_id)){return false;}
return true;},__load:async function(params){await this._super(...arguments);params.type=params.type||(params.res_id!==undefined?'record':'list');params.viewType=params.viewType||'default';if(!params.fieldsInfo){var fieldsInfo={};for(var fieldName in params.fieldNames){fieldsInfo[params.fieldNames[fieldName]]={};}
params.fieldsInfo={};params.fieldsInfo[params.viewType]=fieldsInfo;}
if(params.type==='record'&&params.res_id===undefined){params.allowWarning=true;return this._makeDefaultRecord(params.modelName,params);}
var dataPoint=this._makeDataPoint(params);return this._load(dataPoint).then(function(){return dataPoint.id;});},localIdsToResIds:function(localIds){return localIds.map(localId=>this.localData[localId].res_id);},makeRecord:function(model,fields,fieldInfo){var self=this;var defs=[];var record_fields={};_.each(fields,function(field){record_fields[field.name]=_.pick(field,'type','relation','domain','selection');});fieldInfo=fieldInfo||{};var fieldsInfo={};fieldsInfo.default={};_.each(fields,function(field){fieldsInfo.default[field.name]=fieldInfo[field.name]||{};});var record=this._makeDataPoint({modelName:model,fields:record_fields,fieldsInfo:fieldsInfo,viewType:'default',});_.each(fields,function(field){var dataPoint;record.data[field.name]=null;if(field.type==='many2one'){if(field.value){var id=_.isArray(field.value)?field.value[0]:field.value;var display_name=_.isArray(field.value)?field.value[1]:undefined;dataPoint=self._makeDataPoint({modelName:field.relation,data:{id:id,display_name:display_name,},parentID:record.id,});record.data[field.name]=dataPoint.id;if(display_name===undefined){defs.push(self._fetchNameGet(dataPoint));}}}else if(field.type==='reference'&&field.value){const ref=field.value.split(',');dataPoint=self._makeDataPoint({context:record.context,data:{id:parseInt(ref[1],10)},modelName:ref[0],parentID:record.id,});defs.push(self._fetchNameGet(dataPoint));record.data[field.name]=dataPoint.id;}else if(field.type==='one2many'||field.type==='many2many'){var relatedFieldsInfo={};relatedFieldsInfo.default={};_.each(field.fields,function(field){relatedFieldsInfo.default[field.name]={};});var dpParams={fieldsInfo:relatedFieldsInfo,modelName:field.relation,parentID:record.id,static:true,type:'list',viewType:'default',};var needLoad=false;if(field.value&&field.value.length){if(_.isObject(field.value[0])){dpParams.res_ids=_.pluck(field.value,'id');dataPoint=self._makeDataPoint(dpParams);_.each(field.value,function(data){var recordDP=self._makeDataPoint({data:data,modelName:field.relation,parentID:dataPoint.id,type:'record',});dataPoint.data.push(recordDP.id);dataPoint._cache[recordDP.res_id]=recordDP.id;});}else{dpParams.res_ids=field.value;dataPoint=self._makeDataPoint(dpParams);needLoad=true;}}else{dpParams.res_ids=[];dataPoint=self._makeDataPoint(dpParams);}
if(needLoad){defs.push(self._load(dataPoint));}
record.data[field.name]=dataPoint.id;}else if(field.value){record.data[field.name]=field.value;}});return Promise.all(defs).then(function(){return record.id;});},notifyChanges:function(record_id,changes,options){return this.mutex.exec(this._applyChange.bind(this,record_id,changes,options));},__reload:async function(id,options){await this._super(...arguments);return this.mutex.exec(this._reload.bind(this,id,options));},removeLine:function(elementID){var record=this.localData[elementID];var parent=this.localData[record.parentID];if(parent.static){parent._changes=_.filter(parent._changes,function(change){if(change.id===elementID&&change.operation==='ADD'&&parent.tempLimitIncrement){parent.tempLimitIncrement--;parent.limit--;}
return change.id!==elementID;});}else{parent.data=_.without(parent.data,elementID);parent.count--;}},resequence:function(modelName,resIDs,parentID,options){options=options||{};if((resIDs.length<=1)){return Promise.resolve(parentID);}
var self=this;var data=this.localData[parentID];var params={model:modelName,ids:resIDs,};if(options.offset){params.offset=options.offset;}
if(options.field){params.field=options.field;}
return this._rpc({route:'/web/dataset/resequence',params:params,}).then(function(wasResequenced){if(!wasResequenced){return Promise.resolve();}
var field=params.field?params.field:'sequence';return self._rpc({model:modelName,method:'read',args:[resIDs,[field]],}).then(function(records){if(data.data.length){var dataType=self.localData[data.data[0]].type;if(dataType==='record'){_.each(data.data,function(dataPoint){var recordData=self.localData[dataPoint].data;var inRecords=_.findWhere(records,{id:recordData.id});if(inRecords){recordData[field]=inRecords[field];}});data.data=_.sortBy(data.data,function(d){return self.localData[d].data[field];});}
if(dataType==='list'){data.data=_.sortBy(data.data,function(d){return _.indexOf(resIDs,self.localData[d].res_id)});}}
data.res_ids=[];_.each(data.data,function(d){var dataPoint=self.localData[d];if(dataPoint.type==='record'){data.res_ids.push(dataPoint.res_id);}else{data.res_ids=data.res_ids.concat(dataPoint.res_ids);}});self._updateParentResIDs(data);return parentID;})});},save:function(recordID,options){var self=this;return this.mutex.exec(function(){options=options||{};var record=self.localData[recordID];if(options.savePoint){self._visitChildren(record,function(rec){var newValue=rec._changes||rec.data;if(newValue instanceof Array){rec._savePoint=newValue.slice(0);}else{rec._savePoint=_.extend({},newValue);}});_.each((record._changes||{}),function(value,fieldName){record._editionViewType[fieldName]=options.viewType;});}
var shouldReload='reload'in options?options.reload:true;var method=self.isNew(recordID)?'create':'write';if(record._changes){delete record._changes.id;}
var changes=self._generateChanges(record,{viewType:options.viewType,changesOnly:method!=='create'});delete changes.id;if(method==='create'){var fieldNames=record.getFieldNames();_.each(fieldNames,function(name){if(changes[name]===null){delete changes[name];}});}
var prom=new Promise(function(resolve,reject){var changedFields=Object.keys(changes);if(options.savePoint){resolve(changedFields);return;}
if(method==='create'||changedFields.length){var args=method==='write'?[[record.data.id],changes]:[changes];self._rpc({model:record.model,method:method,args:args,context:record.getContext(),}).then(function(id){if(method==='create'){record.res_id=id;record.data.id=id;record.offset=record.res_ids.length;record.res_ids.push(id);record.count++;}
var _changes=record._changes;record._changes={};self._invalidateCache(record);self.unfreezeOrder(record.id);if(shouldReload){self._fetchRecord(record).then(function(){resolve(changedFields);});}else{_.extend(record.data,_changes);resolve(changedFields);}}).guardedCatch(reject);}else{resolve(changedFields);}});prom.then(function(){record._isDirty=false;});return prom;});},setDirty:function(id){this.localData[id]._isDirty=true;},setSort:function(list_id,fieldName){var list=this.localData[list_id];if(list.type==='record'){return;}else if(list._changes){_.each(list._changes,function(change){delete change.isNew;});}
if(list.orderedBy.length===0){list.orderedBy.push({name:fieldName,asc:true});}else if(list.orderedBy[0].name===fieldName){if(!list.orderedResIDs){list.orderedBy[0].asc=!list.orderedBy[0].asc;}}else{var orderedBy=_.reject(list.orderedBy,function(o){return o.name===fieldName;});list.orderedBy=[{name:fieldName,asc:true}].concat(orderedBy);}
list.orderedResIDs=null;if(list.static){return this._fetchUngroupedList(list);}
return Promise.resolve();},getActiveField:function(record){const fields=Object.keys(record.fields);const has_active=fields.includes('active');if(has_active){return'active';}
const has_x_active=fields.includes('x_active');return has_x_active?'x_active':undefined},toggleActive:function(recordIDs,parentID){var self=this;var parent=this.localData[parentID];var resIDs=_.map(recordIDs,function(recordID){return self.localData[recordID].res_id;});return this._rpc({model:parent.model,method:'toggle_active',args:[resIDs],}).then(function(action){self._invalidateCache(parent);if(!_.isEmpty(action)){return self.do_action(action,{on_close:function(){return self.trigger_up('reload');}});}else{return self.reload(parentID);}});},actionArchive:function(resIDs,parentID){var self=this;var parent=this.localData[parentID];return this._rpc({model:parent.model,method:'action_archive',args:[resIDs],}).then(function(action){self._invalidateCache(parent);if(!_.isEmpty(action)){return self.do_action(action,{on_close:function(){return self.trigger_up('reload');}});}else{return self.reload(parentID);}});},actionUnarchive:function(resIDs,parentID){var self=this;var parent=this.localData[parentID];return this._rpc({model:parent.model,method:'action_unarchive',args:[resIDs],}).then(function(action){self._invalidateCache(parent);if(!_.isEmpty(action)){return self.do_action(action,{on_close:function(){return self.trigger_up('reload');}});}else{return self.reload(parentID);}});},toggleGroup:function(groupId){var self=this;var group=this.localData[groupId];if(group.isOpen){group.isOpen=false;group.data=[];group.res_ids=[];group.offset=0;this._updateParentResIDs(group);return Promise.resolve(groupId);}
if(!group.isOpen){group.isOpen=true;var def;if(group.count>0){def=this._load(group).then(function(){self._updateParentResIDs(group);});}
return Promise.resolve(def).then(function(){return groupId;});}},unfreezeOrder:function(elementID){var list=this.localData[elementID];if(list.type==='record'){var data=_.extend({},list.data,list._changes);for(var fieldName in data){var field=list.fields[fieldName];if(!field||!data[fieldName]){continue;}
if(field.type==='one2many'||field.type==='many2many'){var recordlist=this.localData[data[fieldName]];recordlist.orderedResIDs=null;for(var index in recordlist.data){this.unfreezeOrder(recordlist.data[index]);}}}
return;}
list.orderedResIDs=null;this._sortList(list);},_addX2ManyDefaultRecord:function(list,options){var self=this;var position=options&&options.position||'top';var params={fields:list.fields,fieldsInfo:list.fieldsInfo,parentID:list.id,position:position,viewType:list.viewType,allowWarning:options&&options.allowWarning};var additionalContexts=options&&options.context;var makeDefaultRecords=[];if(additionalContexts){_.each(additionalContexts,function(context){params.context=self._getContext(list,{additionalContext:context});makeDefaultRecords.push(self._makeDefaultRecord(list.model,params));});}else{params.context=self._getContext(list);makeDefaultRecords.push(self._makeDefaultRecord(list.model,params));}
return Promise.all(makeDefaultRecords).then(function(resultIds){var ids=[];_.each(resultIds,function(id){ids.push(id);list._changes.push({operation:'ADD',id:id,position:position,isNew:true});var record=self.localData[id];list._cache[record.res_id]=id;if(list.orderedResIDs){var index=list.offset+(position!=='top'?list.limit:0);list.orderedResIDs.splice(index,0,record.res_id);self.localData[list.id].orderedResIDs=list.orderedResIDs;}});return ids;});},_applyChange:function(recordID,changes,options){var self=this;var record=this.localData[recordID];var field;var defs=[];options=options||{};record._changes=record._changes||{};if(!options.doNotSetDirty){record._isDirty=true;}
var initialData={};this._visitChildren(record,function(elem){initialData[elem.id]=$.extend(true,{},_.pick(elem,'data','_changes'));});for(var fieldName in changes){field=record.fields[fieldName];if(field&&(field.type==='one2many'||field.type==='many2many')){defs.push(this._applyX2ManyChange(record,fieldName,changes[fieldName],options));}else if(field&&(field.type==='many2one'||field.type==='reference')){defs.push(this._applyX2OneChange(record,fieldName,changes[fieldName],options));}else{record._changes[fieldName]=changes[fieldName];}}
if(options.notifyChange===false){return Promise.all(defs).then(function(){return Promise.resolve(_.keys(changes));});}
return Promise.all(defs).then(function(){var onChangeFields=[];for(var fieldName in changes){field=record.fields[fieldName];if(field&&field.onChange){var isX2Many=field.type==='one2many'||field.type==='many2many';if(!isX2Many||(self._isX2ManyValid(record._changes[fieldName]||record.data[fieldName]))){onChangeFields.push(fieldName);}}}
return new Promise(function(resolve,reject){if(onChangeFields.length){self._performOnChange(record,onChangeFields,{viewType:options.viewType}).then(function(result){delete record._warning;resolve(_.keys(changes).concat(Object.keys(result&&result.value||{})));}).guardedCatch(function(){self._visitChildren(record,function(elem){_.extend(elem,initialData[elem.id]);});reject();});}else{resolve(_.keys(changes));}}).then(function(fieldNames){return self._fetchSpecialData(record).then(function(fieldNames2){return _.union(fieldNames,fieldNames2);});});});},_applyX2OneChange:async function(record,fieldName,data,options){options=options||{};var self=this;if(!data||(!data.id&&!data.display_name)){record._changes[fieldName]=false;return Promise.resolve();}
const field=record.fields[fieldName];const coModel=field.type==='reference'?data.model:field.relation;const allowedTypes=['many2one','reference'];if(allowedTypes.includes(field.type)&&!data.id&&data.display_name){const result=await this._rpc({model:coModel,method:'name_create',args:[data.display_name],context:this._getContext(record,{fieldName:fieldName,viewType:options.viewType}),});if(!result){record._changes[fieldName]=false;return Promise.resolve();}
data={id:result[0],display_name:result[1]};}
var relatedID;if(record._changes&&fieldName in record._changes){relatedID=record._changes[fieldName];}else{relatedID=record.data[fieldName];}
var relatedRecord=this.localData[relatedID];if(relatedRecord&&(data.id===this.localData[relatedID].res_id)){return Promise.resolve();}
var rel_data=_.pick(data,'id','display_name');var def;if(rel_data.display_name===undefined){def=this._rpc({model:coModel,method:'name_get',args:[data.id],context:record.context,}).then(function(result){rel_data.display_name=result[0][1];});}
return Promise.resolve(def).then(function(){var rec=self._makeDataPoint({context:record.context,data:rel_data,fields:{},fieldsInfo:{},modelName:coModel,parentID:record.id,});record._changes[fieldName]=rec.id;});},_applyOnChange:function(values,record,options={}){var self=this;var defs=[];var rec;const viewType=options.viewType||record.viewType;record._changes=record._changes||{};_.each(values,function(val,name){var field=record.fields[name];if(!field){record._rawChanges[name]=val;return;}
if(record._rawChanges[name]){delete record._rawChanges[name];}
var oldValue=name in record._changes?record._changes[name]:record.data[name];var id;if(field.type==='many2one'){id=false;if(val){var data=_.isArray(val)?{id:val[0],display_name:val[1]}:{id:val};if(!oldValue||(self.localData[oldValue].res_id!==data.id)){rec=self._makeDataPoint({context:record.context,data:data,modelName:field.relation,parentID:record.id,});id=rec.id;record._changes[name]=id;}}else{record._changes[name]=false;}}else if(field.type==='reference'){id=false;if(val){var ref=val.split(',');var modelName=ref[0];var resID=parseInt(ref[1]);if(!oldValue||self.localData[oldValue].res_id!==resID||self.localData[oldValue].model!==modelName){rec=self._makeDataPoint({context:record.context,data:{id:parseInt(ref[1])},modelName:modelName,parentID:record.id,});defs.push(self._fetchNameGet(rec));id=rec.id;record._changes[name]=id;}}else{record._changes[name]=id;}}else if(field.type==='one2many'||field.type==='many2many'){var listId=record._changes[name]||record.data[name];var list;if(listId){list=self.localData[listId];}else{var fieldInfo=record.fieldsInfo[viewType][name];if(!fieldInfo){return;}
var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];list=self._makeDataPoint({fields:view?view.fields:fieldInfo.relatedFields,fieldsInfo:view?view.fieldsInfo:fieldInfo.fieldsInfo,limit:fieldInfo.limit,modelName:field.relation,parentID:record.id,static:true,type:'list',viewType:view?view.type:fieldInfo.viewType,});}
record._changes[name]=list.id;list._changes=list._changes||[];var oldChanges=list._changes;_.each(val,function(command){var rec,recID;if(command[0]===0||command[0]===1){if(command[0]===0&&command[1]){var previousChange=_.find(oldChanges,function(operation){var child=self.localData[operation.id];return child&&(child.ref===command[1]);});recID=previousChange&&previousChange.id;rec=self.localData[recID];}
if(command[0]===1&&command[1]){rec=self.localData[list._cache[command[1]]];}
if(!rec){var params={context:list.context,fields:list.fields,fieldsInfo:list.fieldsInfo,modelName:list.model,parentID:list.id,viewType:list.viewType,ref:command[1],};if(command[0]===1){params.res_id=command[1];}
rec=self._makeDataPoint(params);list._cache[rec.res_id]=rec.id;if(options.firstOnChange){rec.getFieldNames().forEach(fieldName=>{if(!(fieldName in rec.data)){rec.data[fieldName]=null;}});}}
rec._noAbandon=!list._savePoint;list._changes.push({operation:'ADD',id:rec.id});if(command[0]===1){list._changes.push({operation:'UPDATE',id:rec.id});}
defs.push(self._applyOnChange(command[2],rec,{firstOnChange:options.firstOnChange,}));}else if(command[0]===4){linkRecord(list,command[1]);}else if(command[0]===5){list._changes=[{operation:'REMOVE_ALL'}];}else if(command[0]===6){list._changes=[{operation:'REMOVE_ALL'}];_.each(command[2],function(resID){linkRecord(list,resID);});}});var def=self._readUngroupedList(list).then(function(){var x2ManysDef=self._fetchX2ManysBatched(list);var referencesDef=self._fetchReferencesBatched(list);return Promise.all([x2ManysDef,referencesDef]);});defs.push(def);}else{var newValue=self._parseServerValue(field,val);if(newValue!==oldValue){record._changes[name]=newValue;}}});return Promise.all(defs);function linkRecord(list,resID){rec=self.localData[list._cache[resID]];if(rec){self.discardChanges(rec.id);}
list._changes.push({operation:'ADD',id:rec?rec.id:null,resID:resID,});}},_applyX2ManyChange:async function(record,fieldName,command,options){if(command.operation==='TRIGGER_ONCHANGE'){return Promise.resolve();}
var self=this;var localID=(record._changes&&record._changes[fieldName])||record.data[fieldName];var list=this.localData[localID];var field=record.fields[fieldName];var viewType=(options&&options.viewType)||record.viewType;var fieldInfo=record.fieldsInfo[viewType][fieldName];var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var def,rec;var defs=[];list._changes=list._changes||[];switch(command.operation){case'ADD':var newRecord=this.localData[command.id];_.defaults(list.fields,newRecord.fields);_.defaults(list.fieldsInfo,newRecord.fieldsInfo);newRecord.fields=list.fields;newRecord.fieldsInfo=list.fieldsInfo;newRecord.viewType=list.viewType;list._cache[newRecord.res_id]=newRecord.id;list._changes.push(command);break;case'ADD_M2M':list._forceM2MLink=true;var data=_.isArray(command.ids)?command.ids:[command.ids];for(const r of data){if(!r.id&&r.display_name){const prom=this._rpc({model:field.relation,method:'name_create',args:[r.display_name],context:this._getContext(record,{fieldName:fieldName,viewType:options.viewType}),}).then(result=>{r.id=result[0];r.display_name=result[1];});defs.push(prom);}}
await Promise.all(defs);if(data.length+list.res_ids.length>list.limit){list.limit=data.length+list.res_ids.length;}
var list_records={};_.each(data,function(d){rec=self._makeDataPoint({context:record.context,modelName:field.relation,fields:view?view.fields:fieldInfo.relatedFields,fieldsInfo:view?view.fieldsInfo:fieldInfo.fieldsInfo,res_id:d.id,data:d,viewType:view?view.type:fieldInfo.viewType,parentID:list.id,});list_records[d.id]=rec;list._cache[rec.res_id]=rec.id;list._changes.push({operation:'ADD',id:rec.id});});var fieldNames=list.getFieldNames();if(fieldNames.length){def=this._rpc({model:list.model,method:'read',args:[_.pluck(data,'id'),fieldNames],context:_.extend({},record.context,field.context),}).then(function(records){_.each(records,function(record){list_records[record.id].data=record;self._parseServerData(fieldNames,list,record);});return Promise.all([self._fetchX2ManysBatched(list),self._fetchReferencesBatched(list)]);});defs.push(def);}
break;case'CREATE':var createOptions=_.extend({context:command.context,position:command.position},options||{});def=this._addX2ManyDefaultRecord(list,createOptions).then(function(ids){_.each(ids,function(id){if(command.position==='bottom'&&list.orderedResIDs&&list.orderedResIDs.length>=list.limit){list.tempLimitIncrement=(list.tempLimitIncrement||0)+1;list.limit+=1;}
if(command.data){return self._applyChange(id,command.data);}});});defs.push(def);break;case'UPDATE':list._changes.push({operation:'UPDATE',id:command.id});if(command.data){defs.push(this._applyChange(command.id,command.data,{viewType:view.type}));}
break;case'FORGET':list._forceM2MUnlink=true;case'DELETE':var idsToRemove=command.ids;list._changes=_.reject(list._changes,function(change,index){var idInCommands=_.contains(command.ids,change.id);if(idInCommands&&change.operation==='ADD'){idsToRemove=_.without(idsToRemove,change.id);}
return idInCommands;});_.each(idsToRemove,function(id){var operation=list._forceM2MUnlink?'FORGET':'DELETE';list._changes.push({operation:operation,id:id});});break;case'DELETE_ALL':list._changes=_.reject(list._changes,function(change){return change.operation==='ADD';});return this._applyX2ManyChange(record,fieldName,{operation:'DELETE',ids:list.res_ids},options);case'REPLACE_WITH':list._changes=[];var newIds=_.difference(command.ids,list.res_ids);var removedIds=_.difference(list.res_ids,command.ids);var addDef,removedDef,values;if(newIds.length){values=_.map(newIds,function(id){return{id:id};});addDef=this._applyX2ManyChange(record,fieldName,{operation:'ADD_M2M',ids:values},options);}
if(removedIds.length){var listData=_.map(list.data,function(localId){return self.localData[localId];});removedDef=this._applyX2ManyChange(record,fieldName,{operation:'DELETE',ids:_.map(removedIds,function(resID){if(resID in list._cache){return list._cache[resID];}
return _.findWhere(listData,{res_id:resID}).id;}),},options);}
return Promise.all([addDef,removedDef]);case'MULTI':_.each(command.commands,function(innerCommand){defs.push(self._applyX2ManyChange(record,fieldName,innerCommand,options));});break;}
return Promise.all(defs).then(function(){return self._readUngroupedList(list).then(function(){return self._fetchX2ManysBatched(list);});});},_applyX2ManyOperations:function(list,options){if(!list.static){return list;}
var self=this;list=_.extend({},list);list.res_ids=list.res_ids.slice(0);var changes=list._changes||[];if(options){var to=options.to===0?0:(options.to||changes.length);changes=changes.slice(options.from||0,to);}
_.each(changes,function(change){var relRecord;if(change.id){relRecord=self.localData[change.id];}
switch(change.operation){case'ADD':list.count++;var resID=relRecord?relRecord.res_id:change.resID;if(change.position==='top'&&(options?options.position!=='bottom':true)){list.res_ids.unshift(resID);}else{list.res_ids.push(resID);}
break;case'FORGET':case'DELETE':list.count--;var deletedResID=relRecord?relRecord.res_id:change.id;list.res_ids=_.without(list.res_ids,deletedResID);break;case'REMOVE_ALL':list.count=0;list.res_ids=[];break;case'UPDATE':break;}});this._setDataInRange(list);return list;},_buildOnchangeSpecs:function(record,viewType){let hasOnchange=false;const onchangeSpec={};var fieldsInfo=record.fieldsInfo[viewType||record.viewType];generateSpecs(fieldsInfo,record.fields);function generateSpecs(fieldsInfo,fields,prefix){prefix=prefix||'';_.each(Object.keys(fieldsInfo),function(name){var field=fields[name];var fieldInfo=fieldsInfo[name];var key=prefix+name;onchangeSpec[key]=(field.onChange)||"";if(field.onChange){hasOnchange=true;}
if(field.type==='one2many'||field.type==='many2many'){_.each(fieldInfo.views,function(view){generateSpecs(view.fieldsInfo[view.type],view.fields,key+'.');});}});}
return{hasOnchange,onchangeSpec};},async _callSampleModel(){await this._super(...arguments);if(this._isInSampleMode){this.__id=this.sampleModel.__id;}},_computeOverrideDefaultFields:function(listID,position){var list=this.localData[listID];var handleField;if(!list){return{};}
position=position||'bottom';if(!list.fieldsInfo){return{};}
for(var field in list.fieldsInfo.list){if(list.fieldsInfo.list[field].widget==='handle'){handleField=field;break;}}
if(!handleField){return{};}
var isOrderedByHandle=list.orderedBy&&list.orderedBy.length&&list.orderedBy[0].asc===true&&list.orderedBy[0].name===handleField;if(!isOrderedByHandle){return{};}
var computedList=this.get(list.id,{raw:true});if(!computedList||!computedList.data||!computedList.data.length){return{};}
var index=Math.min(computedList.data.length-1,position!=='top'?list.limit-1:0);var handleFieldValue=computedList.data[index].data[handleField];if(position==='top'){handleFieldValue--;}else if(list.count<=list.offset+list.limit-(list.tempLimitIncrement||0)){handleFieldValue++;}
return{field:handleField,value:handleFieldValue,};},_evalModifiers:function(element,modifiers){let evalContext=null;const evaluated={};for(const k of['invisible','column_invisible','readonly','required']){const mod=modifiers[k];if(mod===undefined||mod===false||mod===true){if(k in modifiers){evaluated[k]=!!mod;}
continue;}
try{evalContext=evalContext||this._getEvalContext(element);evaluated[k]=new Domain(mod,evalContext).compute(evalContext);}catch(e){throw new Error(_.str.sprintf('for modifier "%s": %s',k,e.message));}}
return evaluated;},_fetchNameGet:function(dataPoint){return this._rpc({model:dataPoint.model,method:'name_get',args:[dataPoint.res_id],context:dataPoint.getContext(),}).then(function(result){dataPoint.data.display_name=result[0][1];});},_fetchNameGets:function(list,fieldName){var self=this;var model=list.fields[fieldName].relation;var records=[];var ids=[];list=this._applyX2ManyOperations(list);_.each(list.data,function(localId){var record=self.localData[localId];var data=record._changes||record.data;var many2oneId=data[fieldName];if(!many2oneId){return;}
var many2oneRecord=self.localData[many2oneId];records.push(many2oneRecord);ids.push(many2oneRecord.res_id);model=many2oneRecord.model;});if(!ids.length){return Promise.resolve();}
return this._rpc({model:model,method:'name_get',args:[_.uniq(ids)],context:list.context,}).then(function(name_gets){_.each(records,function(record){var nameGet=_.find(name_gets,function(nameGet){return nameGet[0]===record.data.id;});record.data.display_name=nameGet[1];});});},_fetchRecord:function(record,options){var self=this;options=options||{};var fieldNames=options.fieldNames||record.getFieldNames(options);fieldNames=_.uniq(fieldNames.concat(['display_name']));return this._rpc({model:record.model,method:'read',args:[[record.res_id],fieldNames],context:_.extend({bin_size:true},record.getContext()),}).then(function(result){if(result.length===0){return Promise.reject();}
result=result[0];record.data=_.extend({},record.data,result);}).then(function(){self._parseServerData(fieldNames,record,record.data);}).then(function(){return Promise.all([self._fetchX2Manys(record,options),self._fetchReferences(record,options)]).then(function(){return self._postprocess(record,options);});});},_fetchReference:function(record,fieldName){var self=this;var def;var value=record._changes&&record._changes[fieldName]||record.data[fieldName];var model=value&&value.split(',')[0];var resID=value&&parseInt(value.split(',')[1]);if(model&&model!=='False'&&resID){def=self._rpc({model:model,method:'name_get',args:[resID],context:record.getContext({fieldName:fieldName}),}).then(function(result){return self._makeDataPoint({data:{id:result[0][0],display_name:result[0][1],},modelName:model,parentID:record.id,});});}
return Promise.resolve(def);},_fetchReferenceData:function(datapoints,model,fieldName){var self=this;var ids=_.map(Object.keys(datapoints),function(id){return parseInt(id);});var parent=datapoints[ids[0]][0];var def=self._rpc({model:model,method:'name_get',args:[ids],context:self.localData[parent].getContext({fieldName:fieldName}),}).then(function(result){_.each(result,function(el){var parentIDs=datapoints[el[0]];_.each(parentIDs,function(parentID){var parent=self.localData[parentID];var referenceDp=self._makeDataPoint({data:{id:el[0],display_name:el[1],},modelName:model,parentID:parent.id,});parent.data[fieldName]=referenceDp.id;});});});return def;},_fetchReferences:function(record,options){var self=this;var defs=[];var fieldNames=options&&options.fieldNames||record.getFieldNames();_.each(fieldNames,function(fieldName){var field=record.fields[fieldName];if(field.type==='reference'){var def=self._fetchReference(record,fieldName).then(function(dataPoint){if(dataPoint){record.data[fieldName]=dataPoint.id;}});defs.push(def);}});return Promise.all(defs);},_fetchReferenceBatched:function(list,fieldName){var self=this;list=this._applyX2ManyOperations(list);this._sortList(list);var toFetch=this._getDataToFetchByModel(list,fieldName);var defs=[];_.each(toFetch,function(datapoints,model){defs.push(self._fetchReferenceData(datapoints,model,fieldName));});return Promise.all(defs);},_fetchReferencesBatched:function(list){var defs=[];var fieldNames=list.getFieldNames();for(var i=0;i<fieldNames.length;i++){var field=list.fields[fieldNames[i]];if(field.type==='reference'){defs.push(this._fetchReferenceBatched(list,fieldNames[i]));}}
return Promise.all(defs);},_fetchReferenceSingleBatch:function(list,fieldName){var self=this;var toFetch={};_.each(list.data,function(groupIndex){var group=self.localData[groupIndex];_.extend(toFetch,self._getDataToFetchByModel(group,fieldName));});var defs=[];_.each(toFetch,function(datapoints,model){defs.push(self._fetchReferenceData(datapoints,model,fieldName));});return Promise.all(defs);},_fetchReferencesSingleBatch:function(list){var defs=[];var fieldNames=list.getFieldNames();for(var fIndex in fieldNames){var field=list.fields[fieldNames[fIndex]];if(field.type==='reference'){defs.push(this._fetchReferenceSingleBatch(list,fieldNames[fIndex]));}}
return Promise.all(defs);},_fetchRelatedData:function(list,toFetch,fieldName){var self=this;var ids=_.keys(toFetch);for(var i=0;i<ids.length;i++){ids[i]=Number(ids[i]);}
var fieldInfo=list.fieldsInfo[list.viewType][fieldName];if(!ids.length||fieldInfo.__no_fetch){return Promise.resolve();}
var def;var fieldNames=_.keys(fieldInfo.relatedFields);if(fieldNames.length){var field=list.fields[fieldName];def=this._rpc({model:field.relation,method:'read',args:[ids,fieldNames],context:list.getContext()||{},});}else{def=Promise.resolve(_.map(ids,function(id){return{id:id};}));}
return def.then(function(result){var records=_.uniq(_.flatten(_.values(toFetch)));self._updateRecordsData(records,fieldName,result);});},_fetchSpecialData:function(record,options){var self=this;var specialFieldNames=[];var fieldNames=(options&&options.fieldNames)||record.getFieldNames();return Promise.all(_.map(fieldNames,function(name){var viewType=(options&&options.viewType)||record.viewType;var fieldInfo=record.fieldsInfo[viewType][name]||{};var Widget=fieldInfo.Widget;if(Widget&&Widget.prototype.specialData){return self[Widget.prototype.specialData](record,name,fieldInfo).then(function(data){if(data===undefined){return;}
record.specialData[name]=data;specialFieldNames.push(name);});}})).then(function(){return specialFieldNames;});},_fetchSpecialMany2ones:function(record,fieldName,fieldInfo,fieldsToRead){var field=record.fields[fieldName];if(field.type!=="many2one"){return Promise.resolve();}
var context=record.getContext({fieldName:fieldName});var domain=record.getDomain({fieldName:fieldName});if(domain.length){var localID=(record._changes&&fieldName in record._changes)?record._changes[fieldName]:record.data[fieldName];if(localID){var element=this.localData[localID];domain=["|",["id","=",element.data.id]].concat(domain);}}
var hasChanged=this._saveSpecialDataCache(record,fieldName,{context:context,domain:domain,});if(!hasChanged){return Promise.resolve();}
var self=this;return this._rpc({model:field.relation,method:'search_read',fields:["id"].concat(fieldsToRead||[]),context:context,domain:domain,}).then(function(records){var ids=_.pluck(records,'id');return self._rpc({model:field.relation,method:'name_get',args:[ids],context:context,}).then(function(name_gets){_.each(records,function(rec){var name_get=_.find(name_gets,function(n){return n[0]===rec.id;});rec.display_name=name_get[1];});return records;});});},_fetchSpecialRelation:function(record,fieldName){var field=record.fields[fieldName];if(!_.contains(["many2one","many2many","one2many"],field.type)){return Promise.resolve();}
var context=record.getContext({fieldName:fieldName});var domain=record.getDomain({fieldName:fieldName});var hasChanged=this._saveSpecialDataCache(record,fieldName,{context:context,domain:domain,});if(!hasChanged){return Promise.resolve();}
return this._rpc({model:field.relation,method:'name_search',args:["",domain],context:context});},_fetchSpecialReference:function(record,fieldName){var def;var field=record.fields[fieldName];if(field.type==='char'){def=this._fetchReference(record,fieldName);}
return Promise.resolve(def);},_fetchSpecialStatus:function(record,fieldName,fieldInfo){var foldField=fieldInfo.options.fold_field;var fieldsToRead=foldField?[foldField]:[];return this._fetchSpecialMany2ones(record,fieldName,fieldInfo,fieldsToRead).then(function(m2os){_.each(m2os,function(m2o){m2o.fold=foldField?m2o[foldField]:false;});return m2os;});},_fetchSpecialDomain:function(record,fieldName,fieldInfo){var self=this;var context=record.getContext({fieldName:fieldName});var domainModel=fieldInfo.options.model;if(record.data.hasOwnProperty(domainModel)){domainModel=record._changes&&record._changes[domainModel]||record.data[domainModel];}
var domainValue=record._changes&&record._changes[fieldName]||record.data[fieldName]||[];var hasChanged=this._saveSpecialDataCache(record,fieldName,{context:context,domainModel:domainModel,domainValue:domainValue,});if(!hasChanged){return Promise.resolve();}else if(!domainModel){return Promise.resolve({model:domainModel,nbRecords:0,});}
return new Promise(function(resolve){var evalContext=self._getEvalContext(record);self._rpc({model:domainModel,method:'search_count',args:[Domain.prototype.stringToArray(domainValue,evalContext)],context:context}).then(function(nbRecords){resolve({model:domainModel,nbRecords:nbRecords,});}).guardedCatch(function(reason){var e=reason.event;e.preventDefault();resolve({model:domainModel,nbRecords:0,});});});},_fetchUngroupedList:function(list,options){options=_.defaults(options||{},{enableRelationalFetch:true});var self=this;var def;if(list.static){def=this._readUngroupedList(list).then(function(){if(list.parentID&&self.isNew(list.parentID)){var many2ones=self._getMany2OneFieldNames(list);var defs=_.map(many2ones,function(name){return self._fetchNameGets(list,name);});return Promise.all(defs);}});}else{def=this._searchReadUngroupedList(list);}
return def.then(function(){if(options.enableRelationalFetch){return Promise.all([self._fetchX2ManysBatched(list),self._fetchReferencesBatched(list)]);}}).then(function(){return list;});},_fetchX2ManyBatched:function(list,fieldName){list=this._applyX2ManyOperations(list);this._sortList(list);var toFetch=this._getDataToFetch(list,fieldName);return this._fetchRelatedData(list,toFetch,fieldName);},_fetchX2Manys:function(record,options){var self=this;var defs=[];options=options||{};var fieldNames=options.fieldNames||record.getFieldNames(options);var viewType=options.viewType||record.viewType;_.each(fieldNames,function(fieldName){var field=record.fields[fieldName];if(field.type==='one2many'||field.type==='many2many'){var fieldInfo=record.fieldsInfo[viewType][fieldName];var rawContext=fieldInfo&&fieldInfo.context;var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var fieldsInfo=view?view.fieldsInfo:(fieldInfo.fieldsInfo||{});var ids=record.data[fieldName]||[];var list=self._makeDataPoint({count:ids.length,context:_.extend({},record.context,field.context),fieldsInfo:fieldsInfo,fields:view?view.fields:fieldInfo.relatedFields,limit:fieldInfo.limit,modelName:field.relation,res_ids:ids,static:true,type:'list',orderedBy:fieldInfo.orderedBy,parentID:record.id,rawContext:rawContext,relationField:field.relation_field,viewType:view?view.type:fieldInfo.viewType,});record.data[fieldName]=list.id;if(!fieldInfo.__no_fetch){var def=self._readUngroupedList(list).then(function(){return Promise.all([self._fetchX2ManysBatched(list),self._fetchReferencesBatched(list)]);});defs.push(def);}}});return Promise.all(defs);},_fetchX2ManysBatched:function(list){var defs=[];var fieldNames=list.getFieldNames();for(var i=0;i<fieldNames.length;i++){var field=list.fields[fieldNames[i]];if(field.type==='many2many'||field.type==='one2many'){defs.push(this._fetchX2ManyBatched(list,fieldNames[i]));}}
return Promise.all(defs);},_fetchX2ManySingleBatch:function(list,fieldName){var self=this;var toFetch={};_.each(list.data,function(groupIndex){var group=self.localData[groupIndex];var nextDataToFetch=self._getDataToFetch(group,fieldName);_.each(_.keys(nextDataToFetch),function(id){if(toFetch[id]){toFetch[id]=toFetch[id].concat(nextDataToFetch[id]);}else{toFetch[id]=nextDataToFetch[id];}});});return self._fetchRelatedData(list,toFetch,fieldName);},_fetchX2ManysSingleBatch:function(list){var defs=[];var fieldNames=list.getFieldNames();for(var i=0;i<fieldNames.length;i++){var field=list.fields[fieldNames[i]];if(field.type==='many2many'||field.type==='one2many'){defs.push(this._fetchX2ManySingleBatch(list,fieldNames[i]));}}
return Promise.all(defs);},_generateChanges:function(record,options){options=options||{};var viewType=options.viewType||record.viewType;var changes;if('changesOnly'in options&&!options.changesOnly){changes=_.extend({},record.data,record._changes);}else{changes=_.extend({},record._changes);}
var withReadonly=options.withReadonly||false;var commands=this._generateX2ManyCommands(record,{changesOnly:'changesOnly'in options?options.changesOnly:true,withReadonly:withReadonly,});for(var fieldName in record.fields){if(!withReadonly&&fieldName in changes||fieldName in commands){var editionViewType=record._editionViewType[fieldName]||viewType;if(this._isFieldProtected(record,fieldName,editionViewType)){delete changes[fieldName];continue;}}
var type=record.fields[fieldName].type;var value;if(type==='one2many'||type==='many2many'){if(commands[fieldName]&&commands[fieldName].length){changes[fieldName]=commands[fieldName];}else{delete changes[fieldName];}}else if(type==='many2one'&&fieldName in changes){value=changes[fieldName];changes[fieldName]=value?this.localData[value].res_id:false;}else if(type==='reference'&&fieldName in changes){value=changes[fieldName];changes[fieldName]=value?this.localData[value].model+','+this.localData[value].res_id:false;}else if(type==='char'&&changes[fieldName]===''){changes[fieldName]=false;}else if(changes[fieldName]===null){changes[fieldName]=false;}}
return changes;},_generateOnChangeData:function(record,options){options=_.extend({},options||{},{withReadonly:true});var data={};if(!options.firstOnChange){var commands=this._generateX2ManyCommands(record,options);data=_.extend(this.get(record.id,{raw:true}).data,commands);var hasDisplayName=_.some(record.fieldsInfo,function(fieldsInfo){return'display_name'in fieldsInfo;});if(!hasDisplayName){delete data.display_name;}}
if(record.parentID){var parent=this.localData[record.parentID];if(parent.parentID&&parent.relationField){var parentRecord=this.localData[parent.parentID];data[parent.relationField]=this._generateOnChangeData(parentRecord);}}
return data;},_generateX2ManyCommands:function(record,options){var self=this;options=options||{};var fields=record.fields;if(options.fieldNames){fields=_.pick(fields,options.fieldNames);}
var commands={};var data=_.extend({},record.data,record._changes);var type;for(var fieldName in fields){type=fields[fieldName].type;if(type==='many2many'||type==='one2many'){if(!data[fieldName]){continue;}
commands[fieldName]=[];var list=this.localData[data[fieldName]];if(options.changesOnly&&(!list._changes||!list._changes.length)){continue;}
var oldResIDs=list.res_ids.slice(0);var relRecordAdded=[];var relRecordUpdated=[];_.each(list._changes,function(change){if(change.operation==='ADD'&&change.id){relRecordAdded.push(self.localData[change.id]);}else if(change.operation==='UPDATE'&&!self.isNew(change.id)){relRecordUpdated.push(self.localData[change.id]);}});list=this._applyX2ManyOperations(list);this._sortList(list);if(type==='many2many'||list._forceM2MLink){var relRecordCreated=_.filter(relRecordAdded,function(rec){return typeof rec.res_id==='string';});var realIDs=_.difference(list.res_ids,_.pluck(relRecordCreated,'res_id'));commands[fieldName].push(x2ManyCommands.replace_with(realIDs));_.each(relRecordCreated,function(relRecord){var changes=self._generateChanges(relRecord,options);commands[fieldName].push(x2ManyCommands.create(relRecord.ref,changes));});_.each(relRecordUpdated,function(relRecord){var changes=self._generateChanges(relRecord,options);if(!_.isEmpty(changes)){var command=x2ManyCommands.update(relRecord.res_id,changes);commands[fieldName].push(command);}});}else if(type==='one2many'){var removedIds=_.difference(oldResIDs,list.res_ids);var addedIds=_.difference(list.res_ids,oldResIDs);var keptIds=_.intersection(oldResIDs,list.res_ids);var didChange=false;var changes,command,relRecord;for(var i=0;i<list.res_ids.length;i++){if(_.contains(keptIds,list.res_ids[i])){relRecord=_.findWhere(relRecordUpdated,{res_id:list.res_ids[i]});changes=relRecord?this._generateChanges(relRecord,options):{};if(!_.isEmpty(changes)){command=x2ManyCommands.update(relRecord.res_id,changes);didChange=true;}else{command=x2ManyCommands.link_to(list.res_ids[i]);}
commands[fieldName].push(command);}else if(_.contains(addedIds,list.res_ids[i])){relRecord=_.findWhere(relRecordAdded,{res_id:list.res_ids[i]});if(!relRecord){commands[fieldName].push(x2ManyCommands.link_to(list.res_ids[i]));continue;}
changes=this._generateChanges(relRecord,_.extend({},options,{changesOnly:true}));if(!this.isNew(relRecord.id)){commands[fieldName].push(x2ManyCommands.link_to(relRecord.res_id));delete changes.id;if(!_.isEmpty(changes)){commands[fieldName].push(x2ManyCommands.update(relRecord.res_id,changes));}}else{const rawChangesEntries=Object.entries(relRecord._rawChanges);for(const[fieldName,value]of rawChangesEntries){const isMany2OneValue=Array.isArray(value)&&value.length===2&&Number.isInteger(value[0])&&typeof value[1]==='string';changes[fieldName]=isMany2OneValue?value[0]:value;}
commands[fieldName].push(x2ManyCommands.create(relRecord.ref,changes));}}}
if(options.changesOnly&&!didChange&&addedIds.length===0&&removedIds.length===0){commands[fieldName]=[];}
for(i=0;i<removedIds.length;i++){if(list._forceM2MUnlink){commands[fieldName].push(x2ManyCommands.forget(removedIds[i]));}else{commands[fieldName].push(x2ManyCommands.delete(removedIds[i]));}}}}}
return commands;},_getContext:function(element,options){options=options||{};var context=new Context(session.user_context);context.set_eval_context(this._getEvalContext(element));if(options.full||!(options.fieldName||options.additionalContext)){context.add(element.context);}
if(options.fieldName){var viewType=options.viewType||element.viewType;var fieldInfo=element.fieldsInfo[viewType][options.fieldName];if(fieldInfo&&fieldInfo.context){context.add(fieldInfo.context);}else{var fieldParams=element.fields[options.fieldName];if(fieldParams.context){context.add(fieldParams.context);}}}
if(options.additionalContext){context.add(options.additionalContext);}
if(element.rawContext){var rawContext=new Context(element.rawContext);var evalContext=this._getEvalContext(this.localData[element.parentID]);evalContext.id=evalContext.id||false;rawContext.set_eval_context(evalContext);context.add(rawContext);}
return context.eval();},_getDataToFetch:function(list,fieldName){var self=this;var field=list.fields[fieldName];var fieldInfo=list.fieldsInfo[list.viewType][fieldName];var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var fieldsInfo=view?view.fieldsInfo:fieldInfo.fieldsInfo;var fields=view?view.fields:fieldInfo.relatedFields;var viewType=view?view.type:fieldInfo.viewType;var toFetch={};let dataPointIds=list.data;for(let i=0;i<list.groupedBy.length;i++){dataPointIds=dataPointIds.reduce((acc,groupId)=>acc.concat(this.localData[groupId].data),[]);}
dataPointIds.forEach(function(dataPoint){var record=self.localData[dataPoint];if(typeof record.data[fieldName]==='string'){return;}
_.each(record.data[fieldName],function(id){toFetch[id]=toFetch[id]||[];toFetch[id].push(record);});var m2mList=self._makeDataPoint({fieldsInfo:fieldsInfo,fields:fields,modelName:field.relation,parentID:record.id,res_ids:record.data[fieldName],static:true,type:'list',viewType:viewType,});record.data[fieldName]=m2mList.id;});return toFetch;},_getDataToFetchByModel:function(list,fieldName){var self=this;var toFetch={};_.each(list.data,function(dataPoint){var record=self.localData[dataPoint];var value=record.data[fieldName];if(value&&!self.localData[value]){var model=value.split(',')[0];var resID=value.split(',')[1];if(!(model in toFetch)){toFetch[model]={};}
if(toFetch[model][resID]){toFetch[model][resID].push(dataPoint);}else{toFetch[model][resID]=[dataPoint];}}});return toFetch;},_getDefaultContext:function(dataPoint){var defaultContext={};while(dataPoint.parentID){var parent=this.localData[dataPoint.parentID];var groupByField=parent.groupedBy[0].split(':')[0];var value=viewUtils.getGroupValue(dataPoint,groupByField);if(value){defaultContext['default_'+groupByField]=value;}
dataPoint=parent;}
return defaultContext;},_getDomain:function(element,options){if(options&&options.fieldName){if(element._domains[options.fieldName]){return Domain.prototype.stringToArray(element._domains[options.fieldName],this._getEvalContext(element,true));}
var viewType=options.viewType||element.viewType;var fieldInfo=element.fieldsInfo[viewType][options.fieldName];if(fieldInfo&&fieldInfo.domain){return Domain.prototype.stringToArray(fieldInfo.domain,this._getEvalContext(element,true));}
var fieldParams=element.fields[options.fieldName];if(fieldParams.domain){return Domain.prototype.stringToArray(fieldParams.domain,this._getEvalContext(element,true));}
return[];}
return Domain.prototype.stringToArray(element.domain,this._getEvalContext(element,true));},_getEvalContext:function(element,forDomain){var evalContext=element.type==='record'?this._getRecordEvalContext(element,forDomain):{};if(element.parentID){var parent=this.localData[element.parentID];if(parent.type==='list'&&parent.parentID){parent=this.localData[parent.parentID];}
if(parent.type==='record'){evalContext.parent=this._getRecordEvalContext(parent,forDomain);}}
let current_company_id;if(session.user_context.allowed_company_ids){current_company_id=session.user_context.allowed_company_ids[0];}else{current_company_id=session.user_companies?session.user_companies.current_company[0]:false;}
return Object.assign({active_id:evalContext.id||false,active_ids:evalContext.id?[evalContext.id]:[],active_model:element.model,current_company_id,id:evalContext.id||false,},pyUtils.context(),session.user_context,element.context,evalContext,);},_getFieldNames:function(element,options){var fieldsInfo=element.fieldsInfo;var viewType=options&&options.viewType||element.viewType;return Object.keys(fieldsInfo&&fieldsInfo[viewType]||{});},_getMany2OneFieldNames:function(datapoint){var many2ones=[];_.each(datapoint.fields,function(field,name){if(field.type==='many2one'){many2ones.push(name);}});return many2ones;},_getRecordEvalContext:function(record,forDomain){var self=this;var relDataPoint;var context=_.extend({},record.data,record._changes);function _generateX2ManyCommands(fieldName){var commands=self._generateX2ManyCommands(record,{fieldNames:[fieldName]});return commands[fieldName];}
for(var fieldName in context){var field=record.fields[fieldName];if(context[fieldName]===null){context[fieldName]=false;}
if(!field||field.name==='id'){continue;}
if(field.type==='date'||field.type==='datetime'){if(context[fieldName]){context[fieldName]=JSON.parse(JSON.stringify(context[fieldName]));}
continue;}
if(field.type==='many2one'){relDataPoint=this.localData[context[fieldName]];context[fieldName]=relDataPoint?relDataPoint.res_id:false;continue;}
if(field.type==='one2many'||field.type==='many2many'){var ids;if(!context[fieldName]||_.isArray(context[fieldName])){ids=context[fieldName]?context[fieldName].slice(0):[];}else{relDataPoint=this._applyX2ManyOperations(this.localData[context[fieldName]]);ids=relDataPoint.res_ids.slice(0);}
if(!forDomain){ids.toJSON=_generateX2ManyCommands.bind(null,fieldName);}else if(field.type==='one2many'){ids=_.filter(ids,function(id){return typeof id!=='string';});}
context[fieldName]=ids;}}
return context;},_invalidateCache:function(dataPoint){while(dataPoint.parentID){dataPoint=this.localData[dataPoint.parentID];}
if(dataPoint.model==='res.currency'){session.reloadCurrencies();}
if(dataPoint.model==='res.company'&&!localStorage.getItem('running_tour')){this.do_action('reload_context');}
if(_.contains(this.noCacheModels,dataPoint.model)){core.bus.trigger('clear_cache');}},_isFieldProtected:function(record,fieldName,viewType){viewType=viewType||record.viewType;var fieldInfo=viewType&&record.fieldsInfo&&record.fieldsInfo[viewType][fieldName];if(fieldInfo){var rawModifiers=fieldInfo.modifiers||{};var modifiers=this._evalModifiers(record,_.pick(rawModifiers,'readonly'));return modifiers.readonly&&!fieldInfo.force_save;}else{return false;}},_isFieldSet:function(value,fieldType){switch(fieldType){case'boolean':return true;case'one2many':case'many2many':return value.length>0;default:return value!==false;}},_isX2ManyValid:function(id){var self=this;var isValid=true;var element=this.localData[id];_.each(element._changes,function(command){if(command.operation==='DELETE'||command.operation==='FORGET'||(command.operation==='ADD'&&!command.isNew)||command.operation==='REMOVE_ALL'){return;}
var recordData=self.get(command.id,{raw:true}).data;var record=self.localData[command.id];_.each(element.getFieldNames(),function(fieldName){var field=element.fields[fieldName];var fieldInfo=element.fieldsInfo[element.viewType][fieldName];var rawModifiers=fieldInfo.modifiers||{};var modifiers=self._evalModifiers(record,_.pick(rawModifiers,'required'));if(modifiers.required&&!self._isFieldSet(recordData[fieldName],field.type)){isValid=false;}});});return isValid;},_load:function(dataPoint,options){if(options&&options.onlyGroups&&!(dataPoint.type==='list'&&dataPoint.groupedBy.length)){return Promise.resolve(dataPoint);}
if(dataPoint.type==='record'){return this._fetchRecord(dataPoint,options);}
if(dataPoint.type==='list'&&dataPoint.groupedBy.length){return this._readGroup(dataPoint,options);}
if(dataPoint.type==='list'&&!dataPoint.groupedBy.length){return this._fetchUngroupedList(dataPoint,options);}},_makeDataPoint:function(params){var type=params.type||('domain'in params&&'list')||'record';var res_id,value;var res_ids=params.res_ids||[];var data=params.data||(type==='record'?{}:[]);var context=params.context;if(type==='record'){res_id=params.res_id||(params.data&&params.data.id);if(res_id){data.id=res_id;}else{res_id=_.uniqueId('virtual_');}
context=_.omit(context,['orderedBy','group_by']);}else{var isValueArray=params.value instanceof Array;res_id=isValueArray?params.value[0]:undefined;value=isValueArray?params.value[1]:params.value;}
var fields=_.extend({display_name:{type:'char'},id:{type:'integer'},},params.fields);var dataPoint={_cache:type==='list'?{}:undefined,_changes:null,_domains:{},_rawChanges:{},aggregateValues:params.aggregateValues||{},context:context,count:params.count||res_ids.length,data:data,domain:params.domain||[],fields:fields,fieldsInfo:params.fieldsInfo,groupedBy:params.groupedBy||[],groupsCount:0,groupsLimit:type==='list'&&params.groupsLimit||null,groupsOffset:0,id:`${params.modelName}_${++this.__id}`,isOpen:params.isOpen,limit:type==='record'?1:(params.limit||Number.MAX_SAFE_INTEGER),loadMoreOffset:0,model:params.modelName,offset:params.offset||(type==='record'?_.indexOf(res_ids,res_id):0),openGroupByDefault:params.openGroupByDefault,orderedBy:params.orderedBy||[],orderedResIDs:params.orderedResIDs,parentID:params.parentID,rawContext:params.rawContext,ref:params.ref||res_id,relationField:params.relationField,res_id:res_id,res_ids:res_ids,specialData:{},_specialDataCache:{},static:params.static||false,type:type,value:value,viewType:params.viewType,};dataPoint._editionViewType={};dataPoint.evalModifiers=this._evalModifiers.bind(this,dataPoint);dataPoint.getContext=this._getContext.bind(this,dataPoint);dataPoint.getDomain=this._getDomain.bind(this,dataPoint);dataPoint.getFieldNames=this._getFieldNames.bind(this,dataPoint);dataPoint.isDirty=this.isDirty.bind(this,dataPoint.id);this.localData[dataPoint.id]=dataPoint;return dataPoint;},async _makeDefaultRecord(modelName,params){var targetView=params.viewType;var fields=params.fields;var fieldsInfo=params.fieldsInfo;var fieldNames=Object.keys(fieldsInfo[targetView]);var parentRecord=params.parentID&&this.localData[params.parentID].type==='list'?this.localData[params.parentID]:null;if(parentRecord){var originView=parentRecord.viewType;fieldNames=_.union(fieldNames,Object.keys(parentRecord.fieldsInfo[originView]));fieldsInfo[targetView]=_.defaults({},fieldsInfo[targetView],parentRecord.fieldsInfo[originView]);fields=_.defaults({},fields,parentRecord.fields);}
var record=this._makeDataPoint({modelName:modelName,fields:fields,fieldsInfo:fieldsInfo,context:params.context,parentID:params.parentID,res_ids:params.res_ids,viewType:targetView,});await this.generateDefaultValues(record.id,{},{fieldNames});try{await this._performOnChange(record,[],{firstOnChange:true});}finally{if(record._warning&&params.allowWarning){delete record._warning;}}
if(record._warning){return Promise.reject();}
var overrideDefaultFields=this._computeOverrideDefaultFields(params.parentID,params.position);if(overrideDefaultFields.field){record._changes[overrideDefaultFields.field]=overrideDefaultFields.value;}
await this._postprocess(record);this.save(record.id,{savePoint:true});return record.id;},_parseServerData:function(fieldNames,element,data){var self=this;_.each(fieldNames,function(fieldName){var field=element.fields[fieldName];var val=data[fieldName];if(field.type==='many2one'){if(val!==false){var r=self._makeDataPoint({modelName:field.relation,fields:{display_name:{type:'char'},id:{type:'integer'},},data:{display_name:val[1],id:val[0],},parentID:element.id,});data[fieldName]=r.id;}else{data[fieldName]=false;}}else{data[fieldName]=self._parseServerValue(field,val);}});},async _performOnChange(record,fields,options={}){const firstOnChange=options.firstOnChange;let{hasOnchange,onchangeSpec}=this._buildOnchangeSpecs(record,options.viewType);if(!firstOnChange&&!hasOnchange){return;}
var idList=record.data.id?[record.data.id]:[];const ctxOptions={full:true,};if(fields.length===1){fields=fields[0];ctxOptions.fieldName=fields;}
var context=this._getContext(record,ctxOptions);var currentData=this._generateOnChangeData(record,{changesOnly:false,firstOnChange,});const result=await this._rpc({model:record.model,method:'onchange',args:[idList,currentData,fields,onchangeSpec],context:context,});if(!record._changes){return;}
if(result.warning){this.trigger_up('warning',result.warning);record._warning=true;}
if(result.domain){record._domains=Object.assign(record._domains,result.domain);}
await this._applyOnChange(result.value,record,{firstOnChange});return result;},_performRPC:function(params){var self=this;var request=_.extend({},params);var prom=new Promise(function(resolve,reject){request.resolve=resolve;request.reject=reject;});this.batchedRPCsRequests.push(request);Promise.resolve().then(function(){if(!self.batchedRPCsRequests.length){return;}
var batchedRPCsRequests=self.batchedRPCsRequests;self.batchedRPCsRequests=[];var batches={};var key;for(var i=0;i<batchedRPCsRequests.length;i++){var request=batchedRPCsRequests[i];key=request.model+','+JSON.stringify(request.context);if(!batches[key]){batches[key]=_.extend({},request,{requests:[request]});}else{batches[key].ids=_.uniq(batches[key].ids.concat(request.ids));batches[key].fieldNames=_.uniq(batches[key].fieldNames.concat(request.fieldNames));batches[key].requests.push(request);}}
function onSuccess(batch,results){for(var i=0;i<batch.requests.length;i++){var request=batch.requests[i];var fieldNames=request.fieldNames.concat(['id']);var filteredResults=results.filter(function(record){return request.ids.indexOf(record.id)>=0;}).map(function(record){return _.pick(record,fieldNames);});request.resolve(filteredResults);}}
function onFailure(batch,error){for(var i=0;i<batch.requests.length;i++){var request=batch.requests[i];request.reject(error);}}
for(key in batches){var batch=batches[key];self._rpc({model:batch.model,method:'read',args:[batch.ids,batch.fieldNames],context:batch.context,}).then(onSuccess.bind(null,batch)).guardedCatch(onFailure.bind(null,batch));}});return prom;},_postprocess:function(record,options){var self=this;var viewType=options&&options.viewType||record.viewType;var defs=[];_.each(record.getFieldNames(options),function(name){var field=record.fields[name];var fieldInfo=record.fieldsInfo[viewType][name]||{};var options=fieldInfo.options||{};if(options.always_reload){if(record.fields[name].type==='many2one'){const _changes=record._changes||{};const relRecordId=_changes[name]||record.data[name];if(!relRecordId){return;}
var relRecord=self.localData[relRecordId];defs.push(self._rpc({model:field.relation,method:'name_get',args:[relRecord.data.id],context:self._getContext(record,{fieldName:name,viewType:viewType}),}).then(function(result){relRecord.data.display_name=result[0][1];}));}}});defs.push(this._fetchSpecialData(record,options));return Promise.all(defs).then(function(){return record;});},_processX2ManyCommands:function(record,fieldName,commands,options){var self=this;options=options||{};var defs=[];var field=record.fields[fieldName];var fieldInfo=record.fieldsInfo[options.viewType||record.viewType][fieldName]||{};var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var fieldsInfo=view?view.fieldsInfo:fieldInfo.fieldsInfo;var fields=view?view.fields:fieldInfo.relatedFields;var viewType=view?view.type:fieldInfo.viewType;var parentContext=_.omit(record.context,function(val,key){return _.str.startsWith(key,'default_');});var x2manyList=self._makeDataPoint({context:parentContext,fieldsInfo:fieldsInfo,fields:fields,limit:fieldInfo.limit,modelName:field.relation,parentID:record.id,rawContext:fieldInfo&&fieldInfo.context,relationField:field.relation_field,res_ids:[],static:true,type:'list',viewType:viewType,});record._changes[fieldName]=x2manyList.id;x2manyList._changes=[];var many2ones={};var r;commands=commands||[];var isCommandList=commands.length&&_.isArray(commands[0]);if(!isCommandList){commands=[[6,false,commands]];}
_.each(commands,function(value){if(value[0]===0){r=self._makeDataPoint({modelName:x2manyList.model,context:x2manyList.context,fieldsInfo:fieldsInfo,fields:fields,parentID:x2manyList.id,viewType:viewType,});r._noAbandon=true;x2manyList._changes.push({operation:'ADD',id:r.id});x2manyList._cache[r.res_id]=r.id;_.each(r.getFieldNames(),function(fieldName){r.data[fieldName]=null;});r._changes=_.defaults(value[2],r.data);for(var fieldName in r._changes){if(!r._changes[fieldName]){continue;}
var isFieldInView=fieldName in r.fields;if(isFieldInView){var field=r.fields[fieldName];var fieldType=field.type;var rec;if(fieldType==='many2one'){rec=self._makeDataPoint({context:r.context,modelName:field.relation,data:{id:r._changes[fieldName]},parentID:r.id,});r._changes[fieldName]=rec.id;many2ones[fieldName]=true;}else if(fieldType==='reference'){var reference=r._changes[fieldName].split(',');rec=self._makeDataPoint({context:r.context,modelName:reference[0],data:{id:parseInt(reference[1])},parentID:r.id,});r._changes[fieldName]=rec.id;many2ones[fieldName]=true;}else if(_.contains(['one2many','many2many'],fieldType)){var x2mCommands=value[2][fieldName];defs.push(self._processX2ManyCommands(r,fieldName,x2mCommands));}else{r._changes[fieldName]=self._parseServerValue(field,r._changes[fieldName]);}}}}
if(value[0]===6){_.each(value[2],function(res_id){x2manyList._changes.push({operation:'ADD',resID:res_id});});var def=self._readUngroupedList(x2manyList).then(function(){return Promise.all([self._fetchX2ManysBatched(x2manyList),self._fetchReferencesBatched(x2manyList)]);});defs.push(def);}});_.each(_.keys(many2ones),function(name){defs.push(self._fetchNameGets(x2manyList,name));});return Promise.all(defs);},_readMissingFields:function(list,resIDs,fieldNames){var self=this;var missingIDs=[];for(var i=0,len=resIDs.length;i<len;i++){var resId=resIDs[i];var dataPointID=list._cache[resId];if(!dataPointID){missingIDs.push(resId);continue;}
var record=self.localData[dataPointID];var data=_.extend({},record.data,record._changes);if(_.difference(fieldNames,_.keys(data)).length){missingIDs.push(resId);}}
var def;if(missingIDs.length&&fieldNames.length){def=self._performRPC({context:list.getContext(),fieldNames:fieldNames,ids:missingIDs,method:'read',model:list.model,});}else{def=Promise.resolve(_.map(missingIDs,function(id){return{id:id};}));}
return def.then(function(records){_.each(resIDs,function(id){var dataPoint;var data=_.findWhere(records,{id:id});if(id in list._cache){dataPoint=self.localData[list._cache[id]];if(data){self._parseServerData(fieldNames,dataPoint,data);_.extend(dataPoint.data,data);}}else{dataPoint=self._makeDataPoint({context:list.getContext(),data:data,fieldsInfo:list.fieldsInfo,fields:list.fields,modelName:list.model,parentID:list.id,viewType:list.viewType,});self._parseServerData(fieldNames,dataPoint,dataPoint.data);list._cache[id]=dataPoint.id;}
_.each(list._changes,function(change){if(change.operation==='ADD'&&!change.id&&change.resID===id){change.id=dataPoint.id;}});});return list;});},_readGroup:function(list,options){var self=this;options=options||{};var groupByField=list.groupedBy[0];var rawGroupBy=groupByField.split(':')[0];var fields=_.uniq(list.getFieldNames().concat(rawGroupBy));var orderedBy=_.filter(list.orderedBy,function(order){return order.name===rawGroupBy||list.fields[order.name].group_operator!==undefined;});var openGroupsLimit=list.groupsLimit||self.OPEN_GROUP_LIMIT;var expand=list.openGroupByDefault&&options.fetchRecordsWithGroups;return this._rpc({model:list.model,method:'web_read_group',fields:fields,domain:list.domain,context:list.context,groupBy:list.groupedBy,limit:list.groupsLimit,offset:list.groupsOffset,orderBy:orderedBy,lazy:true,expand:expand,expand_limit:expand?list.limit:null,expand_orderby:expand?list.orderedBy:null,}).then(function(result){var groups=result.groups;list.groupsCount=result.length;var previousGroups=_.map(list.data,function(groupID){return self.localData[groupID];});list.data=[];list.count=0;var defs=[];var openGroupCount=0;_.each(groups,function(group){var aggregateValues={};_.each(group,function(value,key){if(_.contains(fields,key)&&key!==groupByField&&AGGREGATABLE_TYPES.includes(list.fields[key].type)){aggregateValues[key]=value;}});var value=group[groupByField];if(list.fields[rawGroupBy].type==="selection"){var choice=_.find(list.fields[rawGroupBy].selection,function(c){return c[0]===value;});value=choice?choice[1]:false;}
var newGroup=self._makeDataPoint({modelName:list.model,count:group[rawGroupBy+'_count'],domain:group.__domain,context:list.context,fields:list.fields,fieldsInfo:list.fieldsInfo,value:value,aggregateValues:aggregateValues,groupedBy:list.groupedBy.slice(1),orderedBy:list.orderedBy,orderedResIDs:list.orderedResIDs,limit:list.limit,openGroupByDefault:list.openGroupByDefault,parentID:list.id,type:'list',viewType:list.viewType,});var oldGroup=_.find(previousGroups,function(g){return g.res_id===newGroup.res_id&&g.value===newGroup.value;});if(oldGroup){delete self.localData[newGroup.id];var updatedProps=_.pick(oldGroup,'isOpen','offset','id');if(options.onlyGroups||oldGroup.isOpen&&newGroup.groupedBy.length){updatedProps.data=oldGroup.data;if(options.onlyGroups){updatedProps.res_ids=oldGroup.res_ids;updatedProps.count=oldGroup.count;}}
_.extend(newGroup,updatedProps);newGroup.limit=oldGroup.limit+oldGroup.loadMoreOffset;self.localData[newGroup.id]=newGroup;}else if(!newGroup.openGroupByDefault||openGroupCount>=openGroupsLimit){newGroup.isOpen=false;}else if('__fold'in group){newGroup.isOpen=!group.__fold;}else{newGroup.isOpen=!self.localData[newGroup.parentID].parentID;}
list.data.push(newGroup.id);list.count+=newGroup.count;if(newGroup.isOpen&&newGroup.count>0){openGroupCount++;if(group.__data){newGroup.__data=group.__data;}
options=_.defaults({enableRelationalFetch:false},options);defs.push(self._load(newGroup,options));}});if(options.keepEmptyGroups){var emptyGroupsIDs=_.difference(_.pluck(previousGroups,'id'),list.data);_.each(emptyGroupsIDs,function(groupID){list.data.push(groupID);var emptyGroup=self.localData[groupID];emptyGroup.aggregateValues={};});}
return Promise.all(defs).then(function(groups){if(!options.onlyGroups){list.res_ids=_.flatten(_.map(groups,function(group){return group?group.res_ids:[];}));}
return list;}).then(function(){return Promise.all([self._fetchX2ManysSingleBatch(list),self._fetchReferencesSingleBatch(list)]).then(function(){return list;});});});},_readUngroupedList:function(list){var self=this;var def=Promise.resolve();list=this._applyX2ManyOperations(list);if(list.res_ids.length>list.limit&&list.orderedBy.length){if(!list.orderedResIDs){var fieldNames=_.pluck(list.orderedBy,'name');def=this._readMissingFields(list,_.filter(list.res_ids,_.isNumber),fieldNames);}
def.then(function(){self._sortList(list);});}
return def.then(function(){var resIDs=[];var currentResIDs=list.res_ids;if(list.orderedResIDs){currentResIDs=list.orderedResIDs.filter(function(resID){return list.res_ids.indexOf(resID)>=0;});}
var currentCount=currentResIDs.length;var upperBound=list.limit?Math.min(list.offset+list.limit,currentCount):currentCount;var fieldNames=list.getFieldNames();for(var i=list.offset;i<upperBound;i++){var resId=currentResIDs[i];if(_.isNumber(resId)){resIDs.push(resId);}}
return self._readMissingFields(list,resIDs,fieldNames).then(function(){if(list.res_ids.length<=list.limit){self._sortList(list);}else{self._setDataInRange(list);}
return list;});});},_reload:function(id,options){options=options||{};var element=this.localData[id];if(element.type==='record'){if(!options.currentId&&(('currentId'in options)||this.isNew(id))){var params={context:element.context,fieldsInfo:element.fieldsInfo,fields:element.fields,viewType:element.viewType,};return this._makeDefaultRecord(element.model,params);}
if(!options.keepChanges){this.discardChanges(id,{rollback:false});}}else if(element._changes){delete element.tempLimitIncrement;_.each(element._changes,function(change){delete change.isNew;});}
if(options.context!==undefined){element.context=options.context;}
if(options.orderedBy!==undefined){element.orderedBy=(options.orderedBy.length&&options.orderedBy)||element.orderedBy;}
if(options.domain!==undefined){element.domain=options.domain;}
if(options.groupBy!==undefined){element.groupedBy=options.groupBy;}
if(options.limit!==undefined){element.limit=options.limit;}
if(options.offset!==undefined){this._setOffset(element.id,options.offset);}
if(options.groupsLimit!==undefined){element.groupsLimit=options.groupsLimit;}
if(options.groupsOffset!==undefined){element.groupsOffset=options.groupsOffset;}
if(options.loadMoreOffset!==undefined){element.loadMoreOffset=options.loadMoreOffset;}else{element.loadMoreOffset=0;}
if(options.currentId!==undefined){element.res_id=options.currentId;}
if(options.ids!==undefined){element.res_ids=options.ids;element.count=element.res_ids.length;}
if(element.type==='record'){element.offset=_.indexOf(element.res_ids,element.res_id);}
var loadOptions=_.pick(options,'fieldNames','viewType');return this._load(element,loadOptions).then(function(result){return result.id;});},async _rpc(params){const result=await this._super(...arguments);if(this.sampleModel&&params.method==='web_read_group'&&result.length){const sampleServer=this.sampleModel.sampleServer;sampleServer.setExistingGroups(result.groups);}
return result;},_saveSpecialDataCache:function(record,fieldName,value){if(_.isEqual(record._specialDataCache[fieldName],value)){return false;}
record._specialDataCache[fieldName]=value;return true;},_searchReadUngroupedList:function(list){var self=this;var fieldNames=list.getFieldNames();var prom;if(list.__data){prom=Promise.resolve(list.__data);}else{prom=this._rpc({route:'/web/dataset/search_read',model:list.model,fields:fieldNames,context:_.extend({},list.getContext(),{bin_size:true}),domain:list.domain||[],limit:list.limit,offset:list.loadMoreOffset+list.offset,orderBy:list.orderedBy,});}
return prom.then(function(result){delete list.__data;list.count=result.length;var ids=_.pluck(result.records,'id');var data=_.map(result.records,function(record){var dataPoint=self._makeDataPoint({context:list.context,data:record,fields:list.fields,fieldsInfo:list.fieldsInfo,modelName:list.model,parentID:list.id,viewType:list.viewType,});self._parseServerData(fieldNames,dataPoint,dataPoint.data);return dataPoint.id;});if(list.loadMoreOffset){list.data=list.data.concat(data);list.res_ids=list.res_ids.concat(ids);}else{list.data=data;list.res_ids=ids;}
self._updateParentResIDs(list);return list;});},_setDataInRange:function(list){var idsInRange;if(list.limit){idsInRange=list.res_ids.slice(list.offset,list.offset+list.limit);}else{idsInRange=list.res_ids;}
list.data=[];_.each(idsInRange,function(id){if(list._cache[id]){list.data.push(list._cache[id]);}});if(list.limit){for(var i=list.offset+list.limit;i<list.res_ids.length;i++){var id=list.res_ids[i];var dataPointID=list._cache[id];if(_.findWhere(list._changes,{isNew:true,id:dataPointID})){list.data.push(dataPointID);}else{break;}}}},_setOffset:function(elementId,offset){var element=this.localData[elementId];element.offset=offset;if(element.type==='record'&&element.res_ids.length){element.res_id=element.res_ids[offset];}},_sortList:function(list){if(!list.static){return;}
var self=this;if(list.orderedResIDs){var orderedResIDs={};for(var k=0;k<list.orderedResIDs.length;k++){orderedResIDs[list.orderedResIDs[k]]=k;}
utils.stableSort(list.res_ids,function compareResIdIndexes(resId1,resId2){if(!(resId1 in orderedResIDs)&&!(resId2 in orderedResIDs)){return 0;}
if(!(resId1 in orderedResIDs)){return Infinity;}
if(!(resId2 in orderedResIDs)){return-Infinity;}
return orderedResIDs[resId1]-orderedResIDs[resId2];});}else if(list.orderedBy.length){var compareRecords=function(resId1,resId2,level){if(!level){level=0;}
if(list.orderedBy.length<level+1){return 0;}
var order=list.orderedBy[level];var record1ID=list._cache[resId1];var record2ID=list._cache[resId2];if(!record1ID&&!record2ID){return 0;}
if(!record1ID){return Infinity;}
if(!record2ID){return-Infinity;}
var r1=self.localData[record1ID];var r2=self.localData[record2ID];var data1=_.extend({},r1.data,r1._changes);var data2=_.extend({},r2.data,r2._changes);var orderData1=data1[order.name];var orderData2=data2[order.name];if(list.fields[order.name].type==='many2one'){orderData1=orderData1?self.localData[orderData1].data.display_name:"";orderData2=orderData2?self.localData[orderData2].data.display_name:"";}
if(orderData1<orderData2){return order.asc?-1:1;}
if(orderData1>orderData2){return order.asc?1:-1;}
return compareRecords(resId1,resId2,level+1);};utils.stableSort(list.res_ids,compareRecords);}
this._setDataInRange(list);},_updateParentResIDs:function(element){var self=this;if(element.parentID){var parent=this.localData[element.parentID];parent.res_ids=_.flatten(_.map(parent.data,function(dataPointID){return self.localData[dataPointID].res_ids;}));this._updateParentResIDs(parent);}},_updateRecordsData:function(records,fieldName,values){if(!records.length||!values){return;}
var self=this;var field=records[0].fields[fieldName];var fieldInfo=records[0].fieldsInfo[records[0].viewType][fieldName];var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var fieldsInfo=view?view.fieldsInfo:fieldInfo.fieldsInfo;var fields=view?view.fields:fieldInfo.relatedFields;var viewType=view?view.type:fieldInfo.viewType;_.each(records,function(record){var x2mList=self.localData[record.data[fieldName]];x2mList.data=[];_.each(x2mList.res_ids,function(res_id){var dataPoint=self._makeDataPoint({modelName:field.relation,data:_.findWhere(values,{id:res_id}),fields:fields,fieldsInfo:fieldsInfo,parentID:x2mList.id,viewType:viewType,});x2mList.data.push(dataPoint.id);x2mList._cache[res_id]=dataPoint.id;});});},_visitChildren:function(element,fn){var self=this;fn(element);if(element.type==='record'){for(var fieldName in element.data){var field=element.fields[fieldName];if(!field){continue;}
if(_.contains(['one2many','many2one','many2many'],field.type)){var hasChange=element._changes&&fieldName in element._changes;var value=hasChange?element._changes[fieldName]:element.data[fieldName];var relationalElement=this.localData[value];if(relationalElement){self._visitChildren(relationalElement,fn);}}}}
if(element.type==='list'){element=this._applyX2ManyOperations(element);_.each(element.data,function(elemId){var elem=self.localData[elemId];self._visitChildren(elem,fn);});}},});return BasicModel;});;

/* /web/static/src/js/views/basic/basic_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.BasicView',function(require){"use strict";var AbstractView=require('web.AbstractView');var BasicController=require('web.BasicController');var BasicModel=require('web.BasicModel');var config=require('web.config');var fieldRegistry=require('web.field_registry');var fieldRegistryOwl=require('web.field_registry_owl');var pyUtils=require('web.py_utils');var utils=require('web.utils');var BasicView=AbstractView.extend({config:_.extend({},AbstractView.prototype.config,{Model:BasicModel,Controller:BasicController,}),viewType:undefined,init:function(viewInfo,params){this._super.apply(this,arguments);this.fieldsInfo={};this.fieldsInfo[this.viewType]=this.fieldsView.fieldsInfo[this.viewType];this.rendererParams.viewType=this.viewType;this.controllerParams.confirmOnDelete=true;this.controllerParams.archiveEnabled='active'in this.fields||'x_active'in this.fields;this.controllerParams.hasButtons='action_buttons'in params?params.action_buttons:true;this.controllerParams.viewId=viewInfo.view_id;this.loadParams.fieldsInfo=this.fieldsInfo;this.loadParams.fields=this.fields;this.loadParams.limit=parseInt(this.arch.attrs.limit,10)||params.limit;this.loadParams.parentID=params.parentID;this.loadParams.viewType=this.viewType;this.recordID=params.recordID;this.model=params.model;},_getFieldWidgetClass:function(viewType,field,attrs){var FieldWidget;if(attrs.widget){FieldWidget=fieldRegistryOwl.getAny([viewType+"."+attrs.widget,attrs.widget])||fieldRegistry.getAny([viewType+"."+attrs.widget,attrs.widget]);if(!FieldWidget){console.warn("Missing widget: ",attrs.widget," for field",attrs.name,"of type",field.type);}}else if(viewType==='kanban'&&field.type==='many2many'){FieldWidget=fieldRegistry.get('kanban.many2many_tags');}
return FieldWidget||fieldRegistryOwl.getAny([viewType+"."+field.type,field.type,"abstract"])||fieldRegistry.getAny([viewType+"."+field.type,field.type,"abstract"]);},_loadData:async function(model){if(this.recordID){await model.addFieldsInfo(this.recordID,{fields:this.fields,fieldInfo:this.fieldsInfo[this.viewType],viewType:this.viewType,});var record=model.get(this.recordID);var viewType=this.viewType;var viewFields=Object.keys(record.fieldsInfo[viewType]);var fieldNames=_.difference(viewFields,Object.keys(record.data));var fieldsInfo=record.fieldsInfo[viewType];_.each(viewFields,(name)=>{if(!_.contains(fieldNames,name)){var fieldType=record.fields[name].type;var fieldInfo=fieldsInfo[name];if(fieldInfo.Widget){var requiresSpecialData=fieldInfo.Widget.prototype.specialData;if(requiresSpecialData&&!(name in record.specialData)){fieldNames.push(name);return;}}
if((fieldType==='one2many'||fieldType==='many2many')){if(!('fieldsInfo'in record.data[name])){fieldNames.push(name);}else{var x2mFieldInfo=record.fieldsInfo[this.viewType][name];var viewType=x2mFieldInfo.viewType||x2mFieldInfo.mode;var knownFields=Object.keys(record.data[name].fieldsInfo[record.data[name].viewType]||{});var newFields=Object.keys(record.data[name].fieldsInfo[viewType]||{});if(_.difference(newFields,knownFields).length){fieldNames.push(name);}
if(record.data[name].viewType==='default'){var fieldViews=fieldInfo.views||fieldInfo.fieldsInfo||{};var defaultFieldInfo=record.data[name].fieldsInfo.default;_.each(fieldViews,function(fieldView){_.each(fieldView.fieldsInfo,function(x2mFieldInfo){_.defaults(x2mFieldInfo,defaultFieldInfo);});});}}}
if(fieldType==='many2one'){if(JSON.stringify(record.data[name].context)!==JSON.stringify(fieldInfo.context)){fieldNames.push(name);}}}});var def;if(fieldNames.length){if(model.isNew(record.id)){def=model.generateDefaultValues(record.id,{fieldNames:fieldNames,viewType:viewType,});}else{def=model.reload(record.id,{fieldNames:fieldNames,keepChanges:true,viewType:viewType,});}}
return Promise.resolve(def).then(function(){const handle=record.id;return{state:model.get(handle),handle};});}
return this._super.apply(this,arguments);},_processArch:function(arch,fv){var self=this;utils.traverse(arch,function(node){return self._processNode(node,fv);});},_processField:function(viewType,field,attrs){var self=this;attrs.Widget=this._getFieldWidgetClass(viewType,field,attrs);_.each(attrs,function(value,key){if(key.startsWith('decoration-')){attrs.decorations=attrs.decorations||[];attrs.decorations.push({name:key,expression:pyUtils._getPyJSAST(value),});}});if(!_.isObject(attrs.options)){attrs.options=attrs.options?pyUtils.py_eval(attrs.options):{};}
if(attrs.on_change&&attrs.on_change!=="0"&&!field.onChange){field.onChange="1";}
if(attrs.modifiers.invisible===true||attrs.modifiers.column_invisible===true){attrs.__no_fetch=true;}
if(!_.isEmpty(field.views)){attrs.views={};_.each(field.views,function(innerFieldsView,viewType){viewType=viewType==='tree'?'list':viewType;attrs.views[viewType]=self._processFieldsView(innerFieldsView,viewType);});}
attrs.views=attrs.views||{};attrs.mode=attrs.mode==='tree'?'list':attrs.mode;if(!attrs.views.list&&attrs.views.tree){attrs.views.list=attrs.views.tree;}
if(field.type==='one2many'||field.type==='many2many'){if(attrs.Widget.prototype.useSubview){var mode=attrs.mode;if(!mode){if(attrs.views.list&&!attrs.views.kanban){mode='list';}else if(!attrs.views.list&&attrs.views.kanban){mode='kanban';}else{mode='list,kanban';}}
if(mode.indexOf(',')!==-1){mode=config.device.isMobile?'kanban':'list';}
attrs.mode=mode;if(mode in attrs.views){var view=attrs.views[mode];this._processSubViewAttrs(view,attrs);}}
if(attrs.Widget.prototype.fieldsToFetch){attrs.viewType='default';attrs.relatedFields=_.extend({},attrs.Widget.prototype.fieldsToFetch);attrs.fieldsInfo={default:_.mapObject(attrs.Widget.prototype.fieldsToFetch,function(){return{};}),};if(attrs.options.color_field){attrs.relatedFields[attrs.options.color_field]={type:'integer'};attrs.fieldsInfo.default[attrs.options.color_field]={};}}}
if(attrs.Widget.prototype.fieldDependencies){attrs.fieldDependencies=attrs.Widget.prototype.fieldDependencies;}
return attrs;},_processFieldsView:function(fieldsView,viewType){var fv=this._super.apply(this,arguments);viewType=viewType||this.viewType;fv.type=viewType;fv.fieldsInfo=Object.create(null);fv.fieldsInfo[viewType]=Object.create(null);this._processArch(fv.arch,fv);return fv;},_processNode:function(node,fv){if(typeof node==='string'){return false;}
if(!_.isObject(node.attrs.modifiers)){node.attrs.modifiers=node.attrs.modifiers?JSON.parse(node.attrs.modifiers):{};}
if(!_.isObject(node.attrs.options)&&node.tag==='button'){node.attrs.options=node.attrs.options?JSON.parse(node.attrs.options):{};}
if(node.tag==='field'){var viewType=fv.type;var fieldsInfo=fv.fieldsInfo[viewType];var fields=fv.viewFields;fieldsInfo[node.attrs.name]=this._processField(viewType,fields[node.attrs.name],node.attrs?_.clone(node.attrs):{});if(fieldsInfo[node.attrs.name].fieldDependencies){var deps=fieldsInfo[node.attrs.name].fieldDependencies;for(var dependency_name in deps){var dependency_dict={name:dependency_name,type:deps[dependency_name].type};if(!(dependency_name in fieldsInfo)){fieldsInfo[dependency_name]=_.extend({},dependency_dict,{options:deps[dependency_name].options||{},});}
if(!(dependency_name in fields)){fields[dependency_name]=dependency_dict;}
if(fv.fields&&!(dependency_name in fv.fields)){fv.fields[dependency_name]=dependency_dict;}}}
return false;}
return node.tag!=='arch';},_processSubViewAttrs:function(view,attrs){var defaultOrder=view.arch.attrs.default_order;if(defaultOrder){attrs.orderedBy=_.map(defaultOrder.split(','),function(order){order=order.trim().split(' ');return{name:order[0],asc:order[1]!=='desc'};});}else{var handleField=_.find(view.arch.children,function(child){return child.attrs&&child.attrs.widget==='handle';});if(handleField){attrs.orderedBy=[{name:handleField.attrs.name,asc:true}];}}
attrs.columnInvisibleFields={};_.each(view.arch.children,function(child){if(child.attrs&&child.attrs.modifiers){attrs.columnInvisibleFields[child.attrs.name]=child.attrs.modifiers.column_invisible||false;}});},});return BasicView;});;

/* /web/static/src/js/views/basic/basic_controller.js defined in bundle 'web.assets_backend' */
odoo.define('web.BasicController',function(require){"use strict";var AbstractController=require('web.AbstractController');var core=require('web.core');var Dialog=require('web.Dialog');var FieldManagerMixin=require('web.FieldManagerMixin');var TranslationDialog=require('web.TranslationDialog');var _t=core._t;var BasicController=AbstractController.extend(FieldManagerMixin,{events:Object.assign({},AbstractController.prototype.events,{'click .o_content':'_onContentClicked',}),custom_events:_.extend({},AbstractController.prototype.custom_events,FieldManagerMixin.custom_events,{discard_changes:'_onDiscardChanges',pager_changed:'_onPagerChanged',reload:'_onReload',resequence_records:'_onResequenceRecords',set_dirty:'_onSetDirty',load_optional_fields:'_onLoadOptionalFields',save_optional_fields:'_onSaveOptionalFields',translate:'_onTranslate',}),init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.archiveEnabled=params.archiveEnabled;this.confirmOnDelete=params.confirmOnDelete;this.hasButtons=params.hasButtons;FieldManagerMixin.init.call(this,this.model);this.mode=params.mode||'readonly';this.savingDef=Promise.resolve();this.discardingDef=null;this.viewId=params.viewId;},start:async function(){this.$el.toggleClass('o_cannot_create',!this.activeActions.create);await this._super(...arguments);},canBeDiscarded:function(recordID){var self=this;if(this.discardingDef){return this.discardingDef;}
if(!this.isDirty(recordID)){return Promise.resolve(false);}
var message=_t("The record has been modified, your changes will be discarded. Do you want to proceed?");this.discardingDef=new Promise(function(resolve,reject){var dialog=Dialog.confirm(self,message,{title:_t("Warning"),confirm_callback:()=>{resolve(true);self.discardingDef=null;},cancel_callback:()=>{reject();self.discardingDef=null;},});dialog.on('closed',self.discardingDef,reject);});return this.discardingDef;},canBeSaved:function(recordID){var fieldNames=this.renderer.canBeSaved(recordID||this.handle);if(fieldNames.length){this._notifyInvalidFields(fieldNames);return false;}
return true;},discardChanges:function(recordID,options){return Promise.all([this.mutex.getUnlockedDef(),this.savingDef]).then(this._discardChanges.bind(this,recordID||this.handle,options));},getSelectedIds:function(){return[];},isDirty:function(recordID){return this.model.isDirty(recordID||this.handle);},saveRecord:function(recordID,options){var self=this;var unlockedMutex=this.mutex.getUnlockedDef().then(function(){return self.renderer.commitChanges(recordID||self.handle);}).then(function(){return self.mutex.exec(self._saveRecord.bind(self,recordID,options));});this.savingDef=new Promise(function(resolve){unlockedMutex.then(resolve).guardedCatch(resolve);});return unlockedMutex;},update:async function(params,options){this.mode=params.mode||this.mode;return this._super(params,options);},reload:function(params){if(params&&params.controllerState){if(params.controllerState.currentId){params.currentId=params.controllerState.currentId;}
params.ids=params.controllerState.resIds;}
return this._super.apply(this,arguments);},_abandonRecord:function(recordID){recordID=recordID||this.handle;if(recordID===this.handle){this.trigger_up('history_back');}else{this.model.removeLine(recordID);}},_applyChanges:function(dataPointID,changes,event){var _super=FieldManagerMixin._applyChanges.bind(this);return this.mutex.exec(function(){return _super(dataPointID,changes,event);});},_archive:async function(ids,archive){if(ids.length===0){return Promise.resolve();}
if(archive){await this.model.actionArchive(ids,this.handle);}else{await this.model.actionUnarchive(ids,this.handle);}
return this.update({},{reload:false});},_callButtonAction:function(attrs,record){record=record||this.model.get(this.handle);const actionData=Object.assign({},attrs,{context:record.getContext({additionalContext:attrs.context||{}})});const recordData={context:record.getContext(),currentID:record.data.id,model:record.model,resIDs:record.res_ids,};return this._executeButtonAction(actionData,recordData);},_confirmChange:function(id,fields,e){if(e.name==='discard_changes'&&e.target.reset){return e.target.reset(this.model.get(e.target.dataPointID),e,true);}
var state=this.model.get(this.handle);return this.renderer.confirmChange(state,id,fields,e);},_confirmSaveNewRecord:function(){var self=this;var def=new Promise(function(resolve,reject){var message=_t("You need to save this new record before editing the translation. Do you want to proceed?");var dialog=Dialog.confirm(self,message,{title:_t("Warning"),confirm_callback:resolve.bind(self,true),cancel_callback:reject,});dialog.on('closed',self,reject);});return def;},_deleteRecords:function(ids){var self=this;function doIt(){return self.model.deleteRecords(ids,self.modelName).then(self._onDeletedRecords.bind(self,ids));}
if(this.confirmOnDelete){const message=ids.length>1?_t("Are you sure you want to delete these records?"):_t("Are you sure you want to delete this record?");Dialog.confirm(this,message,{confirm_callback:doIt});}else{doIt();}},_disableButtons:function(){if(this.$buttons){this.$buttons.find('button').attr('disabled',true);}},_discardChanges:function(recordID,options){var self=this;recordID=recordID||this.handle;options=options||{};return this.canBeDiscarded(recordID).then(function(needDiscard){if(options.readonlyIfRealDiscard&&!needDiscard){return;}
self.model.discardChanges(recordID);if(options.noAbandon){return;}
if(self.model.canBeAbandoned(recordID)){self._abandonRecord(recordID);return;}
return self._confirmSave(recordID);});},_enableButtons:function(){if(this.$buttons){this.$buttons.find('button').removeAttr('disabled');}},async _executeButtonAction(actionData,recordData){const prom=new Promise((resolve,reject)=>{this.trigger_up('execute_action',{action_data:actionData,env:recordData,on_closed:()=>this.isDestroyed()?Promise.resolve():this.reload(),on_success:resolve,on_fail:()=>this.update({},{reload:false}).then(reject).guardedCatch(reject)});});return this.alive(prom);},exportState:function(){var state=this._super.apply(this,arguments);var env=this.model.get(this.handle,{env:true});return _.extend(state,{currentId:env.currentId,resIds:env.ids,});},_getOptionalFieldsLocalStorageKey:function(keyParts){keyParts.model=this.modelName;keyParts.viewType=this.viewType;keyParts.viewId=this.viewId;var parts=['model','viewType','viewId','relationalField','subViewType','subViewId',];var viewIdentifier=parts.reduce(function(identifier,partName){if(partName in keyParts){return identifier+','+keyParts[partName];}
return identifier;},'optional_fields');viewIdentifier=keyParts.fields.sort(this._nameSortComparer).reduce(function(identifier,field){return identifier+','+field.name;},viewIdentifier);return viewIdentifier;},_getPagingInfo:function(state){const isGrouped=state.groupedBy&&state.groupedBy.length;return{currentMinimum:(isGrouped?state.groupsOffset:state.offset)+1,limit:isGrouped?state.groupsLimit:state.limit,size:isGrouped?state.groupsCount:state.count,};},_getActionMenuItems:function(state){return{activeIds:this.getSelectedIds(),context:state.getContext(),};},_nameSortComparer:function(left,right){return left.name<right.name?-1:1;},_notifyInvalidFields:function(invalidFields){var record=this.model.get(this.handle,{raw:true});var fields=record.fields;var warnings=invalidFields.map(function(fieldName){var fieldStr=fields[fieldName].string;return _.str.sprintf('<li>%s</li>',_.escape(fieldStr));});warnings.unshift('<ul>');warnings.push('</ul>');this.do_warn(_t("Invalid fields:"),warnings.join(''));},_onDeletedRecords:function(ids){this.update({});},_saveRecord:function(recordID,options){recordID=recordID||this.handle;options=_.defaults(options||{},{stayInEdit:false,reload:true,savePoint:false,});if(this.canBeSaved(recordID)){var self=this;var saveDef=this.model.save(recordID,{reload:options.reload,savePoint:options.savePoint,viewType:options.viewType,});if(!options.stayInEdit){saveDef=saveDef.then(function(fieldNames){var def=fieldNames.length?self._confirmSave(recordID):self._setMode('readonly',recordID);return def.then(function(){return fieldNames;});});}
return saveDef;}else{return Promise.reject("SaveRecord: this.canBeSave is false");}},_setMode:function(mode,recordID){if((recordID||this.handle)===this.handle){return this.update({mode:mode},{reload:false}).then(function(){core.bus.trigger('DOM_updated');});}
return Promise.resolve();},_shouldBounceOnClick:function(){return false;},_updateControlPanel:function(newProps={}){const state=this.model.get(this.handle);const props=Object.assign(newProps,{actionMenus:this._getActionMenuItems(state),pager:this._getPagingInfo(state),title:this.getTitle(),});return this.updateControlPanel(props);},_onContentClicked(ev){if(this.$buttons&&this._shouldBounceOnClick(ev.target)){this.$buttons.find('.btn-primary:visible:first').odooBounce();}},_onDiscardChanges:function(ev){var self=this;ev.stopPropagation();var recordID=ev.data.recordID;this._discardChanges(recordID).then(function(){self._confirmChange(recordID,[ev.data.fieldName],ev).then(ev.data.onSuccess).guardedCatch(ev.data.onSuccess);}).guardedCatch(ev.data.onFailure);},_onFieldChanged:function(ev){if(this.mode==='readonly'){ev.data.force_save=true;}
FieldManagerMixin._onFieldChanged.apply(this,arguments);},_onPagerChanged:async function(ev){ev.stopPropagation();const{currentMinimum,limit}=ev.data;const state=this.model.get(this.handle,{raw:true});const reloadParams=state.groupedBy&&state.groupedBy.length?{groupsLimit:limit,groupsOffset:currentMinimum-1,}:{limit,offset:currentMinimum-1,};await this.reload(reloadParams);if(state.limit===limit){this.trigger_up('scrollTo',{top:0});}},_onReload:function(ev){ev.stopPropagation();var data=ev&&ev.data||{};var handle=data.db_id;var prom;if(handle){prom=this.model.reload(handle).then(this._confirmSave.bind(this,handle));}else{prom=this.reload({fieldNames:data.fieldNames,keepChanges:data.keepChanges||false,});}
prom.then(ev.data.onSuccess).guardedCatch(ev.data.onFailure);},_onResequenceRecords:function(ev){ev.stopPropagation();this.trigger_up('mutexify',{action:async()=>{let state=this.model.get(this.handle);const resIDs=ev.data.recordIds.map(recordID=>state.data.find(d=>d.id===recordID).res_id);const options={offset:ev.data.offset,field:ev.data.handleField,};await this.model.resequence(this.modelName,resIDs,this.handle,options);this._updateControlPanel();state=this.model.get(this.handle);return this._updateRendererState(state,{noRender:true});},});},_onLoadOptionalFields:function(ev){var res=this.call('local_storage','getItem',this._getOptionalFieldsLocalStorageKey(ev.data.keyParts));ev.data.callback(res);},_onSaveOptionalFields:function(ev){this.call('local_storage','setItem',this._getOptionalFieldsLocalStorageKey(ev.data.keyParts),ev.data.optionalColumnsEnabled);},_onSetDirty:function(ev){ev.stopPropagation();this.model.setDirty(ev.data.dataPointID);},_onTranslate:async function(ev){ev.stopPropagation();if(this.model.isNew(ev.data.id)){await this._confirmSaveNewRecord();var updatedFields=await this.saveRecord(ev.data.id,{stayInEdit:true});await this._confirmChange(ev.data.id,updatedFields,ev);}
var record=this.model.get(ev.data.id,{raw:true});var res_id=record.res_id||record.res_ids[0];var result=await this._rpc({route:'/web/dataset/call_button',params:{model:'ir.translation',method:'translate_fields',args:[record.model,res_id,ev.data.fieldName],kwargs:{context:record.getContext()},}});this.translationDialog=new TranslationDialog(this,{domain:result.domain,searchName:result.context.search_default_name,fieldName:ev.data.fieldName,userLanguageValue:ev.target.value||'',dataPointID:record.id,isComingFromTranslationAlert:ev.data.isComingFromTranslationAlert,isText:result.context.translation_type==='text',showSrc:result.context.translation_show_src,});return this.translationDialog.open();},});return BasicController;});;

/* /web/static/src/js/views/basic/basic_renderer.js defined in bundle 'web.assets_backend' */
odoo.define('web.BasicRenderer',function(require){"use strict";var AbstractRenderer=require('web.AbstractRenderer');var config=require('web.config');var core=require('web.core');var dom=require('web.dom');const session=require('web.session');const utils=require('web.utils');var widgetRegistry=require('web.widget_registry');const{WidgetAdapterMixin}=require('web.OwlCompatibility');const FieldWrapper=require('web.FieldWrapper');var qweb=core.qweb;const _t=core._t;var BasicRenderer=AbstractRenderer.extend(WidgetAdapterMixin,{custom_events:{navigation_move:'_onNavigationMove',},init:function(parent,state,params){this._super.apply(this,arguments);this.activeActions=params.activeActions;this.viewType=params.viewType;this.mode=params.mode||'readonly';this.widgets=[];this.handleField=null;},destroy:function(){this._super.apply(this,arguments);WidgetAdapterMixin.destroy.call(this);},on_attach_callback:function(){this._isInDom=true;for(const handle in this.allFieldWidgets){this.allFieldWidgets[handle].forEach(widget=>{if(!utils.isComponent(widget.constructor)&&widget.on_attach_callback){widget.on_attach_callback();}});}
this.widgets.forEach(widget=>{if(widget.on_attach_callback){widget.on_attach_callback();}});WidgetAdapterMixin.on_attach_callback.call(this);},on_detach_callback:function(){this._isInDom=false;for(const handle in this.allFieldWidgets){this.allFieldWidgets[handle].forEach(widget=>{if(!utils.isComponent(widget.constructor)&&widget.on_detach_callback){widget.on_detach_callback();}});}
this.widgets.forEach(widget=>{if(widget.on_detach_callback){widget.on_detach_callback();}});WidgetAdapterMixin.on_detach_callback.call(this);},canBeSaved:function(recordID){var self=this;var invalidFields=[];_.each(this.allFieldWidgets[recordID],function(widget){var canBeSaved=self._canWidgetBeSaved(widget);if(!canBeSaved){invalidFields.push(widget.name);}
if(widget.el){widget.$el.toggleClass('o_field_invalid',!canBeSaved);widget.$el.attr('aria-invalid',!canBeSaved);}});return invalidFields;},commitChanges:function(recordID){var defs=_.map(this.allFieldWidgets[recordID],function(widget){return widget.commitChanges();});return Promise.all(defs);},confirmChange:function(state,id,fields,ev){var self=this;this._setState(state);var record=this._getRecord(id);if(!record){return this._render().then(_.constant([]));}
_.invoke(this.widgets,'updateState',state);var defs=[];_.each(this.allFieldWidgets[id],function(widget){var fieldChanged=_.contains(fields,widget.name);if(fieldChanged||widget.resetOnAnyFieldChange){defs.push(widget.reset(record,ev,fieldChanged));}});defs.push(this._updateAllModifiers(record));return Promise.all(defs).then(function(){return _.filter(self.allFieldWidgets[id],function(widget){var fieldChanged=_.contains(fields,widget.name);return fieldChanged||widget.resetOnAnyFieldChange;});});},focusField:function(id,fieldName,offset){this.editRecord(id);if(typeof offset==="number"){var field=_.findWhere(this.allFieldWidgets[id],{name:fieldName});dom.setSelectionRange(field.getFocusableElement().get(0),{start:offset,end:offset});}},_activateFieldWidget:function(record,currentIndex,options){options=options||{};_.defaults(options,{inc:1,wrap:false});currentIndex=Math.max(0,currentIndex);var recordWidgets=this.allFieldWidgets[record.id]||[];for(var i=0;i<recordWidgets.length;i++){var activated=recordWidgets[currentIndex].activate({event:options.event,noAutomaticCreate:options.noAutomaticCreate||false});if(activated){return currentIndex;}
currentIndex+=options.inc;if(currentIndex>=recordWidgets.length){if(options.wrap){currentIndex-=recordWidgets.length;}else{return-1;}}else if(currentIndex<0){if(options.wrap){currentIndex+=recordWidgets.length;}else{return-1;}}}
return-1;},_activateNextFieldWidget:function(record,currentIndex,options){currentIndex=(currentIndex+1)%(this.allFieldWidgets[record.id]||[]).length;return this._activateFieldWidget(record,currentIndex,_.extend({inc:1},options));},_activatePreviousFieldWidget:function(record,currentIndex){currentIndex=currentIndex?(currentIndex-1):((this.allFieldWidgets[record.id]||[]).length-1);return this._activateFieldWidget(record,currentIndex,{inc:-1});},_addFieldTooltip:function(widget,$node){$node=$node.length?$node:widget.$el;$node.tooltip(this._getTooltipOptions(widget));},_applyModifiers:function(modifiersData,record,element){var self=this;var modifiers=modifiersData.evaluatedModifiers[record.id]||{};if(element){_apply(element);}else{_.each(_.clone(modifiersData.elementsByRecord[record.id]),_apply);}
function _apply(element){if('readonly'in modifiers&&element.widget){var mode=modifiers.readonly?'readonly':modifiersData.baseModeByRecord[record.id];if(mode!==element.widget.mode){self._rerenderFieldWidget(element.widget,record,{keepBaseMode:true,mode:mode,});return;}}
element.$el.toggleClass("o_invisible_modifier",!!modifiers.invisible);element.$el.toggleClass("o_readonly_modifier",!!modifiers.readonly);element.$el.toggleClass("o_required_modifier",!!modifiers.required);if(element.widget&&element.widget.updateModifiersValue){element.widget.updateModifiersValue(modifiers);}
if(element.callback){element.callback(element,modifiers,record);}}},_canWidgetBeSaved:function(widget){var modifiers=this._getEvaluatedModifiers(widget.__node,widget.record);return widget.isValid()&&(widget.isSet()||!modifiers.required);},_destroyFieldWidget:function(recordID,widget){var recordWidgets=this.allFieldWidgets[recordID];var index=recordWidgets.indexOf(widget);if(index>=0){recordWidgets.splice(index,1);}
this._unregisterModifiersElement(widget.__node,recordID,widget);widget.destroy();return index;},_getEvaluatedModifiers:function(node,record){var element=this._getModifiersData(node);if(!element){return{};}
return element.evaluatedModifiers[record.id]||{};},_getModifiersData:function(node){return _.findWhere(this.allModifiersData,{node:node});},_getRecord:function(recordId){return null;},_getTooltipOptions:function(widget){return{title:function(){let help=widget.attrs.help||widget.field.help||'';if(session.display_switch_company_menu&&widget.field.company_dependent){help+=(help?'\n\n':'')+_t('Values set here are company-specific.');}
const debug=config.isDebug();if(help||debug){return qweb.render('WidgetLabel.tooltip',{debug,help,widget});}}};},_handleAttributes:function($el,node){if($el.is('button')){return;}
if(node.attrs.class){$el.addClass(node.attrs.class);}
if(node.attrs.style){$el.attr('style',node.attrs.style);}
if(node.attrs.placeholder){$el.attr('placeholder',node.attrs.placeholder);}},_hasContent:function(){return this.state.count!==0&&(!('isSample'in this.state)||!this.state.isSample);},_moveRecord:function(recordId,toIndex){var self=this;var records=this.state.data;var record=_.findWhere(records,{id:recordId});var fromIndex=records.indexOf(record);var lowerIndex=Math.min(fromIndex,toIndex);var upperIndex=Math.max(fromIndex,toIndex)+1;var order=_.findWhere(this.state.orderedBy,{name:this.handleField});var asc=!order||order.asc;var reorderAll=false;var sequence=(asc?-1:1)*Infinity;_.each(records,function(record,index){if((index<lowerIndex||index>=upperIndex)&&((asc&&sequence>=record.data[self.handleField])||(!asc&&sequence<=record.data[self.handleField]))){reorderAll=true;}
sequence=record.data[self.handleField];});if(reorderAll){records=_.without(records,record);records.splice(toIndex,0,record);}else{records=records.slice(lowerIndex,upperIndex);records=_.without(records,record);if(fromIndex>toIndex){records.unshift(record);}else{records.push(record);}}
var sequences=_.pluck(_.pluck(records,'data'),this.handleField);var recordIds=_.pluck(records,'id');if(!asc){recordIds.reverse();}
this.trigger_up('resequence_records',{handleField:this.handleField,offset:_.min(sequences),recordIds:recordIds,});},_postProcessField:function(widget,node){this._handleAttributes(widget.$el,node);},_registerModifiers:function(node,record,element,options){options=options||{};var modifiersData=this._getModifiersData(node);if(!modifiersData){var modifiers=node.attrs.modifiers||{};modifiersData={node:node,modifiers:modifiers,evaluatedModifiers:{},elementsByRecord:{},baseModeByRecord:{},};if(!_.isEmpty(modifiers)){this.allModifiersData.push(modifiersData);}}
if(!modifiersData.baseModeByRecord[record.id]||!options.keepBaseMode){modifiersData.baseModeByRecord[record.id]=options.mode||this.mode;}
if(!modifiersData.evaluatedModifiers[record.id]){try{modifiersData.evaluatedModifiers[record.id]=record.evalModifiers(modifiersData.modifiers);}catch(e){throw new Error(_.str.sprintf("While parsing modifiers for %s%s: %s",node.tag,node.tag==='field'?' '+node.attrs.name:'',e.message));}}
if(element){var newElement={};if(element instanceof jQuery){newElement.$el=element;}else{newElement.widget=element;newElement.$el=element.$el;}
if(options&&options.callback){newElement.callback=options.callback;}
if(!modifiersData.elementsByRecord[record.id]){modifiersData.elementsByRecord[record.id]=[];}
modifiersData.elementsByRecord[record.id].push(newElement);this._applyModifiers(modifiersData,record,newElement);}
return modifiersData.evaluatedModifiers[record.id];},async _render(){const oldAllFieldWidgets=this.allFieldWidgets;this.allFieldWidgets={};this.allModifiersData=[];const oldWidgets=this.widgets;this.widgets=[];await this._super(...arguments);for(const id in oldAllFieldWidgets){for(const widget of oldAllFieldWidgets[id]){widget.destroy();}}
for(const widget of oldWidgets){widget.destroy();}
if(this._isInDom){for(const handle in this.allFieldWidgets){this.allFieldWidgets[handle].forEach(widget=>{if(widget.on_attach_callback){widget.on_attach_callback();}});}
this.widgets.forEach(widget=>{if(widget.on_attach_callback){widget.on_attach_callback();}});}},_renderFieldWidget:function(node,record,options){options=options||{};var fieldName=node.attrs.name;var mode=options.mode||this.mode;var modifiers=this._registerModifiers(node,record,null,options);var Widget=record.fieldsInfo[this.viewType][fieldName].Widget;const legacy=!(Widget.prototype instanceof owl.Component);const widgetOptions={mode:modifiers.readonly?'readonly':mode,viewType:this.viewType,};let widget;if(legacy){widget=new Widget(this,fieldName,record,widgetOptions);}else{widget=new FieldWrapper(this,Widget,{fieldName,record,options:widgetOptions,});}
if(this.allFieldWidgets[record.id]===undefined){this.allFieldWidgets[record.id]=[];}
this.allFieldWidgets[record.id].push(widget);widget.__node=node;var $el=$('<div>');let def;if(legacy){def=widget._widgetRenderAndInsert(function(){});}else{def=widget.mount(document.createDocumentFragment());}
this.defs.push(def);var self=this;def.then(function(){widget.$el.addClass($el.attr('class'));$el.replaceWith(widget.$el);self._registerModifiers(node,record,widget,{callback:function(element,modifiers,record){element.$el.toggleClass('o_field_empty',!!(record.data.id&&(modifiers.readonly||mode==='readonly')&&element.widget.isEmpty()));},keepBaseMode:!!options.keepBaseMode,mode:mode,});self._postProcessField(widget,node);});return $el;},_renderWidget:function(record,node){var Widget=widgetRegistry.get(node.attrs.name);var widget=new Widget(this,record,node);this.widgets.push(widget);var def=widget._widgetRenderAndInsert(function(){});this.defs.push(def);var $el=$('<div>');var self=this;def.then(function(){self._handleAttributes(widget.$el,node);self._registerModifiers(node,record,widget);widget.$el.addClass('o_widget');$el.replaceWith(widget.$el);});return $el;},_rerenderFieldWidget:function(widget,record,options){var $el=this._renderFieldWidget(widget.__node,record,options);const recordWidgets=this.allFieldWidgets[record.id];const newWidget=recordWidgets[recordWidgets.length-1];const def=this.defs[this.defs.length-1];const $div=$('<div>');$div.append($el);def.then(()=>{widget.$el.replaceWith($div.children());recordWidgets.splice(recordWidgets.indexOf(newWidget),1);var oldIndex=this._destroyFieldWidget(record.id,widget);recordWidgets.splice(oldIndex,0,newWidget);if(this._isInDom&&newWidget.on_attach_callback){newWidget.on_attach_callback();}});},_unregisterModifiersElement:function(node,recordID,element){var modifiersData=this._getModifiersData(node);if(modifiersData){var elements=modifiersData.elementsByRecord[recordID];var index=_.findIndex(elements,function(oldElement){return oldElement.widget===element||oldElement.$el[0]===element[0];});if(index>=0){elements.splice(index,1);}}},_updateAllModifiers:function(record){var self=this;var defs=[];this.defs=defs;_.each(this.allModifiersData,function(modifiersData){if(record.id in modifiersData.evaluatedModifiers){modifiersData.evaluatedModifiers[record.id]=record.evalModifiers(modifiersData.modifiers);self._applyModifiers(modifiersData,record);}});delete this.defs;return Promise.all(defs);},_onNavigationMove:function(ev){},});return BasicRenderer;});;

/* /web/static/src/js/control_panel/comparison_menu.js defined in bundle 'web.assets_backend' */
odoo.define("web.ComparisonMenu",function(require){"use strict";const DropdownMenu=require("web.DropdownMenu");const{FACET_ICONS}=require("web.searchUtils");const{useModel}=require("web/static/src/js/model.js");class ComparisonMenu extends DropdownMenu{constructor(){super(...arguments);this.model=useModel('searchModel');}
get icon(){return FACET_ICONS.comparison;}
get items(){return this.model.get('filters',f=>f.type==='comparison');}
get title(){return this.env._t("Comparison");}
_onItemSelected(ev){ev.stopPropagation();const{item}=ev.detail;this.model.dispatch("toggleComparison",item.id);}}
return ComparisonMenu;});;

/* /web/static/src/js/control_panel/control_panel.js defined in bundle 'web.assets_backend' */
odoo.define('web.ControlPanel',function(require){"use strict";const ActionMenus=require('web.ActionMenus');const ComparisonMenu=require('web.ComparisonMenu');const ActionModel=require('web/static/src/js/views/action_model.js');const FavoriteMenu=require('web.FavoriteMenu');const FilterMenu=require('web.FilterMenu');const GroupByMenu=require('web.GroupByMenu');const patchMixin=require('web.patchMixin');const Pager=require('web.Pager');const SearchBar=require('web.SearchBar');const{useModel}=require('web/static/src/js/model.js');const{Component,hooks}=owl;const{useRef,useSubEnv}=hooks;function getAdditionalContent(props){const additionalContent={};if('cp_content'in props){const content=props.cp_content||{};if('$buttons'in content){additionalContent.buttons=content.$buttons;}
if('$searchview'in content){additionalContent.searchView=content.$searchview;}
if('$pager'in content){additionalContent.pager=content.$pager;}
if('$searchview_buttons'in content){additionalContent.searchViewButtons=content.$searchview_buttons;}}
return additionalContent;}
class ControlPanel extends Component{constructor(){super(...arguments);this.additionalContent=getAdditionalContent(this.props);useSubEnv({action:this.props.action,searchModel:this.props.searchModel,view:this.props.view,});if(this.env.searchModel){this.model=useModel('searchModel');}
this.contentRefs={buttons:useRef('buttons'),pager:useRef('pager'),searchView:useRef('searchView'),searchViewButtons:useRef('searchViewButtons'),};this.fields=this._formatFields(this.props.fields);}
mounted(){this._attachAdditionalContent();}
patched(){this._attachAdditionalContent();}
async willUpdateProps(nextProps){if('view'in nextProps){this.env.view=nextProps.view;}
if('fields'in nextProps){this.fields=this._formatFields(nextProps.fields);}
this.additionalContent=getAdditionalContent(nextProps);}
_attachAdditionalContent(){for(const key in this.additionalContent){if(this.additionalContent[key]&&this.additionalContent[key].length){const target=this.contentRefs[key].el;if(target){target.innerHTML="";target.append(...this.additionalContent[key]);}}}}
_formatFields(fields){const formattedFields={};for(const fieldName in fields){formattedFields[fieldName]=Object.assign({description:fields[fieldName].string,name:fieldName,},fields[fieldName]);}
return formattedFields;}}
ControlPanel.modelExtension="ControlPanel";ControlPanel.components={SearchBar,ActionMenus,Pager,ComparisonMenu,FilterMenu,GroupByMenu,FavoriteMenu,};ControlPanel.defaultProps={breadcrumbs:[],fields:{},searchMenuTypes:[],views:[],withBreadcrumbs:true,withSearchBar:true,};ControlPanel.props={action:Object,breadcrumbs:Array,searchModel:ActionModel,cp_content:{type:Object,optional:1},fields:Object,pager:{validate:p=>typeof p==='object'||p===null,optional:1},searchMenuTypes:Array,actionMenus:{validate:s=>typeof s==='object'||s===null,optional:1},title:{type:String,optional:1},view:{type:Object,optional:1},views:Array,withBreadcrumbs:Boolean,withSearchBar:Boolean,};ControlPanel.template='web.ControlPanel';return patchMixin(ControlPanel);});;

/* /web/static/src/js/control_panel/control_panel_model_extension.js defined in bundle 'web.assets_backend' */
odoo.define("web/static/src/js/control_panel/control_panel_model_extension.js",function(require){"use strict";const ActionModel=require("web/static/src/js/views/action_model.js");const Domain=require('web.Domain');const pyUtils=require('web.py_utils');const{DEFAULT_INTERVAL,DEFAULT_PERIOD,getComparisonOptions,getIntervalOptions,getPeriodOptions,constructDateDomain,rankInterval,yearSelected}=require('web.searchUtils');const FAVORITE_PRIVATE_GROUP=1;const FAVORITE_SHARED_GROUP=2;const DISABLE_FAVORITE="search_disable_custom_filters";let filterId=1;let groupId=1;let groupNumber=0;class ControlPanelModelExtension extends ActionModel.Extension{constructor(){super(...arguments);this.actionContext=Object.assign({},this.config.context);this.searchMenuTypes=this.config.searchMenuTypes||[];this.favoriteFilters=this.config.favoriteFilters||[];this.fields=this.config.fields||{};this.searchDefaults={};for(const key in this.actionContext){const match=/^search_default_(.*)$/.exec(key);if(match){const val=this.actionContext[key];if(val){this.searchDefaults[match[1]]=val;}
delete this.actionContext[key];}}
this.labelPromises=[];this.referenceMoment=moment();this.optionGenerators=getPeriodOptions(this.referenceMoment);this.intervalOptions=getIntervalOptions();this.comparisonOptions=getComparisonOptions();}
get(property,...args){switch(property){case"context":return this.getContext();case"domain":return this.getDomain();case"facets":return this._getFacets();case"filters":return this._getFilters(...args);case"groupBy":return this.getGroupBy();case"orderedBy":return this.getOrderedBy();case"timeRanges":return this.getTimeRanges();}}
async load(){await Promise.all(this.labelPromises);}
prepareState(){Object.assign(this.state,{filters:{},query:[],});if(this.config.withSearchBar!==false){this._addFilters();this._activateDefaultFilters();}}
get activeComparison(){return this.state.query.find(queryElem=>queryElem.type==='comparison');}
addAutoCompletionValues({filterId,label,value,operator}){const queryElem=this.state.query.find(queryElem=>queryElem.filterId===filterId&&queryElem.value===value&&queryElem.operator===operator);if(!queryElem){const{groupId}=this.state.filters[filterId];this.state.query.push({filterId,groupId,label,value,operator});}else{queryElem.label=label;}}
clearQuery(){this.state.query=[];}
async createNewFavorite(preFilter){const preFavorite=await this._saveQuery(preFilter);this.clearQuery();const filter=Object.assign(preFavorite,{groupId,id:filterId,});this.state.filters[filterId]=filter;this.state.query.push({groupId,filterId});groupId++;filterId++;}
createNewFilters(prefilters){if(!prefilters.length){return[];}
const newFilterIdS=[];prefilters.forEach(preFilter=>{const filter=Object.assign(preFilter,{groupId,groupNumber,id:filterId,type:'filter',});this.state.filters[filterId]=filter;this.state.query.push({groupId,filterId});newFilterIdS.push(filterId);filterId++;});groupId++;groupNumber++;return newFilterIdS;}
createNewGroupBy(field){const groupBy=Object.values(this.state.filters).find(f=>f.type==='groupBy');const filter={description:field.string||field.name,fieldName:field.name,fieldType:field.type,groupId:groupBy?groupBy.groupId:groupId++,groupNumber,id:filterId,type:'groupBy',};this.state.filters[filterId]=filter;if(['date','datetime'].includes(field.type)){filter.hasOptions=true;filter.defaultOptionId=DEFAULT_INTERVAL;this.toggleFilterWithOptions(filterId);}else{this.toggleFilter(filterId);}
groupNumber++;filterId++;}
deactivateGroup(groupId){this.state.query=this.state.query.filter(queryElem=>queryElem.groupId!==groupId);this._checkComparisonStatus();}
async deleteFavorite(filterId){const{serverSideId}=this.state.filters[filterId];await this.env.dataManager.delete_filter(serverSideId);const index=this.state.query.findIndex(queryElem=>queryElem.filterId===filterId);delete this.state.filters[filterId];if(index>=0){this.state.query.splice(index,1);}}
getContext(){const groups=this._getGroups();return this._getContext(groups);}
getDomain(){const groups=this._getGroups();const userContext=this.env.session.user_context;try{return Domain.prototype.stringToArray(this._getDomain(groups),userContext);}catch(err){throw new Error(`${this.env._t("Control panel model extension failed to evaluate domain")}:/n${JSON.stringify(err)}`);}}
getGroupBy(){const groups=this._getGroups();return this._getGroupBy(groups);}
getOrderedBy(){const groups=this._getGroups();return this._getOrderedBy(groups);}
getTimeRanges(){const requireEvaluation=true;return this._getTimeRanges(requireEvaluation);}
search(){}
toggleComparison(filterId){const{groupId,dateFilterId}=this.state.filters[filterId];const queryElem=this.state.query.find(queryElem=>queryElem.type==='comparison'&&queryElem.filterId===filterId);this.state.query=this.state.query.filter(queryElem=>queryElem.type!=='comparison');if(!queryElem){this.state.query.push({groupId,filterId,dateFilterId,type:'comparison',});}}
toggleFilter(filterId){const index=this.state.query.findIndex(queryElem=>queryElem.filterId===filterId);if(index>=0){this.state.query.splice(index,1);}else{const{groupId,type}=this.state.filters[filterId];if(type==='favorite'){this.state.query=[];}
this.state.query.push({groupId,filterId});}}
toggleFilterWithOptions(filterId,optionId){const filter=this.state.filters[filterId];optionId=optionId||filter.defaultOptionId;const option=this.optionGenerators.find(o=>o.id===optionId);const index=this.state.query.findIndex(queryElem=>queryElem.filterId===filterId&&queryElem.optionId===optionId);if(index>=0){this.state.query.splice(index,1);if(filter.type==='filter'&&!yearSelected(this._getSelectedOptionIds(filterId))){this.state.query=this.state.query.filter(queryElem=>queryElem.filterId!==filterId);}}else{this.state.query.push({groupId:filter.groupId,filterId,optionId});if(filter.type==='filter'&&!yearSelected(this._getSelectedOptionIds(filterId))){this.state.query.push({groupId:filter.groupId,filterId,optionId:option.defaultYearId,});}}
if(filter.type==='filter'){this._checkComparisonStatus();}}
_activateDefaultFilters(){if(this.defaultFavoriteId){this.toggleFilter(this.defaultFavoriteId);}else{Object.values(this.state.filters).filter((f)=>f.isDefault&&f.type!=='favorite').sort((f1,f2)=>(f1.defaultRank||100)-(f2.defaultRank||100)).forEach(f=>{if(f.hasOptions){this.toggleFilterWithOptions(f.id);}else if(f.type==='field'){let{operator,label,value}=f.defaultAutocompleteValue;this.addAutoCompletionValues({filterId:f.id,value,operator,label,});}else{this.toggleFilter(f.id);}});}}
_addFilters(){this._createGroupOfFavorites();this._createGroupOfFiltersFromArch();this._createGroupOfDynamicFilters();}
_checkComparisonStatus(){const activeComparison=this.activeComparison;if(!activeComparison){return;}
const{dateFilterId}=activeComparison;const dateFilterIsActive=this.state.query.some(queryElem=>queryElem.filterId===dateFilterId);if(!dateFilterIsActive){this.state.query=this.state.query.filter(queryElem=>queryElem.type!=='comparison');}}
_computeTimeRanges(comparisonFilter){const{filterId}=this.activeComparison;if(filterId!==comparisonFilter.id){return null;}
const{dateFilterId,comparisonOptionId}=comparisonFilter;const{fieldName,fieldType,description:dateFilterDescription,}=this.state.filters[dateFilterId];const selectedOptionIds=this._getSelectedOptionIds(dateFilterId);const{domain:range,description:rangeDescription}=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedOptionIds,);const{domain:comparisonRange,description:comparisonRangeDescription,}=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedOptionIds,comparisonOptionId);return{comparisonId:comparisonOptionId,fieldName,fieldDescription:dateFilterDescription,range,rangeDescription,comparisonRange,comparisonRangeDescription,};}
_createGroupOfComparisons(dateFilters){const preFilters=[];for(const dateFilter of dateFilters){for(const comparisonOption of this.comparisonOptions){const{id:dateFilterId,description}=dateFilter;const preFilter={type:'comparison',comparisonOptionId:comparisonOption.id,description:`${description}: ${comparisonOption.description}`,dateFilterId,};preFilters.push(preFilter);}}
this._createGroupOfFilters(preFilters);}
_createGroupOfDynamicFilters(){const dynamicFilters=this.config.dynamicFilters||[];const pregroup=dynamicFilters.map(filter=>{return{description:filter.description,domain:JSON.stringify(filter.domain),isDefault:true,type:'filter',};});this._createGroupOfFilters(pregroup);}
_createGroupOfFavorites(){const activateFavorite=DISABLE_FAVORITE in this.actionContext?!this.actionContext[DISABLE_FAVORITE]:true;this.favoriteFilters.forEach(irFilter=>{const favorite=this._irFilterToFavorite(irFilter);this._createGroupOfFilters([favorite]);if(activateFavorite&&favorite.isDefault){this.defaultFavoriteId=favorite.id;}});}
_createGroupOfFilters(pregroup){pregroup.forEach(preFilter=>{const filter=Object.assign(preFilter,{groupId,id:filterId});this.state.filters[filterId]=filter;if(!this.defaultFavoriteId&&filter.isDefault&&filter.type==='field'){this._prepareDefaultLabel(filter);}
filterId++;});groupId++;}
_createGroupOfFiltersFromArch(){const preFilters=this.config.archNodes.reduce((preFilters,child)=>{if(child.tag==='group'){return[...preFilters,...child.children.map(c=>this._evalArchChild(c))];}else{return[...preFilters,this._evalArchChild(child)];}},[]);preFilters.push({tag:'separator'});let currentTag;let currentGroup=[];let pregroupOfGroupBys=[];preFilters.forEach(preFilter=>{if(preFilter.tag!==currentTag||['separator','field'].includes(preFilter.tag)){if(currentGroup.length){if(currentTag==='groupBy'){pregroupOfGroupBys=[...pregroupOfGroupBys,...currentGroup];}else{this._createGroupOfFilters(currentGroup);}}
currentTag=preFilter.tag;currentGroup=[];groupNumber++;}
if(preFilter.tag!=='separator'){const filter={type:preFilter.tag,};if(preFilter.attrs&&JSON.parse(preFilter.attrs.modifiers||'{}').invisible){filter.invisible=true;let preFilterFieldName=null;if(preFilter.tag==='filter'&&preFilter.attrs.date){preFilterFieldName=preFilter.attrs.date;}else if(preFilter.tag==='groupBy'){preFilterFieldName=preFilter.attrs.fieldName;}
if(preFilterFieldName&&!this.fields[preFilterFieldName]){return;}}
if(filter.type==='filter'||filter.type==='groupBy'){filter.groupNumber=groupNumber;}
this._extractAttributes(filter,preFilter.attrs);currentGroup.push(filter);}});if(pregroupOfGroupBys.length){this._createGroupOfFilters(pregroupOfGroupBys);}
const dateFilters=Object.values(this.state.filters).filter((filter)=>filter.isDateFilter);if(dateFilters.length){this._createGroupOfComparisons(dateFilters);}}
_enrichFilterCopy(filter,filterQueryElements){const isActive=Boolean(filterQueryElements.length);const f=Object.assign({isActive},filter);function _enrichOptions(options){return options.map(o=>{const{description,id,groupNumber}=o;const isActive=filterQueryElements.some(a=>a.optionId===id);return{description,id,groupNumber,isActive};});}
switch(f.type){case'comparison':{const{dateFilterId}=filter;const dateFilterIsActive=this.state.query.some(queryElem=>queryElem.filterId===dateFilterId);if(!dateFilterIsActive){return null;}
break;}
case'filter':if(f.hasOptions){f.options=_enrichOptions(this.optionGenerators);}
break;case'groupBy':if(f.hasOptions){f.options=_enrichOptions(this.intervalOptions);}
break;case'field':f.autoCompleteValues=filterQueryElements.map(({label,value,operator})=>({label,value,operator}));break;}
return f;}
_evalArchChild(child){if(child.attrs.context){try{const context=pyUtils.eval('context',child.attrs.context);child.attrs.context=context;if(context.group_by){child.attrs.fieldName=context.group_by.split(':')[0];child.attrs.defaultInterval=context.group_by.split(':')[1];child.tag='groupBy';}}catch(e){}}
if(child.attrs.name in this.searchDefaults){child.attrs.isDefault=true;let value=this.searchDefaults[child.attrs.name];if(child.tag==='field'){child.attrs.defaultValue=Array.isArray(value)?value[0]:value;}else if(child.tag==='groupBy'){child.attrs.defaultRank=typeof value==='number'?value:100;}}
return child;}
_extractAttributes(filter,attrs){if(attrs.isDefault){filter.isDefault=attrs.isDefault;}
filter.description=attrs.string||attrs.help||attrs.name||attrs.domain||'Ω';switch(filter.type){case'filter':if(attrs.context){filter.context=attrs.context;}
if(attrs.date){filter.isDateFilter=true;filter.hasOptions=true;filter.fieldName=attrs.date;filter.fieldType=this.fields[attrs.date].type;filter.defaultOptionId=attrs.default_period||DEFAULT_PERIOD;}else{filter.domain=attrs.domain||'[]';}
if(filter.isDefault){filter.defaultRank=-5;}
break;case'groupBy':filter.fieldName=attrs.fieldName;filter.fieldType=this.fields[attrs.fieldName].type;if(['date','datetime'].includes(filter.fieldType)){filter.hasOptions=true;filter.defaultOptionId=attrs.defaultInterval||DEFAULT_INTERVAL;}
if(filter.isDefault){filter.defaultRank=attrs.defaultRank;}
break;case'field':{const field=this.fields[attrs.name];filter.fieldName=attrs.name;filter.fieldType=field.type;if(attrs.domain){filter.domain=attrs.domain;}
if(attrs.filter_domain){filter.filterDomain=attrs.filter_domain;}else if(attrs.operator){filter.operator=attrs.operator;}
if(attrs.context){filter.context=attrs.context;}
if(filter.isDefault){let operator=filter.operator;if(!operator){const type=attrs.widget||filter.fieldType;if(["char","html","many2many","one2many","text"].includes(type)){operator="ilike";}else{operator="=";}}
filter.defaultRank=-10;filter.defaultAutocompleteValue={operator,value:attrs.defaultValue,};}
break;}}
if(filter.fieldName&&!attrs.string){const{string}=this.fields[filter.fieldName];filter.description=string;}}
_favoriteToIrFilter(favorite){const irFilter={action_id:this.config.actionId,model_id:this.config.modelName,};if('description'in favorite){irFilter.name=favorite.description;}
if('domain'in favorite){irFilter.domain=favorite.domain;}
if('isDefault'in favorite){irFilter.is_default=favorite.isDefault;}
if('orderedBy'in favorite){const sort=favorite.orderedBy.map(ob=>ob.name+(ob.asc===false?" desc":""));irFilter.sort=JSON.stringify(sort);}
if('serverSideId'in favorite){irFilter.id=favorite.serverSideId;}
if('userId'in favorite){irFilter.user_id=favorite.userId;}
const context=Object.assign({},favorite.context);if('groupBys'in favorite){context.group_by=favorite.groupBys;}
if('comparison'in favorite){context.comparison=favorite.comparison;}
if(Object.keys(context).length){irFilter.context=context;}
return irFilter;}
_getAutoCompletionFilterDomain(filter,filterQueryElements){const domains=filterQueryElements.map(({label,value,operator})=>{let domain;if(filter.filterDomain){domain=Domain.prototype.stringToArray(filter.filterDomain,{self:label,raw_value:value,});}else{domain=[[filter.fieldName,operator,value]];}
return Domain.prototype.arrayToString(domain);});return pyUtils.assembleDomains(domains,'OR');}
_getContext(groups){const types=['filter','favorite','field'];const contexts=groups.reduce((contexts,group)=>{if(types.includes(group.type)){contexts.push(...this._getGroupContexts(group));}
return contexts;},[]);const evaluationContext=this.env.session.user_context;try{return pyUtils.eval('contexts',contexts,evaluationContext);}catch(err){throw new Error(this.env._t("Failed to evaluate search context")+":\n"+
JSON.stringify(err));}}
_getDateFilterDomain(filter,filterQueryElements,key='domain'){const{fieldName,fieldType}=filter;const selectedOptionIds=filterQueryElements.map(queryElem=>queryElem.optionId);const dateFilterRange=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedOptionIds,);return dateFilterRange[key];}
_getDomain(groups){const types=['filter','favorite','field'];const domains=[];for(const group of groups){if(types.includes(group.type)){domains.push(this._getGroupDomain(group));}}
return pyUtils.assembleDomains(domains,'AND');}
_getFacetDescriptions(activities,type){const facetDescriptions=[];if(type==='field'){for(const queryElem of activities[0].filterQueryElements){facetDescriptions.push(queryElem.label);}}else if(type==='groupBy'){for(const{filter,filterQueryElements}of activities){if(filter.hasOptions){for(const queryElem of filterQueryElements){const option=this.intervalOptions.find(o=>o.id===queryElem.optionId);facetDescriptions.push(filter.description+': '+option.description);}}else{facetDescriptions.push(filter.description);}}}else{let facetDescription;for(const{filter,filterQueryElements}of activities){facetDescription=filter.description;if(filter.isDateFilter){const description=this._getDateFilterDomain(filter,filterQueryElements,'description');facetDescription+=`: ${description}`;}
facetDescriptions.push(facetDescription);}}
return facetDescriptions;}
_getFacets(){const facets=this._getGroups().map(({activities,type,id})=>{const values=this._getFacetDescriptions(activities,type);const title=activities[0].filter.description;return{groupId:id,title,type,values};});return facets;}
_getFilters(predicate){const filters=[];Object.values(this.state.filters).forEach(filter=>{if((!predicate||predicate(filter))&&!filter.invisible){const filterQueryElements=this.state.query.filter(queryElem=>queryElem.filterId===filter.id);const enrichedFilter=this._enrichFilterCopy(filter,filterQueryElements);if(enrichedFilter){filters.push(enrichedFilter);}}});if(filters.some(f=>f.type==='favorite')){filters.sort((f1,f2)=>f1.groupNumber-f2.groupNumber);}
return filters;}
_getFilterContext(filter,filterQueryElements){let context=filter.context||{};if(filter.type==='field'&&filter.context){context=pyUtils.eval('context',filter.context,{self:filterQueryElements.map(({value})=>value)},);}
if(filter.type==='field'&&filter.isDefault&&filter.fieldType==='many2one'){context[`default_${filter.fieldName}`]=filter.defaultAutocompleteValue.value;}
return context;}
_getFilterDomain(filter,filterQueryElements){if(filter.type==='filter'&&filter.hasOptions){const{dateFilterId}=this.activeComparison||{};if(this.searchMenuTypes.includes('comparison')&&dateFilterId===filter.id){return"[]";}
return this._getDateFilterDomain(filter,filterQueryElements);}else if(filter.type==='field'){return this._getAutoCompletionFilterDomain(filter,filterQueryElements);}
return filter.domain;}
_getFilterGroupBys(filter,filterQueryElements){if(filter.type==='groupBy'){const fieldName=filter.fieldName;if(filter.hasOptions){return filterQueryElements.map(({optionId})=>`${fieldName}:${optionId}`);}else{return[fieldName];}}else{return filter.groupBys;}}
_getGroupBy(groups){const groupBys=groups.reduce((groupBys,group)=>{if(['groupBy','favorite'].includes(group.type)){groupBys.push(...this._getGroupGroupBys(group));}
return groupBys;},[]);const groupBy=groupBys.length?groupBys:(this.actionContext.group_by||[]);return typeof groupBy==='string'?[groupBy]:groupBy;}
_getGroupContexts(group){const contexts=group.activities.reduce((ctx,qe)=>[...ctx,this._getFilterContext(qe.filter,qe.filterQueryElements)],[]);return contexts;}
_getGroupDomain(group){const domains=group.activities.map(({filter,filterQueryElements})=>{return this._getFilterDomain(filter,filterQueryElements);});return pyUtils.assembleDomains(domains,'OR');}
_getGroupGroupBys(group){const groupBys=group.activities.reduce((gb,qe)=>[...gb,...this._getFilterGroupBys(qe.filter,qe.filterQueryElements)],[]);return groupBys;}
_getGroups(){const groups=this.state.query.reduce((groups,queryElem)=>{const{groupId,filterId}=queryElem;let group=groups.find(group=>group.id===groupId);const filter=this.state.filters[filterId];if(!group){const{type}=filter;group={id:groupId,type,activities:[]};groups.push(group);}
group.activities.push(queryElem);return groups;},[]);groups.forEach(g=>this._mergeActivities(g));return groups;}
_getOrderedBy(groups){return groups.reduce((orderedBy,group)=>{if(group.type==='favorite'){const favoriteOrderedBy=group.activities[0].filter.orderedBy;if(favoriteOrderedBy){orderedBy=[...favoriteOrderedBy,...orderedBy];}}
return orderedBy;},[]);}
_getSelectedOptionIds(dateFilterId){const selectedOptionIds=[];for(const queryElem of this.state.query){if(queryElem.filterId===dateFilterId){selectedOptionIds.push(queryElem.optionId);}}
return selectedOptionIds;}
_getTimeRanges(evaluation){let timeRanges;for(const queryElem of this.state.query.slice().reverse()){const filter=this.state.filters[queryElem.filterId];if(filter.type==='comparison'){timeRanges=this._computeTimeRanges(filter);break;}else if(filter.type==='favorite'&&filter.comparison){timeRanges=filter.comparison;break;}}
if(timeRanges){if(evaluation){timeRanges.range=Domain.prototype.stringToArray(timeRanges.range);timeRanges.comparisonRange=Domain.prototype.stringToArray(timeRanges.comparisonRange);}
return timeRanges;}
return null;}
_irFilterToFavorite(irFilter){let userId=irFilter.user_id||false;if(Array.isArray(userId)){userId=userId[0];}
const groupNumber=userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP;const context=pyUtils.eval('context',irFilter.context,this.env.session.user_context);let groupBys=[];if(context.group_by){groupBys=context.group_by;delete context.group_by;}
let comparison;if(context.comparison){comparison=context.comparison;delete context.comparison;}
let sort;try{sort=JSON.parse(irFilter.sort);}catch(err){if(err instanceof SyntaxError){sort=[];}else{throw err;}}
const orderedBy=sort.map(order=>{let fieldName;let asc;const sqlNotation=order.split(' ');if(sqlNotation.length>1){fieldName=sqlNotation[0];asc=sqlNotation[1]==='asc';}else{fieldName=order[0]==='-'?order.slice(1):order;asc=order[0]==='-'?false:true;}
return{asc:asc,name:fieldName,};});const favorite={context,description:irFilter.name,domain:irFilter.domain,groupBys,groupNumber,orderedBy,removable:true,serverSideId:irFilter.id,type:'favorite',userId,};if(irFilter.is_default){favorite.isDefault=irFilter.is_default;}
if(comparison){favorite.comparison=comparison;}
return favorite;}
_mergeActivities(group){const{activities,type}=group;let res=[];switch(type){case'filter':case'groupBy':{for(const activity of activities){const{filterId}=activity;let a=res.find(({filter})=>filter.id===filterId);if(!a){a={filter:this.state.filters[filterId],filterQueryElements:[]};res.push(a);}
a.filterQueryElements.push(activity);}
break;}
case'favorite':case'field':case'comparison':{const{filterId}=group.activities[0];const filter=this.state.filters[filterId];res.push({filter,filterQueryElements:group.activities});break;}}
if(type==='groupBy'){res.forEach(activity=>{activity.filterQueryElements.sort((qe1,qe2)=>rankInterval(qe1.optionId)-rankInterval(qe2.optionId));});}
group.activities=res;}
_prepareDefaultLabel(filter){const{id,fieldType,fieldName,defaultAutocompleteValue}=filter;const{selection,context,relation}=this.fields[fieldName];if(fieldType==='selection'){defaultAutocompleteValue.label=selection.find(sel=>sel[0]===defaultAutocompleteValue.value)[1];}else if(fieldType==='many2one'){const updateLabel=label=>{const queryElem=this.state.query.find(({filterId})=>filterId===id);if(queryElem){queryElem.label=label;defaultAutocompleteValue.label=label;}};const promise=this.env.services.rpc({args:[defaultAutocompleteValue.value],context:context,method:'name_get',model:relation,}).then(results=>updateLabel(results[0][1])).guardedCatch(()=>updateLabel(defaultAutocompleteValue.value));this.labelPromises.push(promise);}else{defaultAutocompleteValue.label=defaultAutocompleteValue.value;}}
async _saveQuery(preFilter){const groups=this._getGroups();const userContext=this.env.session.user_context;let controllerQueryParams;this.config.trigger("get-controller-query-params",params=>{controllerQueryParams=params;});controllerQueryParams=controllerQueryParams||{};controllerQueryParams.context=controllerQueryParams.context||{};const queryContext=this._getContext(groups);const context=pyUtils.eval('contexts',[userContext,controllerQueryParams.context,queryContext]);for(const key in userContext){delete context[key];}
const requireEvaluation=false;const domain=this._getDomain(groups);const groupBys=this._getGroupBy(groups);const timeRanges=this._getTimeRanges(requireEvaluation);const orderedBy=controllerQueryParams.orderedBy?controllerQueryParams.orderedBy:(this._getOrderedBy(groups)||[]);const userId=preFilter.isShared?false:this.env.session.uid;delete preFilter.isShared;Object.assign(preFilter,{context,domain,groupBys,groupNumber:userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP,orderedBy,removable:true,userId,});if(timeRanges){preFilter.comparison=timeRanges;}
const irFilter=this._favoriteToIrFilter(preFilter);const serverSideId=await this.env.dataManager.create_filter(irFilter);preFilter.serverSideId=serverSideId;return preFilter;}
static extractArchInfo(archs){const{attrs,children}=archs.search;const controlPanelInfo={attrs,children:[],};for(const child of children){if(child.tag!=="searchpanel"){controlPanelInfo.children.push(child);}}
return controlPanelInfo;}}
ActionModel.registry.add("ControlPanel",ControlPanelModelExtension,10);return ControlPanelModelExtension;});;

/* /web/static/src/js/control_panel/control_panel_x2many.js defined in bundle 'web.assets_backend' */
odoo.define('web.ControlPanelX2Many',function(require){const ControlPanel=require('web.ControlPanel');class ControlPanelX2Many extends ControlPanel{_shouldShowPager(){if(!this.props.pager||!this.props.pager.limit){return false;}
const{currentMinimum,limit,size}=this.props.pager;const maximum=Math.min(currentMinimum+limit-1,size);const singlePage=(1===currentMinimum)&&(maximum===size);return!singlePage;}}
ControlPanelX2Many.defaultProps={};ControlPanelX2Many.props={cp_content:{type:Object,optional:1},pager:Object,};ControlPanelX2Many.template='web.ControlPanelX2Many';return ControlPanelX2Many;});;

/* /web/static/src/js/control_panel/custom_favorite_item.js defined in bundle 'web.assets_backend' */
odoo.define('web.CustomFavoriteItem',function(require){"use strict";const DropdownMenuItem=require('web.DropdownMenuItem');const FavoriteMenu=require('web.FavoriteMenu');const{useAutofocus}=require('web.custom_hooks');const{useModel}=require('web/static/src/js/model.js');const{useRef}=owl.hooks;let favoriteId=0;class CustomFavoriteItem extends DropdownMenuItem{constructor(){super(...arguments);const favId=favoriteId++;this.useByDefaultId=`o_favorite_use_by_default_${favId}`;this.shareAllUsersId=`o_favorite_share_all_users_${favId}`;this.descriptionRef=useRef('description');this.model=useModel('searchModel');this.interactive=true;Object.assign(this.state,{description:this.env.action.name||"",isDefault:false,isShared:false,});useAutofocus();}
_saveFavorite(){if(!this.state.description.length){this.env.services.notification.notify({message:this.env._t("A name for your favorite filter is required."),type:'danger',});return this.descriptionRef.el.focus();}
const favorites=this.model.get('filters',f=>f.type==='favorite');if(favorites.some(f=>f.description===this.state.description)){this.env.services.notification.notify({message:this.env._t("Filter with same name already exists."),type:'danger',});return this.descriptionRef.el.focus();}
this.model.dispatch('createNewFavorite',{type:'favorite',description:this.state.description,isDefault:this.state.isDefault,isShared:this.state.isShared,});Object.assign(this.state,{description:this.env.action.name||"",isDefault:false,isShared:false,open:false,});}
_onCheckboxChange(ev){const{checked,id}=ev.target;if(this.useByDefaultId===id){this.state.isDefault=checked;if(checked){this.state.isShared=false;}}else{this.state.isShared=checked;if(checked){this.state.isDefault=false;}}}
_onInputKeydown(ev){switch(ev.key){case'Enter':ev.preventDefault();this._saveFavorite();break;case'Escape':ev.preventDefault();ev.target.blur();break;}}
static shouldBeDisplayed(env){return true;}}
CustomFavoriteItem.props={};CustomFavoriteItem.template='web.CustomFavoriteItem';CustomFavoriteItem.groupNumber=3;FavoriteMenu.registry.add('favorite-generator-menu',CustomFavoriteItem,0);return CustomFavoriteItem;});;

/* /web/static/src/js/control_panel/favorite_menu.js defined in bundle 'web.assets_backend' */
odoo.define('web.FavoriteMenu',function(require){"use strict";const Dialog=require('web.OwlDialog');const DropdownMenu=require('web.DropdownMenu');const{FACET_ICONS}=require("web.searchUtils");const Registry=require('web.Registry');const{useModel}=require('web/static/src/js/model.js');class FavoriteMenu extends DropdownMenu{constructor(){super(...arguments);this.model=useModel('searchModel');this.state.deletedFavorite=false;}
get icon(){return FACET_ICONS.favorite;}
get items(){const favorites=this.model.get('filters',f=>f.type==='favorite');const registryMenus=this.constructor.registry.values().reduce((menus,Component)=>{if(Component.shouldBeDisplayed(this.env)){menus.push({key:Component.name,groupNumber:Component.groupNumber,Component,});}
return menus;},[]);return[...favorites,...registryMenus];}
get title(){return this.env._t("Favorites");}
_onItemRemoved(ev){const favorite=this.items.find(fav=>fav.id===ev.detail.item.id);this.state.deletedFavorite=favorite;}
_onItemSelected(ev){ev.stopPropagation();this.model.dispatch('toggleFilter',ev.detail.item.id);}
async _onRemoveFavorite(){this.model.dispatch('deleteFavorite',this.state.deletedFavorite.id);this.state.deletedFavorite=false;}}
FavoriteMenu.registry=new Registry();FavoriteMenu.components=Object.assign({},DropdownMenu.components,{Dialog,});FavoriteMenu.template='web.FavoriteMenu';return FavoriteMenu;});;

/* /web/static/src/js/control_panel/custom_filter_item.js defined in bundle 'web.assets_backend' */
odoo.define('web.CustomFilterItem',function(require){"use strict";const{DatePicker,DateTimePicker}=require('web.DatePickerOwl');const Domain=require('web.Domain');const DropdownMenuItem=require('web.DropdownMenuItem');const{FIELD_OPERATORS,FIELD_TYPES}=require('web.searchUtils');const field_utils=require('web.field_utils');const patchMixin=require('web.patchMixin');const{useModel}=require('web/static/src/js/model.js');class CustomFilterItem extends DropdownMenuItem{constructor(){super(...arguments);this.model=useModel('searchModel');this.canBeOpened=true;this.state.conditions=[];this.fields=Object.values(this.props.fields).filter(field=>this._validateField(field)).concat({string:'ID',type:'id',name:'id'}).sort(({string:a},{string:b})=>a>b?1:a<b?-1:0);this.DECIMAL_POINT=this.env._t.database.parameters.decimal_point;this.OPERATORS=FIELD_OPERATORS;this.FIELD_TYPES=FIELD_TYPES;this._addDefaultCondition();}
_addDefaultCondition(){const condition={field:0,operator:0,};this._setDefaultValue(condition);this.state.conditions.push(condition);}
_validateField(field){return!field.deprecated&&field.searchable&&FIELD_TYPES[field.type]&&field.name!=='id';}
_setDefaultValue(condition){const fieldType=this.fields[condition.field].type;const genericType=FIELD_TYPES[fieldType];const operator=FIELD_OPERATORS[genericType][condition.operator];switch(genericType){case'id':case'number':condition.value=0;break;case'date':condition.value=[moment()];if(operator.symbol==='between'){condition.value.push(moment());}
break;case'datetime':condition.value=[moment('00:00:00','hh:mm:ss')];if(operator.symbol==='between'){condition.value.push(moment('23:59:59','hh:mm:ss'));}
break;case'selection':const[firstValue]=this.fields[condition.field].selection[0];condition.value=firstValue;break;default:condition.value="";}}
_onApply(){const preFilters=this.state.conditions.map(condition=>{const field=this.fields[condition.field];const type=this.FIELD_TYPES[field.type];const operator=this.OPERATORS[type][condition.operator];const descriptionArray=[field.string,operator.description];const domainArray=[];let domainValue;if('value'in operator){domainValue=[operator.value];}else if(['date','datetime'].includes(type)){domainValue=condition.value.map(val=>field_utils.parse[type](val,{type},{timezone:true}));const dateValue=condition.value.map(val=>field_utils.format[type](val,{type},{timezone:false}));descriptionArray.push(`"${dateValue.join(" " + this.env._t("and") + " ")}"`);}else{domainValue=[condition.value];descriptionArray.push(`"${condition.value}"`);}
if(operator.symbol==='between'){domainArray.push([field.name,'>=',domainValue[0]],[field.name,'<=',domainValue[1]]);}else{domainArray.push([field.name,operator.symbol,domainValue[0]]);}
const preFilter={description:descriptionArray.join(" "),domain:Domain.prototype.arrayToString(domainArray),type:'filter',};return preFilter;});this.model.dispatch('createNewFilters',preFilters);this.state.open=false;this.state.conditions=[];this._addDefaultCondition();}
_onDateChanged(condition,valueIndex,ev){condition.value[valueIndex]=ev.detail.date;}
_onFieldSelect(condition,ev){Object.assign(condition,{field:ev.target.selectedIndex,operator:0,});this._setDefaultValue(condition);}
_onOperatorSelect(condition,ev){condition.operator=ev.target.selectedIndex;this._setDefaultValue(condition);}
_onRemoveCondition(conditionIndex){this.state.conditions.splice(conditionIndex,1);}
_onValueInput(condition,ev){const type=this.fields[condition.field].type;if(['float','integer','id'].includes(type)){const previousValue=condition.value;const parser=field_utils.parse[type==='float'?'float':'integer'];try{const parsed=parser(ev.target.value||0);ev.target.value=condition.value=(parsed||0);}catch(err){ev.target.value=previousValue||0;}}else{condition.value=ev.target.value||"";}}}
CustomFilterItem.components={DatePicker,DateTimePicker};CustomFilterItem.props={fields:Object,};CustomFilterItem.template='web.CustomFilterItem';return patchMixin(CustomFilterItem);});;

/* /web/static/src/js/control_panel/filter_menu.js defined in bundle 'web.assets_backend' */
odoo.define('web.FilterMenu',function(require){"use strict";const CustomFilterItem=require('web.CustomFilterItem');const DropdownMenu=require('web.DropdownMenu');const{FACET_ICONS}=require("web.searchUtils");const{useModel}=require('web/static/src/js/model.js');class FilterMenu extends DropdownMenu{constructor(){super(...arguments);this.model=useModel('searchModel');}
get icon(){return FACET_ICONS.filter;}
get items(){return this.model.get('filters',f=>f.type==='filter');}
get title(){return this.env._t("Filters");}
_onItemSelected(ev){ev.stopPropagation();const{item,option}=ev.detail;if(option){this.model.dispatch('toggleFilterWithOptions',item.id,option.id);}else{this.model.dispatch('toggleFilter',item.id);}}}
FilterMenu.components=Object.assign({},DropdownMenu.components,{CustomFilterItem,});FilterMenu.props=Object.assign({},DropdownMenu.props,{fields:Object,});FilterMenu.template='web.FilterMenu';return FilterMenu;});;

/* /web/static/src/js/control_panel/groupby_menu.js defined in bundle 'web.assets_backend' */
odoo.define('web.GroupByMenu',function(require){"use strict";const CustomGroupByItem=require('web.CustomGroupByItem');const DropdownMenu=require('web.DropdownMenu');const{FACET_ICONS,GROUPABLE_TYPES}=require('web.searchUtils');const{useModel}=require('web/static/src/js/model.js');class GroupByMenu extends DropdownMenu{constructor(){super(...arguments);this.fields=Object.values(this.props.fields).filter(field=>this._validateField(field)).sort(({string:a},{string:b})=>a>b?1:a<b?-1:0);this.model=useModel('searchModel');}
get icon(){return FACET_ICONS.groupBy;}
get items(){return this.model.get('filters',f=>f.type==='groupBy');}
get title(){return this.env._t("Group By");}
_validateField(field){return field.sortable&&field.name!=="id"&&GROUPABLE_TYPES.includes(field.type);}
_onItemSelected(ev){ev.stopPropagation();const{item,option}=ev.detail;if(option){this.model.dispatch('toggleFilterWithOptions',item.id,option.id);}else{this.model.dispatch('toggleFilter',item.id);}}}
GroupByMenu.components=Object.assign({},DropdownMenu.components,{CustomGroupByItem,});GroupByMenu.props=Object.assign({},DropdownMenu.props,{fields:Object,});GroupByMenu.template='web.GroupByMenu';return GroupByMenu;});;

/* /web/static/src/js/control_panel/custom_group_by_item.js defined in bundle 'web.assets_backend' */
odoo.define('web.CustomGroupByItem',function(require){"use strict";const DropdownMenuItem=require('web.DropdownMenuItem');const{useModel}=require('web/static/src/js/model.js');class CustomGroupByItem extends DropdownMenuItem{constructor(){super(...arguments);this.canBeOpened=true;this.state.fieldName=this.props.fields[0].name;this.model=useModel('searchModel');}
_onApply(){const field=this.props.fields.find(f=>f.name===this.state.fieldName);this.model.dispatch('createNewGroupBy',field);this.state.open=false;}}
CustomGroupByItem.template='web.CustomGroupByItem';CustomGroupByItem.props={fields:Array,};return CustomGroupByItem;});;

/* /web/static/src/js/control_panel/search_bar.js defined in bundle 'web.assets_backend' */
odoo.define('web.SearchBar',function(require){"use strict";const Domain=require('web.Domain');const field_utils=require('web.field_utils');const{useAutofocus}=require('web.custom_hooks');const{useModel}=require('web/static/src/js/model.js');const CHAR_FIELDS=['char','html','many2many','many2one','one2many','text'];const{Component,hooks}=owl;const{useExternalListener,useRef,useState}=hooks;let sourceId=0;class SearchBar extends Component{constructor(){super(...arguments);this.focusOnUpdate=useAutofocus();this.inputRef=useRef('search-input');this.model=useModel('searchModel');this.state=useState({sources:[],focusedItem:0,inputValue:"",});this.autoCompleteSources=this.model.get('filters',f=>f.type==='field').map(filter=>this._createSource(filter));this.noResultItem=[null,this.env._t("(no result)")];useExternalListener(window,'click',this._onWindowClick);useExternalListener(window,'keydown',this._onWindowKeydown);}
mounted(){this.env.searchModel.on('search',this,this.focusOnUpdate);this.env.searchModel.on('focus-control-panel',this,()=>{this.inputRef.el.focus();});}
willUnmount(){this.env.searchModel.off('search',this);this.env.searchModel.off('focus-control-panel',this);}
_closeAutoComplete(){this.state.sources=[];this.state.focusedItem=0;this.state.inputValue="";this.inputRef.el.value="";this.focusOnUpdate();}
_createSource(filter){const field=this.props.fields[filter.fieldName];const type=field.type==="reference"?"char":field.type;const source={active:true,description:filter.description,filterId:filter.id,filterOperator:filter.operator,id:sourceId++,operator:CHAR_FIELDS.includes(type)?'ilike':'=',parent:false,type,};switch(type){case'selection':{source.active=false;source.selection=field.selection||[];break;}
case'boolean':{source.active=false;source.selection=[[true,this.env._t("Yes")],[false,this.env._t("No")],];break;}
case'many2one':{source.expand=true;source.expanded=false;source.context=field.context;source.relation=field.relation;if(filter.domain){source.domain=filter.domain;}}}
return source;}
_createSubSource(source,[value,label],active=true){const subSource={active,filterId:source.filterId,filterOperator:source.filterOperator,id:sourceId++,label,operator:'=',parent:source,value,};return subSource;}
async _expandSource(source,shouldExpand){source.expanded=shouldExpand;if(shouldExpand){let args=source.domain;if(typeof args==='string'){try{args=Domain.prototype.stringToArray(args);}catch(err){args=[];}}
const results=await this.rpc({kwargs:{args,context:source.context,limit:8,name:this.state.inputValue.trim(),},method:'name_search',model:source.relation,});const options=results.map(result=>this._createSubSource(source,result));const parentIndex=this.state.sources.indexOf(source);if(!options.length){options.push(this._createSubSource(source,this.noResultItem,false));}
this.state.sources.splice(parentIndex+1,0,...options);}else{this.state.sources=this.state.sources.filter(src=>src.parent!==source);}}
_filterSources(query){return this.autoCompleteSources.reduce((sources,source)=>{if(source.selection){const options=[];source.selection.forEach(result=>{if(fuzzy.test(query,result[1].toLowerCase())){options.push(this._createSubSource(source,result));}});if(options.length){sources.push(source,...options);}}else if(this._validateSource(query,source)){sources.push(source);}
if(source.expanded){source.expanded=false;}
return sources;},[]);}
_focusFacet(index){const facets=this.el.getElementsByClassName('o_searchview_facet');if(facets.length){facets[index].focus();}}
_parseWithSource(rawValue,{type}){const parser=field_utils.parse[type];let parsedValue;switch(type){case'date':case'datetime':{const parsedDate=parser(rawValue,{type},{timezone:true});const dateFormat=type==='datetime'?'YYYY-MM-DD HH:mm:ss':'YYYY-MM-DD';const momentValue=moment(parsedDate,dateFormat);if(!momentValue.isValid()){throw new Error('Invalid date');}
parsedValue=parsedDate.toJSON();break;}
case'many2one':{parsedValue=rawValue;break;}
default:{parsedValue=parser(rawValue);}}
return parsedValue;}
_selectSource(source){if(source.active){const labelValue=source.label||this.state.inputValue;this.model.dispatch('addAutoCompletionValues',{filterId:source.filterId,value:source.value||this._parseWithSource(labelValue,source),label:labelValue,operator:source.filterOperator||source.operator,});}
this._closeAutoComplete();}
_validateSource(query,source){try{this._parseWithSource(query,source);}catch(err){return false;}
return true;}
_onFacetKeydown(facet,facetIndex,ev){switch(ev.key){case'ArrowLeft':if(facetIndex===0){this.inputRef.el.focus();}else{this._focusFacet(facetIndex-1);}
break;case'ArrowRight':const facets=this.el.getElementsByClassName('o_searchview_facet');if(facetIndex===facets.length-1){this.inputRef.el.focus();}else{this._focusFacet(facetIndex+1);}
break;case'Backspace':this._onFacetRemove(facet);break;}}
_onFacetRemove(facet){this.model.dispatch('deactivateGroup',facet.groupId);}
_onSearchKeydown(ev){if(ev.isComposing){return;}
const currentItem=this.state.sources[this.state.focusedItem]||{};switch(ev.key){case'ArrowDown':ev.preventDefault();if(Object.keys(this.state.sources).length){let nextIndex=this.state.focusedItem+1;if(nextIndex>=this.state.sources.length){nextIndex=0;}
this.state.focusedItem=nextIndex;}else{this.env.bus.trigger('focus-view');}
break;case'ArrowLeft':if(currentItem.expanded){ev.preventDefault();this._expandSource(currentItem,false);}else if(currentItem.parent){ev.preventDefault();this.state.focusedItem=this.state.sources.indexOf(currentItem.parent);}else if(ev.target.selectionStart===0){this._focusFacet(this.model.get("facets").length-1);}
break;case'ArrowRight':if(ev.target.selectionStart===this.state.inputValue.length){if(currentItem.expand){ev.preventDefault();if(currentItem.expanded){this.state.focusedItem++;}else{this._expandSource(currentItem,true);}}else if(ev.target.selectionStart===this.state.inputValue.length){this._focusFacet(0);}}
break;case'ArrowUp':ev.preventDefault();let previousIndex=this.state.focusedItem-1;if(previousIndex<0){previousIndex=this.state.sources.length-1;}
this.state.focusedItem=previousIndex;break;case'Backspace':if(!this.state.inputValue.length){const facets=this.model.get("facets");if(facets.length){this._onFacetRemove(facets[facets.length-1]);}}
break;case'Enter':if(!this.state.inputValue.length){this.model.dispatch('search');break;}
case'Tab':if(this.state.inputValue.length){this._selectSource(currentItem);}
break;case'Escape':if(this.state.sources.length){this._closeAutoComplete();}
break;}}
_onSearchInput(ev){this.state.inputValue=ev.target.value;const wasVisible=this.state.sources.length;const query=this.state.inputValue.trim().toLowerCase();if(query.length){this.state.sources=this._filterSources(query);}else if(wasVisible){this._closeAutoComplete();}}
_onSourceMousemove(resultIndex){this.state.focusedItem=resultIndex;}
_onWindowClick(ev){if(this.state.sources.length&&!this.el.contains(ev.target)){this._closeAutoComplete();}}
_onWindowKeydown(ev){if(ev.key==='Escape'&&this.state.sources.length){ev.preventDefault();ev.stopPropagation();this._closeAutoComplete();}}}
SearchBar.defaultProps={fields:{},};SearchBar.props={fields:Object,};SearchBar.template='web.SearchBar';return SearchBar;});;

/* /web/static/src/js/control_panel/search_utils.js defined in bundle 'web.assets_backend' */
odoo.define('web.searchUtils',function(require){"use strict";const{_lt,_t}=require('web.core');const Domain=require('web.Domain');const pyUtils=require('web.py_utils');const FIELD_OPERATORS={boolean:[{symbol:"=",description:_lt("is true"),value:true},{symbol:"!=",description:_lt("is false"),value:true},],char:[{symbol:"ilike",description:_lt("contains")},{symbol:"not ilike",description:_lt("doesn't contain")},{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],date:[{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:">",description:_lt("is after")},{symbol:"<",description:_lt("is before")},{symbol:">=",description:_lt("is after or equal to")},{symbol:"<=",description:_lt("is before or equal to")},{symbol:"between",description:_lt("is between")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],datetime:[{symbol:"between",description:_lt("is between")},{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:">",description:_lt("is after")},{symbol:"<",description:_lt("is before")},{symbol:">=",description:_lt("is after or equal to")},{symbol:"<=",description:_lt("is before or equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],id:[{symbol:"=",description:_lt("is")},],number:[{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:">",description:_lt("greater than")},{symbol:"<",description:_lt("less than")},{symbol:">=",description:_lt("greater than or equal to")},{symbol:"<=",description:_lt("less than or equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],selection:[{symbol:"=",description:_lt("is")},{symbol:"!=",description:_lt("is not")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],};const FIELD_TYPES={boolean:'boolean',char:'char',date:'date',datetime:'datetime',float:'number',id:'id',integer:'number',html:'char',many2many:'char',many2one:'char',monetary:'number',one2many:'char',text:'char',selection:'selection',};const DEFAULT_PERIOD='this_month';const QUARTERS={1:{description:_lt("Q1"),coveredMonths:[0,1,2]},2:{description:_lt("Q2"),coveredMonths:[3,4,5]},3:{description:_lt("Q3"),coveredMonths:[6,7,8]},4:{description:_lt("Q4"),coveredMonths:[9,10,11]},};const MONTH_OPTIONS={this_month:{id:'this_month',groupNumber:1,format:'MMMM',addParam:{},granularity:'month',},last_month:{id:'last_month',groupNumber:1,format:'MMMM',addParam:{months:-1},granularity:'month',},antepenultimate_month:{id:'antepenultimate_month',groupNumber:1,format:'MMMM',addParam:{months:-2},granularity:'month',},};const QUARTER_OPTIONS={fourth_quarter:{id:'fourth_quarter',groupNumber:1,description:QUARTERS[4].description,setParam:{quarter:4},granularity:'quarter',},third_quarter:{id:'third_quarter',groupNumber:1,description:QUARTERS[3].description,setParam:{quarter:3},granularity:'quarter',},second_quarter:{id:'second_quarter',groupNumber:1,description:QUARTERS[2].description,setParam:{quarter:2},granularity:'quarter',},first_quarter:{id:'first_quarter',groupNumber:1,description:QUARTERS[1].description,setParam:{quarter:1},granularity:'quarter',},};const YEAR_OPTIONS={this_year:{id:'this_year',groupNumber:2,format:'YYYY',addParam:{},granularity:'year',},last_year:{id:'last_year',groupNumber:2,format:'YYYY',addParam:{years:-1},granularity:'year',},antepenultimate_year:{id:'antepenultimate_year',groupNumber:2,format:'YYYY',addParam:{years:-2},granularity:'year',},};const PERIOD_OPTIONS=Object.assign({},MONTH_OPTIONS,QUARTER_OPTIONS,YEAR_OPTIONS);const GROUPABLE_TYPES=['boolean','char','date','datetime','integer','many2one','selection',];const DEFAULT_INTERVAL='month';const INTERVAL_OPTIONS={year:{description:_lt("Year"),id:'year',groupNumber:1},quarter:{description:_lt("Quarter"),id:'quarter',groupNumber:1},month:{description:_lt("Month"),id:'month',groupNumber:1},week:{description:_lt("Week"),id:'week',groupNumber:1},day:{description:_lt("Day"),id:'day',groupNumber:1}};const COMPARISON_OPTIONS={previous_period:{description:_lt("Previous Period"),id:'previous_period',},previous_year:{description:_lt("Previous Year"),id:'previous_year',addParam:{years:-1},},};const PER_YEAR={year:1,quarter:4,month:12,};const FACET_ICONS={filter:'fa fa-filter',groupBy:'fa fa-bars',favorite:'fa fa-star',comparison:'fa fa-adjust',};function constructDateDomain(referenceMoment,fieldName,fieldType,selectedOptionIds,comparisonOptionId){let addParam;let selectedOptions;if(comparisonOptionId){[addParam,selectedOptions]=getComparisonParams(referenceMoment,selectedOptionIds,comparisonOptionId);}else{selectedOptions=getSelectedOptions(referenceMoment,selectedOptionIds);}
const yearOptions=selectedOptions.year;const otherOptions=[...(selectedOptions.quarter||[]),...(selectedOptions.month||[])];sortPeriodOptions(yearOptions);sortPeriodOptions(otherOptions);const ranges=[];for(const yearOption of yearOptions){const constructRangeParams={referenceMoment,fieldName,fieldType,addParam,};if(otherOptions.length){for(const option of otherOptions){const setParam=Object.assign({},yearOption.setParam,option?option.setParam:{});const{granularity}=option;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}else{const{granularity,setParam}=yearOption;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}
const domain=pyUtils.assembleDomains(ranges.map(range=>range.domain),'OR');const description=ranges.map(range=>range.description).join("/");return{domain,description};}
function constructDateRange({referenceMoment,fieldName,fieldType,granularity,setParam,addParam,}){const date=referenceMoment.clone().set(setParam).add(addParam||{});let leftBound=date.clone().startOf(granularity);let rightBound=date.clone().endOf(granularity);if(fieldType==='date'){leftBound=leftBound.format('YYYY-MM-DD');rightBound=rightBound.format('YYYY-MM-DD');}else{leftBound=leftBound.utc().format('YYYY-MM-DD HH:mm:ss');rightBound=rightBound.utc().format('YYYY-MM-DD HH:mm:ss');}
const domain=Domain.prototype.arrayToString(['&',[fieldName,'>=',leftBound],[fieldName,'<=',rightBound]]);const descriptions=[date.format("YYYY")];const method=_t.database.parameters.direction==="rtl"?"push":"unshift";if(granularity==="month"){descriptions[method](date.format("MMMM"));}else if(granularity==="quarter"){descriptions[method](QUARTERS[date.quarter()].description);}
const description=descriptions.join(" ");return{domain,description,};}
function getComparisonOptions(){return getOptionsWithDescriptions(COMPARISON_OPTIONS);}
function getComparisonParams(referenceMoment,selectedOptionIds,comparisonOptionId){const comparisonOption=COMPARISON_OPTIONS[comparisonOptionId];const selectedOptions=getSelectedOptions(referenceMoment,selectedOptionIds);let addParam=comparisonOption.addParam;if(addParam){return[addParam,selectedOptions];}
addParam={};let globalGranularity='year';if(selectedOptions.month){globalGranularity='month';}else if(selectedOptions.quarter){globalGranularity='quarter';}
const granularityFactor=PER_YEAR[globalGranularity];const years=selectedOptions.year.map(o=>o.setParam.year);const yearMin=Math.min(...years);const yearMax=Math.max(...years);let optionMin=0;let optionMax=0;if(selectedOptions.quarter){const quarters=selectedOptions.quarter.map(o=>o.setParam.quarter);if(globalGranularity==='month'){delete selectedOptions.quarter;for(const quarter of quarters){for(const month of QUARTERS[quarter].coveredMonths){const monthOption=selectedOptions.month.find(o=>o.setParam.month===month);if(!monthOption){selectedOptions.month.push({setParam:{month,},granularity:'month',});}}}}else{optionMin=Math.min(...quarters);optionMax=Math.max(...quarters);}}
if(selectedOptions.month){const months=selectedOptions.month.map(o=>o.setParam.month);optionMin=Math.min(...months);optionMax=Math.max(...months);}
addParam[globalGranularity]=-1+
granularityFactor*(yearMin-yearMax)+
optionMin-optionMax;return[addParam,selectedOptions];}
function getIntervalOptions(){return getOptionsWithDescriptions(INTERVAL_OPTIONS);}
function getPeriodOptions(referenceMoment){const options=[];for(const option of Object.values(PERIOD_OPTIONS)){const{id,groupNumber,description,}=option;const res={id,groupNumber,};const date=referenceMoment.clone().set(option.setParam).add(option.addParam);if(description){res.description=description.toString();}else{res.description=date.format(option.format.toString());}
res.setParam=getSetParam(option,referenceMoment);res.defaultYear=date.year();options.push(res);}
for(const option of options){const yearOption=options.find(o=>o.setParam&&o.setParam.year===option.defaultYear);option.defaultYearId=yearOption.id;delete option.defaultYear;delete option.setParam;}
return options;}
function getOptionsWithDescriptions(OPTIONS){const options=[];for(const option of Object.values(OPTIONS)){const{id,groupNumber,description,}=option;const res={id,};if(description){res.description=description.toString();}
if(groupNumber){res.groupNumber=groupNumber;}
options.push(res);}
return options;}
function getSelectedOptions(referenceMoment,selectedOptionIds){const selectedOptions={year:[]};for(const optionId of selectedOptionIds){const option=PERIOD_OPTIONS[optionId];const setParam=getSetParam(option,referenceMoment);const granularity=option.granularity;if(!selectedOptions[granularity]){selectedOptions[granularity]=[];}
selectedOptions[granularity].push({granularity,setParam});}
return selectedOptions;}
function getSetParam(periodOption,referenceMoment){if(periodOption.setParam){return periodOption.setParam;}
const date=referenceMoment.clone().add(periodOption.addParam);const setParam={};setParam[periodOption.granularity]=date[periodOption.granularity]();return setParam;}
function rankInterval(intervalOptionId){return Object.keys(INTERVAL_OPTIONS).indexOf(intervalOptionId);}
function sortPeriodOptions(options){options.sort((o1,o2)=>{const granularity1=o1.granularity;const granularity2=o2.granularity;if(granularity1===granularity2){return o1.setParam[granularity1]-o2.setParam[granularity1];}
return granularity1<granularity2?-1:1;});}
function yearSelected(selectedOptionIds){return selectedOptionIds.some(optionId=>!!YEAR_OPTIONS[optionId]);}
return{COMPARISON_OPTIONS,DEFAULT_INTERVAL,DEFAULT_PERIOD,FACET_ICONS,FIELD_OPERATORS,FIELD_TYPES,GROUPABLE_TYPES,INTERVAL_OPTIONS,PERIOD_OPTIONS,constructDateDomain,getComparisonOptions,getIntervalOptions,getPeriodOptions,rankInterval,yearSelected,};});;

/* /web/static/src/js/views/search_panel_model_extension.js defined in bundle 'web.assets_backend' */
odoo.define("web/static/src/js/views/search_panel_model_extension.js",function(require){"use strict";const ActionModel=require("web/static/src/js/views/action_model.js");const{sortBy}=require("web.utils");const Domain=require("web.Domain");const pyUtils=require("web.py_utils");const DEFAULT_VIEW_TYPES=["kanban","tree"];const DEFAULT_LIMIT=200;let nextSectionId=1;function hasDomain(filter){return filter.domain!=="[]";}
function hasValues({errorMsg,groups,type,values}){if(errorMsg){return true;}else if(groups){return[...groups.values()].some((g)=>g.values.size);}else if(type==="category"){return values&&values.size>1;}else{return values&&values.size>0;}}
function serialiseMap(map){return[...map].map(([key,val])=>[key,Object.assign({},val)]);}
class SearchPanelModelExtension extends ActionModel.Extension{constructor(){super(...arguments);this.categoriesToLoad=[];this.defaultValues={};this.filtersToLoad=[];this.initialStateImport=false;this.searchDomain=[];for(const key in this.config.context){const match=/^searchpanel_default_(.*)$/.exec(key);if(match){this.defaultValues[match[1]]=this.config.context[key];}}}
async callLoad(params){const searchDomain=this._getExternalDomain();params.searchDomainChanged=(JSON.stringify(this.searchDomain)!==JSON.stringify(searchDomain));if(!this.shouldLoad&&!this.initialStateImport){const isFetchable=(section)=>section.enableCounters||(params.searchDomainChanged&&!section.expand);this.categoriesToLoad=this.categories.filter(isFetchable);this.filtersToLoad=this.filters.filter(isFetchable);this.shouldLoad=params.searchDomainChanged||Boolean(this.categoriesToLoad.length+this.filtersToLoad.length);}
this.searchDomain=searchDomain;this.initialStateImport=false;await super.callLoad(params);}
exportState(){const state=Object.assign({},super.exportState());state.sections=serialiseMap(state.sections);for(const[id,section]of state.sections){section.values=serialiseMap(section.values);if(section.groups){section.groups=serialiseMap(section.groups);for(const[id,group]of section.groups){group.values=serialiseMap(group.values);}}}
return state;}
get(property,...args){switch(property){case"domain":return this.getDomain();case"sections":return this.getSections(...args);}}
importState(importedState){this.initialStateImport=Boolean(importedState&&!this.state.sections);super.importState(...arguments);if(importedState){this.state.sections=new Map(this.state.sections);for(const section of this.state.sections.values()){section.values=new Map(section.values);if(section.groups){section.groups=new Map(section.groups);for(const group of section.groups.values()){group.values=new Map(group.values);}}}}}
async isReady(){await this.sectionsPromise;}
async load(params){this.sectionsPromise=this._fetchSections(params.isInitialLoad);if(this._shouldWaitForData(params)){await this.sectionsPromise;}}
prepareState(){Object.assign(this.state,{sections:new Map()});this._createSectionsFromArch();}
getDomain(){return Domain.prototype.normalizeArray([...this._getCategoryDomain(),...this._getFilterDomain(),]);}
getSections(predicate){let sections=[...this.state.sections.values()].map((section)=>Object.assign({},section,{empty:!hasValues(section)}));if(predicate){sections=sections.filter(predicate);}
return sections.sort((s1,s2)=>s1.index-s2.index);}
toggleCategoryValue(sectionId,valueId){const category=this.state.sections.get(sectionId);category.activeValueId=valueId;}
toggleFilterValues(sectionId,valueIds,forceTo=null){const section=this.state.sections.get(sectionId);for(const valueId of valueIds){const value=section.values.get(valueId);value.checked=forceTo===null?!value.checked:forceTo;}}
get categories(){return[...this.state.sections.values()].filter(s=>s.type==="category");}
get filters(){return[...this.state.sections.values()].filter(s=>s.type==="filter");}
_applyDefaultFilterValues(){for(const{fieldName,values}of this.filters){const defaultValues=this.defaultValues[fieldName]||[];for(const valueId of defaultValues){const value=values.get(valueId);if(value){value.checked=true;}}}}
_createCategoryTree(sectionId,result){const category=this.state.sections.get(sectionId);let{error_msg,parent_field:parentField,values,}=result;if(error_msg){category.errorMsg=error_msg;values=[];}
if(category.hierarchize){category.parentField=parentField;}
for(const value of values){category.values.set(value.id,Object.assign({},value,{childrenIds:[],parentId:value[parentField]||false,}));}
for(const value of values){const{parentId}=category.values.get(value.id);if(parentId&&category.values.has(parentId)){category.values.get(parentId).childrenIds.push(value.id);}}
category.rootIds=[false];for(const value of values){const{parentId}=category.values.get(value.id);if(!parentId){category.rootIds.push(value.id);}}
const valueIds=[false,...values.map((val)=>val.id)];this._ensureCategoryValue(category,valueIds);}
_createFilterTree(sectionId,result){const filter=this.state.sections.get(sectionId);let{error_msg,values,}=result;if(error_msg){filter.errorMsg=error_msg;values=[];}
values.forEach((value)=>{const oldValue=filter.values.get(value.id);value.checked=oldValue?oldValue.checked:false;});filter.values=new Map();const groupIds=[];if(filter.groupBy){const groups=new Map();for(const value of values){const groupId=value.group_id;if(!groups.has(groupId)){if(groupId){groupIds.push(groupId);}
groups.set(groupId,{id:groupId,name:value.group_name,values:new Map(),tooltip:value.group_tooltip,sequence:value.group_sequence,hex_color:value.group_hex_color,});const oldGroup=filter.groups&&filter.groups.get(groupId);groups.get(groupId).state=(oldGroup&&oldGroup.state)||false;}
groups.get(groupId).values.set(value.id,value);}
filter.groups=groups;filter.sortedGroupIds=sortBy(groupIds,(id)=>groups.get(id).sequence||groups.get(id).name);for(const group of filter.groups.values()){for(const[valueId,value]of group.values){filter.values.set(valueId,value);}}}else{for(const value of values){filter.values.set(value.id,value);}}}
_createSectionsFromArch(){let hasCategoryWithCounters=false;let hasFilterWithDomain=false;this.config.archNodes.forEach(({attrs,tag},index)=>{if(tag!=="field"||attrs.invisible==="1"){return;}
const type=attrs.select==="multi"?"filter":"category";const section={color:attrs.color,description:attrs.string||this.config.fields[attrs.name].string,enableCounters:!!pyUtils.py_eval(attrs.enable_counters||"0"),expand:!!pyUtils.py_eval(attrs.expand||"0"),fieldName:attrs.name,icon:attrs.icon,id:nextSectionId++,index,limit:pyUtils.py_eval(attrs.limit||String(DEFAULT_LIMIT)),type,values:new Map(),};if(type==="category"){section.activeValueId=this.defaultValues[attrs.name];section.icon=section.icon||"fa-folder";section.hierarchize=!!pyUtils.py_eval(attrs.hierarchize||"1");section.values.set(false,{childrenIds:[],display_name:this.env._t("All"),id:false,bold:true,parentId:false,});hasCategoryWithCounters=hasCategoryWithCounters||section.enableCounters;}else{section.domain=attrs.domain||"[]";section.groupBy=attrs.groupby;section.icon=section.icon||"fa-filter";hasFilterWithDomain=hasFilterWithDomain||section.domain!=="[]";}
this.state.sections.set(section.id,section);});if(hasCategoryWithCounters&&hasFilterWithDomain){for(const category of this.categories){category.enableCounters=false;}
console.warn("Warning: categories with counters are incompatible with filters having a domain attribute.","All category counters have been disabled to avoid inconsistencies.",);}}
_ensureCategoryValue(category,valueIds){if(!valueIds.includes(category.activeValueId)){category.activeValueId=valueIds[0];}}
async _fetchCategories(categories){const filterDomain=this._getFilterDomain();await Promise.all(categories.map(async(category)=>{const result=await this.env.services.rpc({method:"search_panel_select_range",model:this.config.modelName,args:[category.fieldName],kwargs:{category_domain:this._getCategoryDomain(category.id),enable_counters:category.enableCounters,expand:category.expand,filter_domain:filterDomain,hierarchize:category.hierarchize,limit:category.limit,search_domain:this.searchDomain,},});this._createCategoryTree(category.id,result);}));}
async _fetchFilters(filters){const evalContext={};for(const category of this.categories){evalContext[category.fieldName]=category.activeValueId;}
const categoryDomain=this._getCategoryDomain();await Promise.all(filters.map(async(filter)=>{const result=await this.env.services.rpc({method:"search_panel_select_multi_range",model:this.config.modelName,args:[filter.fieldName],kwargs:{category_domain:categoryDomain,comodel_domain:Domain.prototype.stringToArray(filter.domain,evalContext),enable_counters:filter.enableCounters,filter_domain:this._getFilterDomain(filter.id),expand:filter.expand,group_by:filter.groupBy||false,group_domain:this._getGroupDomain(filter),limit:filter.limit,search_domain:this.searchDomain,},});this._createFilterTree(filter.id,result);}));}
async _fetchSections(isInitialLoad){await this._fetchCategories(isInitialLoad?this.categories:this.categoriesToLoad);await this._fetchFilters(isInitialLoad?this.filters:this.filtersToLoad);if(isInitialLoad){this._applyDefaultFilterValues();}}
_getCategoryDomain(excludedCategoryId){const domain=[];for(const category of this.categories){if(category.id===excludedCategoryId||!category.activeValueId){continue;}
const field=this.config.fields[category.fieldName];const operator=field.type==="many2one"&&category.parentField?"child_of":"=";domain.push([category.fieldName,operator,category.activeValueId,]);}
return domain;}
_getExternalDomain(){const domains=this.config.get("domain");const domain=domains.reduce((acc,dom)=>[...acc,...dom],[]);return Domain.prototype.normalizeArray(domain);}
_getFilterDomain(excludedFilterId){const domain=[];function addCondition(fieldName,valueMap){const ids=[];for(const[valueId,value]of valueMap){if(value.checked){ids.push(valueId);}}
if(ids.length){domain.push([fieldName,"in",ids]);}}
for(const filter of this.filters){if(filter.id===excludedFilterId){continue;}
const{fieldName,groups,values}=filter;if(groups){for(const group of groups.values()){addCondition(fieldName,group.values);}}else{addCondition(fieldName,values);}}
return domain;}
_getGroupDomain(filter){const{fieldName,groups,enableCounters}=filter;const{type:fieldType}=this.config.fields[fieldName];if(!enableCounters||!groups){return{many2one:[],many2many:{},}[fieldType];}
let groupDomain=null;if(fieldType==="many2one"){for(const group of groups.values()){const valueIds=[];let active=false;for(const[valueId,value]of group.values){const{checked}=value;valueIds.push(valueId);if(checked){active=true;}}
if(active){if(groupDomain){groupDomain=[[0,"=",1]];break;}else{groupDomain=[[fieldName,"in",valueIds]];}}}}else if(fieldType==="many2many"){const checkedValueIds=new Map();groups.forEach(({values},groupId)=>{values.forEach(({checked},valueId)=>{if(checked){if(!checkedValueIds.has(groupId)){checkedValueIds.set(groupId,[]);}
checkedValueIds.get(groupId).push(valueId);}});});groupDomain={};for(const[gId,ids]of checkedValueIds.entries()){for(const groupId of groups.keys()){if(gId!==groupId){const key=JSON.stringify(groupId);if(!groupDomain[key]){groupDomain[key]=[];}
groupDomain[key].push([fieldName,"in",ids]);}}}}
return groupDomain;}
_shouldWaitForData({isInitialLoad,searchDomainChanged}){if(isInitialLoad&&Object.keys(this.defaultValues).length){return true;}
if(this.categories.length&&this.filters.some(hasDomain)){return true;}
if(!this.searchDomain.length){return false;}
return[...this.state.sections.values()].some((section)=>!section.expand&&searchDomainChanged);}
static extractArchInfo(archs,viewType){const{children}=archs.search;const spNode=children.find(c=>c.tag==="searchpanel");const isObject=(obj)=>typeof obj==="object"&&obj!==null;if(spNode){const actualType=viewType==="list"?"tree":viewType;const{view_types}=spNode.attrs;const viewTypes=view_types?view_types.split(","):DEFAULT_VIEW_TYPES;if(viewTypes.includes(actualType)){return{attrs:spNode.attrs,children:spNode.children.filter(isObject),};}}
return null;}}
SearchPanelModelExtension.layer=1;ActionModel.registry.add("SearchPanel",SearchPanelModelExtension,30);return SearchPanelModelExtension;});;

/* /web/static/src/js/views/search_panel.js defined in bundle 'web.assets_backend' */
odoo.define("web/static/src/js/views/search_panel.js",function(require){"use strict";const{Model,useModel}=require("web/static/src/js/model.js");const patchMixin=require("web.patchMixin");const{Component,hooks}=owl;const{useState,useSubEnv}=hooks;class SearchPanel extends Component{constructor(){super(...arguments);useSubEnv({searchModel:this.props.searchModel});this.state=useState({active:{},expanded:{},});this.model=useModel("searchModel");this.scrollTop=0;this.hasImportedState=false;this.importState(this.props.importedState);}
async willStart(){this._expandDefaultValue();this._updateActiveValues();}
mounted(){this._updateGroupHeadersChecked();if(this.hasImportedState){this.el.scroll({top:this.scrollTop});}}
async willUpdateProps(){this._updateActiveValues();}
exportState(){const exported={expanded:this.state.expanded,scrollTop:this.el.scrollTop,};return JSON.stringify(exported);}
importState(stringifiedState){this.hasImportedState=Boolean(stringifiedState);if(this.hasImportedState){const state=JSON.parse(stringifiedState);this.state.expanded=state.expanded;this.scrollTop=state.scrollTop;}}
_expandDefaultValue(){if(this.hasImportedState){return;}
const categories=this.model.get("sections",s=>s.type==="category");for(const category of categories){this.state.expanded[category.id]={};if(category.activeValueId){const ancestorIds=this._getAncestorValueIds(category,category.activeValueId);for(const ancestorId of ancestorIds){this.state.expanded[category.id][ancestorId]=true;}}}}
_getAncestorValueIds(category,categoryValueId){const{parentId}=category.values.get(categoryValueId);return parentId?[...this._getAncestorValueIds(category,parentId),parentId]:[];}
async _toggleCategory(category,value){if(value.childrenIds.length){const categoryState=this.state.expanded[category.id];if(categoryState[value.id]&&category.activeValueId===value.id){delete categoryState[value.id];}else{categoryState[value.id]=true;}}
if(category.activeValueId!==value.id){this.state.active[category.id]=value.id;this.model.dispatch("toggleCategoryValue",category.id,value.id);}}
_toggleFilterGroup(filterId,{values}){const valueIds=[];const checked=[...values.values()].every((value)=>this.state.active[filterId][value.id]);values.forEach(({id})=>{valueIds.push(id);this.state.active[filterId][id]=!checked;});this.model.dispatch("toggleFilterValues",filterId,valueIds,!checked);}
_toggleFilterValue(filterId,valueId,{currentTarget}){this.state.active[filterId][valueId]=currentTarget.checked;this._updateGroupHeadersChecked();this.model.dispatch("toggleFilterValues",filterId,[valueId]);}
_updateActiveValues(){for(const section of this.model.get("sections")){if(section.type==="category"){this.state.active[section.id]=section.activeValueId;}else{this.state.active[section.id]={};if(section.groups){for(const group of section.groups.values()){for(const value of group.values.values()){this.state.active[section.id][value.id]=value.checked;}}}
if(section&&section.values){for(const value of section.values.values()){this.state.active[section.id][value.id]=value.checked;}}}}}
_updateGroupHeadersChecked(){const groups=this.el.querySelectorAll(":scope .o_search_panel_filter_group");for(const group of groups){const header=group.querySelector(":scope .o_search_panel_group_header input");const vals=[...group.querySelectorAll(":scope .o_search_panel_filter_value input")];header.checked=false;header.indeterminate=false;if(vals.every((v)=>v.checked)){header.checked=true;}else if(vals.some((v)=>v.checked)){header.indeterminate=true;}}}}
SearchPanel.modelExtension="SearchPanel";SearchPanel.props={className:{type:String,optional:1},importedState:{type:String,optional:1},searchModel:Model,};SearchPanel.template="web.SearchPanel";return patchMixin(SearchPanel);});;

/* /web/static/src/js/views/action_model.js defined in bundle 'web.assets_backend' */
odoo.define("web/static/src/js/views/action_model.js",function(require){"use strict";const Domain=require("web.Domain");const{FACET_ICONS}=require("web.searchUtils");const{Model}=require("web/static/src/js/model.js");const{parseArch}=require("web.viewUtils");const pyUtils=require("web.py_utils");const Registry=require("web.Registry");const isNotNull=(value)=>value!==null&&value!==undefined;const isObject=(obj)=>typeof obj==="object"&&obj!==null;class ActionModelExtension extends Model.Extension{async callLoad(){this.loadPromise=super.callLoad(...arguments);await this.loadPromise;}
async isReady(){await this.loadPromise;}
static extractArchInfo(){return null;}}
class ActionModel extends Model{get(property){switch(property){case"query":return this.config.searchQuery||this._getQuery();case"facets":return this._getFacets();}
return super.get(...arguments);}
async isReady(){await this._awaitExtensions();}
async _awaitExtensions(){await Promise.all(this.extensions.flat().map((extension)=>extension.isReady()));}
__get(excluded,property){const results=super.__get(...arguments);switch(property){case"domain":return[this.config.domain,...results];case"context":return[this.config.context,...results];}
return results;}
_getFacets(){const types=this.config.searchMenuTypes||[];const isValidType=(type)=>(!['groupBy','comparison'].includes(type)||types.includes(type));const facets=[];for(const extension of this.extensions.flat()){for(const facet of extension.get("facets")||[]){if(!isValidType(facet.type)){continue;}
facet.separator=facet.type==='groupBy'?">":this.env._t("or");if(facet.type in FACET_ICONS){facet.icon=FACET_ICONS[facet.type];}
facets.push(facet);}}
return facets;}
_getQuery(){const evalContext=this.env.session.user_context;const contexts=this.__get(null,"context");const domains=this.__get(null,"domain");const query={context:pyUtils.eval("contexts",contexts,evalContext),domain:Domain.prototype.normalizeArray(pyUtils.eval("domains",domains,evalContext)),orderedBy:this.get("orderedBy")||[],};const searchMenuTypes=this.config.searchMenuTypes||[];if(searchMenuTypes.includes("groupBy")){query.groupBy=this.get("groupBy")||[];}else{query.groupBy=[];}
if(searchMenuTypes.includes("comparison")){query.timeRanges=this.get("timeRanges")||{};}
return query;}
async _loadExtensions({isInitialLoad}){await super._loadExtensions(...arguments);if(!isInitialLoad){this.trigger("search",this.get("query"));await this._awaitExtensions();}}
static extractArchInfo(archs,viewType=null){const parsedArchs={};if(!archs.search){archs.search="<search/>";}
for(const key in archs){const{attrs,children}=parseArch(archs[key]);const objectChildren=children.filter(isObject);parsedArchs[key]={attrs,children:objectChildren,};}
const archInfo={};for(const key of this.registry.keys()){const extension=this.registry.get(key);const result=extension.extractArchInfo(parsedArchs,viewType);if(isNotNull(result)){archInfo[key]=result;}}
return archInfo;}}
ActionModel.Extension=ActionModelExtension;ActionModel.registry=new Registry(null,(value)=>value.prototype instanceof ActionModel.Extension);return ActionModel;});;

/* /web/static/src/js/views/field_manager_mixin.js defined in bundle 'web.assets_backend' */
odoo.define('web.FieldManagerMixin',function(require){"use strict";var BasicModel=require('web.BasicModel');var concurrency=require('web.concurrency');var FieldManagerMixin={custom_events:{field_changed:'_onFieldChanged',load:'_onLoad',mutexify:'_onMutexify',},init:function(model){this.model=model||new BasicModel(this);this.mutex=new concurrency.Mutex();},_applyChanges:function(dataPointID,changes,event){var self=this;var options=_.pick(event.data,'context','doNotSetDirty','notifyChange','viewType','allowWarning');return this.model.notifyChanges(dataPointID,changes,options).then(function(result){if(event.data.force_save){return self.model.save(dataPointID).then(function(){return self._confirmSave(dataPointID);}).guardedCatch(function(){return self._rejectSave(dataPointID);});}else if(options.notifyChange!==false){return self._confirmChange(dataPointID,result,event);}});},_confirmChange:function(id,fields,event){return Promise.resolve();},_confirmSave:function(id){return Promise.resolve();},_rejectSave:function(id){return Promise.resolve();},_onFieldChanged:function(event){event.stopPropagation();return this._applyChanges(event.data.dataPointID,event.data.changes,event).then(event.data.onSuccess||function(){}).guardedCatch(event.data.onFailure||function(){});},_onLoad:function(event){var self=this;event.stopPropagation();var data=event.data;if(!data.on_success){return;}
var params={};if('limit'in data){params.limit=data.limit;}
if('offset'in data){params.offset=data.offset;}
this.mutex.exec(function(){return self.model.reload(data.id,params).then(function(db_id){data.on_success(self.model.get(db_id));});});},_onMutexify:function(ev){ev.stopPropagation();this.mutex.exec(ev.data.action);},};return FieldManagerMixin;});;

/* /web/static/src/js/views/file_upload_mixin.js defined in bundle 'web.assets_backend' */
odoo.define('web.fileUploadMixin',function(require){'use strict';const{csrf_token,_t}=require('web.core');const ProgressBar=require('web.ProgressBar');const ProgressCard=require('web.ProgressCard');const ProgressBarMixin={custom_events:{progress_bar_abort:'_onProgressBarAbort',},init(){this._fileUploads={};},_createXhr(){return new window.XMLHttpRequest();},_getFileUploadRenderOptions(){return{predicate:()=>true,targetCallback:undefined,};},_getFileUploadRoute(){return'/web/binary/upload_attachment';},_makeFileUpload(params){const{files,xhr}=params;const fileUploadId=_.uniqueId('fileUploadId');const formData=new FormData();const formDataKeys=this._makeFileUploadFormDataKeys(Object.assign({fileUploadId},params));formData.append('csrf_token',csrf_token);for(const key in formDataKeys){if(formDataKeys[key]!==undefined){formData.append(key,formDataKeys[key]);}}
for(const file of files){formData.append('ufile',file);}
return{fileUploadId,xhr,title:files.length===1?files[0].name:_.str.sprintf(_t("%s Files"),files.length),type:files.length===1?files[0].type:undefined,formData,};},_makeFileUploadFormDataKeys({fileUploadId}){return{callback:fileUploadId,};},async _removeFileUpload(fileUploadId){const upload=this._fileUploads[fileUploadId];upload.progressCard&&upload.progressCard.destroy();upload.progressBar&&upload.progressBar.destroy();delete this._fileUploads[fileUploadId];await this.reload();},async _renderFileUploads(){const{predicate,targetCallback}=this._getFileUploadRenderOptions();for(const fileUploadId in this._fileUploads){const upload=this._fileUploads[fileUploadId];if(!predicate(upload)){continue;}
if(!upload.progressBar){if(!upload.recordId||this.viewType!=='kanban'){upload.progressCard=new ProgressCard(this,{title:upload.title,type:upload.type,viewType:this.viewType,});}
upload.progressBar=new ProgressBar(this,{xhr:upload.xhr,title:upload.title,fileUploadId,});}
let $targetCard;if(upload.progressCard){await upload.progressCard.prependTo(this.renderer.$el);$targetCard=upload.progressCard.$el;}else if(targetCallback){$targetCard=targetCallback(upload);}
await upload.progressBar.appendTo($targetCard);}},async _uploadFiles(files,params={}){if(!files||!files.length){return;}
await new Promise(resolve=>{const xhr=this._createXhr();xhr.open('POST',this._getFileUploadRoute());const fileUploadData=this._makeFileUpload(Object.assign({files,xhr},params));const{fileUploadId,formData}=fileUploadData;this._fileUploads[fileUploadId]=fileUploadData;xhr.upload.addEventListener("progress",ev=>{this._updateFileUploadProgress(fileUploadId,ev);});const progressPromise=this._onBeforeUpload();xhr.onload=async()=>{await progressPromise;resolve();this._onUploadLoad({fileUploadId,xhr});};xhr.onerror=async()=>{await progressPromise;resolve();this._onUploadError({fileUploadId,xhr});};xhr.send(formData);});},_updateFileUploadProgress(fileUploadId,ev){const{progressCard,progressBar}=this._fileUploads[fileUploadId];progressCard&&progressCard.update(ev.loaded,ev.total);progressBar&&progressBar.update(ev.loaded,ev.total);},async _onBeforeUpload(){await this._renderFileUploads();},_onProgressBarAbort(ev){this._removeFileUpload(ev.data.fileUploadId);},_onUploadLoad({fileUploadId}){this._removeFileUpload(fileUploadId);},_onUploadError({fileUploadId,xhr}){this.do_notify(xhr.status,_.str.sprintf(_t('message: %s'),xhr.reponseText),true);this._removeFileUpload(fileUploadId);},};return ProgressBarMixin;});;

/* /web/static/src/js/views/file_upload_progress_bar.js defined in bundle 'web.assets_backend' */
odoo.define('web.ProgressBar',function(require){'use strict';const{_t}=require('web.core');const Dialog=require('web.Dialog');const Widget=require('web.Widget');const ProgressBar=Widget.extend({template:'web.FileUploadProgressBar',events:{'click .o_upload_cross':'_onClickCross',},init(parent,{title,fileUploadId,xhr}){this._super(...arguments);this.title=title;this.fileUploadId=fileUploadId;this.xhr=xhr;},start(){this.xhr.onabort=()=>this.do_notify(false,_t("Upload cancelled"));return this._super(...arguments);},update(loaded,total){if(!this.$el){return;}
const percent=Math.round((loaded/total)*100);this.$('.o_file_upload_progress_bar_value').css("width",percent+"%");},_onClickCross(ev){ev.stopPropagation();const promptText=_.str.sprintf(_t("Do you really want to cancel the upload of %s?"),_.escape(this.title));Dialog.confirm(this,promptText,{confirm_callback:()=>{this.xhr.abort();this.trigger_up('progress_bar_abort',{fileUploadId:this.fileUploadId});}});},});return ProgressBar;});;

/* /web/static/src/js/views/file_upload_progress_card.js defined in bundle 'web.assets_backend' */
odoo.define('web.ProgressCard',function(require){'use strict';const{_t}=require('web.core');const Widget=require('web.Widget');const ProgressCard=Widget.extend({template:'web.ProgressCard',init(parent,{title,type,viewType}){this._super(...arguments);this.title=title;this.type=type;this.viewType=viewType;},update(loaded,total){if(!this.$el){return;}
const percent=Math.round((loaded/total)*100);const $textDivLeft=this.$('.o_file_upload_progress_text_left');const $textDivRight=this.$('.o_file_upload_progress_text_right');if(percent===100){$textDivLeft.text(_t('Processing...'));}else{const mbLoaded=Math.round(loaded/1000000);const mbTotal=Math.round(total/1000000);$textDivLeft.text(_.str.sprintf(_t("Uploading... (%s%%)"),percent));$textDivRight.text(_.str.sprintf(_t("(%s/%sMb)"),mbLoaded,mbTotal));}},});return ProgressCard;});;

/* /web/static/src/js/views/sample_server.js defined in bundle 'web.assets_backend' */
odoo.define('web.SampleServer',function(require){"use strict";const session=require('web.session');const utils=require('web.utils');const Registry=require('web.Registry');class UnimplementedRouteError extends Error{}
function getSampleFromId(id,sampleTexts){return sampleTexts[(id-1)%sampleTexts.length];}
function fieldNameRegex(...terms){return new RegExp(`\\b((\\w+)?_)?(${terms.join('|')})(_(\\w+)?)?\\b`);}
const DESCRIPTION_REGEX=fieldNameRegex('description','label','title','subject','message');const EMAIL_REGEX=fieldNameRegex('email');const PHONE_REGEX=fieldNameRegex('phone');const URL_REGEX=fieldNameRegex('url');class SampleServer{constructor(modelName,fields){this.mainModel=modelName;this.data={};this.data[modelName]={fields,records:[],};for(const fieldName in fields){const field=fields[fieldName];if(['many2one','one2many','many2many'].includes(field.type)){this.data[field.relation]=this.data[field.relation]||{fields:{display_name:{type:'char'},id:{type:'integer'},color:{type:'integer'},},records:[],};}}
this.existingGroups=null;this.populated=false;this.existingGroupsPopulated=false;}
mockRpc(params){if(!(params.model in this.data)){throw new Error(`SampleServer: unknown model ${params.model}`);}
this._populateModels();switch(params.method||params.route){case'/web/dataset/search_read':return this._mockSearchReadController(params);case'web_read_group':return this._mockWebReadGroup(params);case'read_group':return this._mockReadGroup(params);case'read_progress_bar':return this._mockReadProgressBar(params);case'read':return this._mockRead(params);}
const method=params.method||params.route;const mockFunction=SampleServer.mockRegistry.get(`${params.model}/${method}`)||SampleServer.mockRegistry.get(method);if(mockFunction){return mockFunction.call(this,params);}
console.log(`SampleServer: unimplemented route "${params.method || params.route}"`);throw new SampleServer.UnimplementedRouteError();}
setExistingGroups(groups){this.existingGroups=groups;}
_aggregateFields(measures,records){const values={};for(const{fieldName,type}of measures){if(['float','integer','monetary'].includes(type)){if(records.length){let value=0;for(const record of records){value+=record[fieldName];}
values[fieldName]=value;}else{values[fieldName]=null;}}
if(type==='many2one'){const ids=new Set(records.map(r=>r[fieldName]));values.fieldName=ids.size||null;}}
return values;}
_formatValue(value,options){if(!value){return false;}
const{type,interval,relation}=options;if(['date','datetime'].includes(type)){const fmt=SampleServer.FORMATS[interval];return moment(value).format(fmt);}else if(type==='many2one'){const rec=this.data[relation].records.find(({id})=>id===value);return[value,rec.display_name];}else{return value;}}
_generateFieldValue(modelName,fieldName,id){const field=this.data[modelName].fields[fieldName];switch(field.type){case"boolean":return fieldName==='active'?true:this._getRandomBool();case"char":case"text":if(["display_name","name"].includes(fieldName)){if(SampleServer.PEOPLE_MODELS.includes(modelName)){return getSampleFromId(id,SampleServer.SAMPLE_PEOPLE);}else if(modelName==='res.country'){return getSampleFromId(id,SampleServer.SAMPLE_COUNTRIES);}}
if(fieldName==='display_name'){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(["name","reference"].includes(fieldName)){return`REF${String(id).padStart(4, '0')}`;}else if(DESCRIPTION_REGEX.test(fieldName)){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(EMAIL_REGEX.test(fieldName)){const emailName=getSampleFromId(id,SampleServer.SAMPLE_PEOPLE).replace(/ /,".").toLowerCase();return`${emailName}@sample.demo`;}else if(PHONE_REGEX.test(fieldName)){return`+1 555 754 ${String(id).padStart(4, '0')}`;}else if(URL_REGEX.test(fieldName)){return`http://sample${id}.com`;}
return false;case"date":case"datetime":{const format=field.type==="date"?"YYYY-MM-DD":"YYYY-MM-DD HH:mm:ss";return this._getRandomDate(format);}
case"float":return this._getRandomFloat(SampleServer.MAX_FLOAT);case"integer":{let max=SampleServer.MAX_INTEGER;if(fieldName.includes('color')){max=this._getRandomBool()?SampleServer.MAX_COLOR_INT:0;}
return this._getRandomInt(max);}
case"monetary":return this._getRandomInt(SampleServer.MAX_MONETARY);case"many2one":if(field.relation==='res.currency'){return session.company_currency_id;}
return this._getRandomSubRecordId();case"one2many":case"many2many":{const ids=[this._getRandomSubRecordId(),this._getRandomSubRecordId()];return[...new Set(ids)];}
case"selection":{if(fieldName==='activity_exception_decoration'){return false;}
if(field.selection.length>0){return this._getRandomArrayEl(field.selection)[0];}
return false;}
default:return false;}}
_getRandomArrayEl(array){return array[Math.floor(Math.random()*array.length)];}
_getRandomBool(){return Math.random()<0.5;}
_getRandomDate(format){const delta=Math.floor((Math.random()-Math.random())*SampleServer.DATE_DELTA);return new moment().add(delta,"hour").format(format);}
_getRandomFloat(max){return Math.random()*max;}
_getRandomInt(max){return Math.floor(Math.random()*max);}
_getRandomSubRecordId(){return Math.floor(Math.random()*SampleServer.SUB_RECORDSET_SIZE)+1;}
_mockRead(params){const model=this.data[params.model];const ids=params.args[0];const fieldNames=params.args[1];const records=[];for(const r of model.records){if(!ids.includes(r.id)){continue;}
const record={id:r.id};for(const fieldName of fieldNames){const field=model.fields[fieldName];if(!field){record[fieldName]=false;}else if(field.type==='many2one'){const relModel=this.data[field.relation];const relRecord=relModel.records.find(relR=>r[fieldName]===relR.id);record[fieldName]=relRecord?[relRecord.id,relRecord.display_name]:false;}else{record[fieldName]=r[fieldName];}}
records.push(record);}
return records;}
_mockReadGroup(params){const lazy='lazy'in params?params.lazy:true;const model=params.model;const fields=this.data[model].fields;const records=this.data[model].records;const normalizedGroupBys=[];let groupBy=[];if(params.groupBy.length){groupBy=lazy?[params.groupBy[0]]:params.groupBy;}
for(const groupBySpec of groupBy){let[fieldName,interval]=groupBySpec.split(':');interval=interval||'month';const{type,relation}=fields[fieldName];if(type){const gb={fieldName,type,interval,relation,alias:groupBySpec};normalizedGroupBys.push(gb);}}
const groups=utils.groupBy(records,(record)=>{const vals={};for(const gb of normalizedGroupBys){const{fieldName,type}=gb;let value;if(['date','datetime'].includes(type)){value=this._formatValue(record[fieldName],gb);}else{value=record[fieldName];}
vals[fieldName]=value;}
return JSON.stringify(vals);});const measures=[];for(const measureSpec of(params.fields||Object.keys(fields))){const[fieldName,aggregateFunction]=measureSpec.split(':');const{type}=fields[fieldName];if(!params.groupBy.includes(fieldName)&&type&&(type!=='many2one'||aggregateFunction!=='count_distinct')){measures.push({fieldName,type});}}
let result=[];for(const id in groups){const records=groups[id];const group={__domain:[]};let countKey=`__count`;if(normalizedGroupBys.length&&lazy){countKey=`${normalizedGroupBys[0].fieldName}_count`;}
group[countKey]=records.length;const firstElem=records[0];for(const gb of normalizedGroupBys){const{alias,fieldName}=gb;group[alias]=this._formatValue(firstElem[fieldName],gb);}
Object.assign(group,this._aggregateFields(measures,records));result.push(group);}
if(normalizedGroupBys.length>0){const{alias,interval,type}=normalizedGroupBys[0];result=utils.sortBy(result,(group)=>{const val=group[alias];if(['date','datetime'].includes(type)){return moment(val,SampleServer.FORMATS[interval]);}
return val;});}
return result;}
_mockReadProgressBar(params){const groupBy=params.kwargs.group_by;const progress_bar=params.kwargs.progress_bar;const groupByField=this.data[params.model].fields[groupBy];const data={};for(const record of this.data[params.model].records){let groupByValue=record[groupBy];if(groupByField.type==="many2one"){const relatedRecords=this.data[groupByField.relation].records;const relatedRecord=relatedRecords.find(r=>r.id===groupByValue);groupByValue=relatedRecord.display_name;}
if(!(groupByValue in data)){data[groupByValue]={};for(const key in progress_bar.colors){data[groupByValue][key]=0;}}
const fieldValue=record[progress_bar.field];if(fieldValue in data[groupByValue]){data[groupByValue][fieldValue]++;}}
return data;}
_mockSearchReadController(params){const model=this.data[params.model];const rawRecords=model.records.slice(0,SampleServer.SEARCH_READ_LIMIT);const records=this._mockRead({model:params.model,args:[rawRecords.map(r=>r.id),params.fields],});return{records,length:records.length};}
_mockWebReadGroup(params){let groups;if(this.existingGroups){this._tweakExistingGroups(params);groups=this.existingGroups;}else{groups=this._mockReadGroup(params);}
return{groups,length:groups.length,};}
_populateExistingGroups(params){if(!this.existingGroupsPopulated){const groups=this.existingGroups;this.groupsInfo=groups;const groupBy=params.groupBy[0];const values=groups.map(g=>g[groupBy]);const groupByField=this.data[params.model].fields[groupBy];const groupedByM2O=groupByField.type==='many2one';if(groupedByM2O){this.data[groupByField.relation].records=values.map(v=>{return{id:v[0],display_name:v[1]};});}
for(const r of this.data[params.model].records){const value=getSampleFromId(r.id,values);r[groupBy]=groupedByM2O?value[0]:value;}
this.existingGroupsPopulated=true;}}
_populateModels(){if(!this.populated){for(const modelName in this.data){const model=this.data[modelName];const fieldNames=Object.keys(model.fields).filter(f=>f!=='id');const size=modelName===this.mainModel?SampleServer.MAIN_RECORDSET_SIZE:SampleServer.SUB_RECORDSET_SIZE;for(let id=1;id<=size;id++){const record={id};for(const fieldName of fieldNames){record[fieldName]=this._generateFieldValue(modelName,fieldName,id);}
model.records.push(record);}}
this.populated=true;}}
_tweakExistingGroups(params){const groups=this.existingGroups;this._populateExistingGroups(params);const groupBy=params.groupBy[0].split(':')[0];const groupByField=this.data[params.model].fields[groupBy];const groupedByM2O=groupByField.type==='many2one';const records=this.data[params.model].records;for(const g of groups){const groupValue=groupedByM2O?g[groupBy][0]:g[groupBy];const recordsInGroup=records.filter(r=>r[groupBy]===groupValue);g[`${groupBy}_count`]=recordsInGroup.length;for(const field of params.fields){const fieldType=this.data[params.model].fields[field].type;if(['integer, float','monetary'].includes(fieldType)){g[field]=recordsInGroup.reduce((acc,r)=>acc+r[field],0);}}
g.__data={records:this._mockRead({model:params.model,args:[recordsInGroup.map(r=>r.id),params.fields],}),length:recordsInGroup.length,};}}}
SampleServer.FORMATS={day:'YYYY-MM-DD',week:'[W]ww YYYY',month:'MMMM YYYY',quarter:'[Q]Q YYYY',year:'Y',};SampleServer.DISPLAY_FORMATS=Object.assign({},SampleServer.FORMATS,{day:'DD MMM YYYY'});SampleServer.MAIN_RECORDSET_SIZE=16;SampleServer.SUB_RECORDSET_SIZE=5;SampleServer.SEARCH_READ_LIMIT=10;SampleServer.MAX_FLOAT=100;SampleServer.MAX_INTEGER=50;SampleServer.MAX_COLOR_INT=7;SampleServer.MAX_MONETARY=100000;SampleServer.DATE_DELTA=24*60;SampleServer.SAMPLE_COUNTRIES=["Belgium","France","Portugal","Singapore","Australia"];SampleServer.SAMPLE_PEOPLE=["John Miller","Henry Campbell","Carrie Helle","Wendi Baltz","Thomas Passot",];SampleServer.SAMPLE_TEXTS=["Laoreet id","Volutpat blandit","Integer vitae","Viverra nam","In massa",];SampleServer.PEOPLE_MODELS=['res.users','res.partner','hr.employee','mail.followers','mailing.contact'];SampleServer.UnimplementedRouteError=UnimplementedRouteError;SampleServer.mockRegistry=new Registry();return SampleServer;});;

/* /web/static/src/js/views/select_create_controllers_registry.js defined in bundle 'web.assets_backend' */
odoo.define('web.select_create_controllers_registry',function(require){"use strict";return{};});odoo.define('web._select_create_controllers_registry',function(require){"use strict";var KanbanController=require('web.KanbanController');var ListController=require('web.ListController');var select_create_controllers_registry=require('web.select_create_controllers_registry');var SelectCreateKanbanController=KanbanController.extend({_onOpenRecord:function(ev){var selectedRecord=this.model.get(ev.data.id);this.trigger_up('select_record',{id:selectedRecord.res_id,display_name:selectedRecord.data.display_name,});},});var SelectCreateListController=ListController.extend({_onOpenRecord:function(ev){var selectedRecord=this.model.get(ev.data.id);this.trigger_up('select_record',{id:selectedRecord.res_id,display_name:selectedRecord.data.display_name,});},});_.extend(select_create_controllers_registry,{SelectCreateListController:SelectCreateListController,SelectCreateKanbanController:SelectCreateKanbanController,});});;

/* /web/static/src/js/views/signature_dialog.js defined in bundle 'web.assets_backend' */
odoo.define('web.signature_dialog',function(require){"use strict";var core=require('web.core');var Dialog=require('web.Dialog');var NameAndSignature=require('web.name_and_signature').NameAndSignature;var _t=core._t;var SignatureDialog=Dialog.extend({template:'web.signature_dialog',xmlDependencies:Dialog.prototype.xmlDependencies.concat(['/web/static/src/xml/name_and_signature.xml']),custom_events:{'signature_changed':'_onChangeSignature',},init:function(parent,options){var self=this;options=options||{};options.title=options.title||_t("Adopt Your Signature");options.size=options.size||'medium';options.technical=false;if(!options.buttons){options.buttons=[];options.buttons.push({text:_t("Adopt and Sign"),classes:"btn-primary",disabled:true,click:function(e){self._onConfirm();}});options.buttons.push({text:_t("Cancel"),close:true});}
this._super(parent,options);this.nameAndSignature=new NameAndSignature(this,options.nameAndSignatureOptions);},willStart:function(){return Promise.all([this.nameAndSignature.appendTo($('<div>')),this._super.apply(this,arguments)]);},start:function(){var self=this;this.$primaryButton=this.$footer.find('.btn-primary');this.opened().then(function(){self.$('.o_web_sign_name_and_signature').replaceWith(self.nameAndSignature.$el);self.nameAndSignature.resetSignature();});return this._super.apply(this,arguments);},isSignatureEmpty:function(){return this.nameAndSignature.isSignatureEmpty();},_onChangeSignature:function(){var isEmpty=this.nameAndSignature.isSignatureEmpty();this.$primaryButton.prop('disabled',isEmpty);},_onConfirm:function(fct){this.trigger_up('upload_signature',{name:this.nameAndSignature.getName(),signatureImage:this.nameAndSignature.getSignatureImage(),});},});return SignatureDialog;});;

/* /web/static/src/js/views/standalone_field_manager_mixin.js defined in bundle 'web.assets_backend' */
odoo.define('web.StandaloneFieldManagerMixin',function(require){"use strict";var FieldManagerMixin=require('web.FieldManagerMixin');var StandaloneFieldManagerMixin=_.extend({},FieldManagerMixin,{init:function(){FieldManagerMixin.init.apply(this,arguments);this.registeredWidgets={};},_confirmChange:function(id,fields,event){var result=FieldManagerMixin._confirmChange.apply(this,arguments);var record=this.model.get(id);_.each(this.registeredWidgets[id],function(widget,fieldName){if(_.contains(fields,fieldName)){widget.reset(record,event);}});return result;},_registerWidget:function(datapointID,fieldName,widget){if(!this.registeredWidgets[datapointID]){this.registeredWidgets[datapointID]={};}
this.registeredWidgets[datapointID][fieldName]=widget;},});return StandaloneFieldManagerMixin;});;

/* /web/static/src/js/views/view_registry.js defined in bundle 'web.assets_backend' */
odoo.define('web.view_registry',function(require){"use strict";var Registry=require('web.Registry');return new Registry();});odoo.define('web._view_registry',function(require){"use strict";var FormView=require('web.FormView');var GraphView=require('web.GraphView');var KanbanView=require('web.KanbanView');var ListView=require('web.ListView');var PivotView=require('web.PivotView');var CalendarView=require('web.CalendarView');var view_registry=require('web.view_registry');view_registry.add('form',FormView).add('list',ListView).add('kanban',KanbanView).add('graph',GraphView).add('pivot',PivotView).add('calendar',CalendarView);});;

/* /web/static/src/js/views/view_dialogs.js defined in bundle 'web.assets_backend' */
odoo.define('web.view_dialogs',function(require){"use strict";var config=require('web.config');var core=require('web.core');var Dialog=require('web.Dialog');var dom=require('web.dom');var view_registry=require('web.view_registry');var select_create_controllers_registry=require('web.select_create_controllers_registry');var _t=core._t;var ViewDialog=Dialog.extend({custom_events:_.extend({},Dialog.prototype.custom_events,{push_state:'_onPushState',}),init:function(parent,options){options=options||{};options.fullscreen=config.device.isMobile;options.dialogClass=options.dialogClass||''+' o_act_window';this._super(parent,$.extend(true,{},options));this.res_model=options.res_model||null;this.domain=options.domain||[];this.context=options.context||{};this.options=_.extend(this.options||{},options||{});},_onPushState:function(event){event.stopPropagation();},});var FormViewDialog=ViewDialog.extend({init:function(parent,options){var self=this;options=options||{};this.res_id=options.res_id||null;this.on_saved=options.on_saved||(function(){});this.on_remove=options.on_remove||(function(){});this.context=options.context;this.model=options.model;this.parentID=options.parentID;this.recordID=options.recordID;this.shouldSaveLocally=options.shouldSaveLocally;this.readonly=options.readonly;this.deletable=options.deletable;this.disable_multiple_selection=options.disable_multiple_selection;var oBtnRemove='o_btn_remove';var multi_select=!_.isNumber(options.res_id)&&!options.disable_multiple_selection;var readonly=_.isNumber(options.res_id)&&options.readonly;if(!options.buttons){options.buttons=[{text:options.close_text||(readonly?_t("Close"):_t("Discard")),classes:"btn-secondary o_form_button_cancel",close:true,click:function(){if(!readonly){self.form_view.model.discardChanges(self.form_view.handle,{rollback:self.shouldSaveLocally,});}},}];if(!readonly){options.buttons.unshift({text:options.save_text||(multi_select?_t("Save & Close"):_t("Save")),classes:"btn-primary",click:function(){self._save().then(self.close.bind(self));}});if(multi_select){options.buttons.splice(1,0,{text:_t("Save & New"),classes:"btn-primary",click:function(){self._save().then(self.form_view.createRecord.bind(self.form_view,self.parentID)).then(function(){if(!self.deletable){return;}
self.deletable=false;self.buttons=self.buttons.filter(function(button){return button.classes.split(' ').indexOf(oBtnRemove)<0;});self.set_buttons(self.buttons);self.set_title(_t("Create ")+_.str.strRight(self.title,_t("Open: ")));});},});}
var multi=options.disable_multiple_selection;if(!multi&&this.deletable){this._setRemoveButtonOption(options,oBtnRemove);}}}
this._super(parent,options);},open:function(){var self=this;var _super=this._super.bind(this);var FormView=view_registry.get('form');var fields_view_def;if(this.options.fields_view){fields_view_def=Promise.resolve(this.options.fields_view);}else{fields_view_def=this.loadFieldView(this.res_model,this.context,this.options.view_id,'form');}
fields_view_def.then(function(viewInfo){var refinedContext=_.pick(self.context,function(value,key){return key.indexOf('_view_ref')===-1;});var formview=new FormView(viewInfo,{modelName:self.res_model,context:refinedContext,ids:self.res_id?[self.res_id]:[],currentId:self.res_id||undefined,index:0,mode:self.res_id&&self.options.readonly?'readonly':'edit',footerToButtons:true,default_buttons:false,withControlPanel:false,model:self.model,parentID:self.parentID,recordID:self.recordID,isFromFormViewDialog:true,});return formview.getController(self);}).then(function(formView){self.form_view=formView;var fragment=document.createDocumentFragment();if(self.recordID&&self.shouldSaveLocally){self.model.save(self.recordID,{savePoint:true});}
return self.form_view.appendTo(fragment).then(function(){self.opened().then(function(){var $buttons=$('<div>');self.form_view.renderButtons($buttons);if($buttons.children().length){self.$footer.empty().append($buttons.contents());}
dom.append(self.$el,fragment,{callbacks:[{widget:self.form_view}],in_DOM:true,});self.form_view.updateButtons();});return _super();});});return this;},_focusOnClose:function(){var isFocusSet=false;this.trigger_up('form_dialog_discarded',{callback:function(isFocused){isFocusSet=isFocused;},});return isFocusSet;},_remove:function(){return Promise.resolve(this.on_remove());},_save:function(){var self=this;return this.form_view.saveRecord(this.form_view.handle,{stayInEdit:true,reload:false,savePoint:this.shouldSaveLocally,viewType:'form',}).then(function(changedFields){var record=self.form_view.model.get(self.form_view.handle);return self.on_saved(record,!!changedFields.length);});},_setRemoveButtonOption(options,btnClasses){const self=this;options.buttons.push({text:_t("Remove"),classes:'btn-secondary '+btnClasses,click:function(){self._remove().then(self.close.bind(self));}});},});var SelectCreateDialog=ViewDialog.extend({custom_events:_.extend({},ViewDialog.prototype.custom_events,{select_record:function(event){if(!this.options.readonly){this.on_selected([event.data]);this.close();}},selection_changed:function(event){event.stopPropagation();this.$footer.find(".o_select_button").prop('disabled',!event.data.selection.length);},}),init:function(){this._super.apply(this,arguments);_.defaults(this.options,{initial_view:'search'});this.on_selected=this.options.on_selected||(function(){});this.on_closed=this.options.on_closed||(function(){});this.initialIDs=this.options.initial_ids;this.viewType='list';},open:function(){if(this.options.initial_view!=="search"){return this.create_edit_record();}
var self=this;var _super=this._super.bind(this);var viewRefID=this.viewType==='kanban'?(this.options.kanban_view_ref&&JSON.parse(this.options.kanban_view_ref)||false):false;return this.loadViews(this.res_model,this.context,[[viewRefID,this.viewType],[false,'search']],{}).then(this.setup.bind(this)).then(function(fragment){self.opened().then(function(){dom.append(self.$el,fragment,{callbacks:[{widget:self.viewController}],in_DOM:true,});self.set_buttons(self.__buttons);});return _super();});},setup:function(fieldsViews){var self=this;var fragment=document.createDocumentFragment();var domain=this.domain;if(this.initialIDs){domain=domain.concat([['id','in',this.initialIDs]]);}
var ViewClass=view_registry.get(this.viewType);var viewOptions={};var selectCreateController;if(this.viewType==='list'){_.extend(viewOptions,{hasSelectors:!this.options.disable_multiple_selection,readonly:true,},this.options.list_view_options);selectCreateController=select_create_controllers_registry.SelectCreateListController;}
if(this.viewType==='kanban'){_.extend(viewOptions,{noDefaultGroupby:true,selectionMode:this.options.selectionMode||false,});selectCreateController=select_create_controllers_registry.SelectCreateKanbanController;}
var view=new ViewClass(fieldsViews[this.viewType],_.extend(viewOptions,{action:{controlPanelFieldsView:fieldsViews.search,help:_.str.sprintf("<p>%s</p>",_t("No records found!")),},action_buttons:false,dynamicFilters:this.options.dynamicFilters,context:this.context,domain:domain,modelName:this.res_model,withBreadcrumbs:false,withSearchPanel:false,}));view.setController(selectCreateController);return view.getController(this).then(function(controller){self.viewController=controller;self._prepareButtons();return self.viewController.appendTo(fragment);}).then(function(){return fragment;});},close:function(){this._super.apply(this,arguments);this.on_closed();},create_edit_record:function(){var self=this;var dialog=new FormViewDialog(this,_.extend({},this.options,{on_saved:function(record){var values=[{id:record.res_id,display_name:record.data.display_name||record.data.name,}];self.on_selected(values);},})).open();dialog.on('closed',this,this.close);return dialog;},_focusOnClose:function(){var isFocusSet=false;this.trigger_up('form_dialog_discarded',{callback:function(isFocused){isFocusSet=isFocused;},});return isFocusSet;},_prepareButtons:function(){this.__buttons=[{text:_t("Cancel"),classes:'btn-secondary o_form_button_cancel',close:true,}];if(!this.options.no_create){this.__buttons.unshift({text:_t("Create"),classes:'btn-primary',click:this.create_edit_record.bind(this)});}
if(!this.options.disable_multiple_selection){this.__buttons.unshift({text:_t("Select"),classes:'btn-primary o_select_button',disabled:true,close:true,click:function(){var records=this.viewController.getSelectedRecords();var values=_.map(records,function(record){return{id:record.res_id,display_name:record.data.display_name,};});this.on_selected(values);},});}},});return{FormViewDialog:FormViewDialog,SelectCreateDialog:SelectCreateDialog,};});;

/* /web/static/src/js/views/view_utils.js defined in bundle 'web.assets_backend' */
odoo.define('web.viewUtils',function(require){"use strict";var dom=require('web.dom');var utils=require('web.utils');var viewUtils={getGroupValue:function(group,groupByField){var groupedByField=group.fields[groupByField];switch(groupedByField.type){case'many2one':return group.res_id||false;case'selection':var descriptor=_.find(groupedByField.selection,function(option){return option[1]===group.value;});return descriptor&&descriptor[0];case'char':case'boolean':return group.value;default:return false;}},isQuickCreateEnabled:function(list){var groupByField=list.groupedBy[0]&&list.groupedBy[0].split(':')[0];if(!groupByField){return false;}
var availableTypes=['char','boolean','many2one','selection'];if(!_.contains(availableTypes,list.fields[groupByField].type)){return false;}
return true;},parseArch:function(arch){var doc=$.parseXML(arch).documentElement;var stripWhitespaces=doc.nodeName.toLowerCase()!=='kanban';return utils.xml_to_json(doc,stripWhitespaces);},renderButtonFromNode:function(node,options){var btnOptions={attrs:_.omit(node.attrs,'icon','string','type','attrs','modifiers','options','effect'),icon:node.attrs.icon,};if(options&&options.extraClass){var classes=btnOptions.attrs.class?btnOptions.attrs.class.split(' '):[];btnOptions.attrs.class=_.uniq(classes.concat(options.extraClass.split(' '))).join(' ');}
var str=(node.attrs.string||'').replace(/_/g,'');if(str){if(options&&options.textAsTitle){btnOptions.attrs.title=str;}else{btnOptions.text=str;}}
return dom.renderButton(btnOptions);},};return viewUtils;});;

/* /web/static/src/js/views/form/form_renderer.js defined in bundle 'web.assets_backend' */
odoo.define('web.FormRenderer',function(require){"use strict";var BasicRenderer=require('web.BasicRenderer');var config=require('web.config');var core=require('web.core');var dom=require('web.dom');var viewUtils=require('web.viewUtils');var _t=core._t;var qweb=core.qweb;const symbol=Symbol('form');var FormRenderer=BasicRenderer.extend({className:"o_form_view",events:_.extend({},BasicRenderer.prototype.events,{'click .o_notification_box .oe_field_translate':'_onTranslate','click .o_notification_box .close':'_onTranslateNotificationClose','shown.bs.tab a[data-toggle="tab"]':'_onNotebookTabChanged',}),custom_events:_.extend({},BasicRenderer.prototype.custom_events,{'navigation_move':'_onNavigationMove','activate_next_widget':'_onActivateNextWidget',}),INNER_GROUP_COL:2,OUTER_GROUP_COL:2,init:function(parent,state,params){this._super.apply(this,arguments);this.fieldIdsToNames=params.fieldIdsToNames;this.idsForLabels={};this.lastActivatedFieldIndex=-1;this.alertFields={};this.renderInvisible=false;},start:function(){this._applyFormSizeClass();return this._super.apply(this,arguments);},autofocus:function(){if(this.mode==='readonly'){var firstPrimaryFormButton=this.$el.find('button.btn-primary:enabled:visible:first()');if(firstPrimaryFormButton.length>0){return firstPrimaryFormButton.focus();}else{return;}}
var focusWidget=this.defaultFocusField;if(!focusWidget||!focusWidget.isFocusable()){var widgets=this.allFieldWidgets[this.state.id];for(var i=0;i<(widgets?widgets.length:0);i++){var widget=widgets[i];if(widget.isFocusable()){focusWidget=widget;break;}}}
if(focusWidget){return focusWidget.activate({noselect:true,noAutomaticCreate:true});}},canBeSaved:function(){var fieldNames=this._super.apply(this,arguments);var $labels=this.$('label');$labels.removeClass('o_field_invalid');const allWidgets=this.allFieldWidgets[this.state.id]||[];const widgets=allWidgets.filter(w=>fieldNames.includes(w.name));for(const widget of widgets){const idForLabel=this.idsForLabels[widget[symbol]];if(idForLabel){$labels.filter('[for='+idForLabel+']').addClass('o_field_invalid');}}
return fieldNames;},updateAlertFields:function(alertFields){this.alertFields[this.state.res_id]=_.extend(this.alertFields[this.state.res_id]||{},alertFields);this.displayTranslationAlert();},displayTranslationAlert:function(){this.$('.o_notification_box').remove();if(this.alertFields[this.state.res_id]){var $notification=$(qweb.render('notification-box',{type:'info'})).append(qweb.render('translation-alert',{fields:this.alertFields[this.state.res_id],lang:_t.database.parameters.name}));if(this.$('.o_form_statusbar').length){this.$('.o_form_statusbar').after($notification);}else if(this.$('.o_form_sheet_bg').length){this.$('.o_form_sheet_bg').prepend($notification);}else{this.$el.prepend($notification);}}},confirmChange:function(){var self=this;return this._super.apply(this,arguments).then(function(resetWidgets){_.each(resetWidgets,function(widget){self._setIDForLabel(widget,self.idsForLabels[widget[symbol]]);});if(self.$('.o_field_invalid').length){self.canBeSaved(self.state.id);}
return resetWidgets;});},disableButtons:function(){this.$('.o_statusbar_buttons button, .oe_button_box button').attr('disabled',true);},enableButtons:function(){this.$('.o_statusbar_buttons button, .oe_button_box button').removeAttr('disabled');},focusLastActivatedWidget:function(){if(this.lastActivatedFieldIndex!==-1){return this._activateNextFieldWidget(this.state,this.lastActivatedFieldIndex-1,{noAutomaticCreate:true});}
return false;},getLocalState:function(){const state={};for(const notebook of this.el.querySelectorAll(':scope div.o_notebook')){const name=notebook.dataset.name;const navs=notebook.querySelectorAll(':scope .o_notebook_headers .nav-item > .nav-link');state[name]=Math.max([...navs].findIndex(nav=>nav.classList.contains('active')),0);}
return state;},resetLastActivatedField:function(){this.lastActivatedFieldIndex=-1;},setLocalState:function(state){for(const notebook of this.el.querySelectorAll(':scope div.o_notebook')){const name=notebook.dataset.name;if(name in state){const navs=notebook.querySelectorAll(':scope .o_notebook_headers .nav-item');const pages=notebook.querySelectorAll(':scope .tab-content > .tab-pane');const validTabsAmount=pages.length;if(!validTabsAmount){continue;}
let activeIndex=state[name];if(navs[activeIndex].classList.contains('o_invisible_modifier')){activeIndex=[...navs].findIndex(nav=>!nav.classList.contains('o_invisible_modifier'));}
if(activeIndex<=0){continue;}
for(let i=0;i<validTabsAmount;i++){navs[i].querySelector('.nav-link').classList.toggle('active',activeIndex===i);pages[i].classList.toggle('active',activeIndex===i);}
core.bus.trigger('DOM_updated');}}},updateState:function(state,params){this._setState(state);this.mode=(params&&'mode'in params)?params.mode:this.mode;if(params.fieldNames){return this.confirmChange(this.state,this.state.id,params.fieldNames);}
return this._super.apply(this,arguments);},_activateFirstVisibleTab(tabs){const visibleTabs=tabs.filter((tab)=>!tab.$header.hasClass("o_invisible_modifier"));const autofocusTab=visibleTabs.findIndex((tab)=>tab.node.attrs.autofocus==="autofocus");const tabToFocus=visibleTabs[Math.max(0,autofocusTab)];if(tabToFocus){tabToFocus.$header.find('.nav-link').addClass('active');tabToFocus.$page.addClass('active');}},_activateNextFieldWidget:function(record,currentIndex){if((currentIndex+1)>=(this.allFieldWidgets[record.id]||[]).length){this.trigger_up('focus_control_button');this.lastActivatedFieldIndex=-1;}else{var activatedIndex=this._super.apply(this,arguments);if(activatedIndex===-1){this.trigger_up('focus_control_button');this.lastActivatedFieldIndex=-1;}
else{this.lastActivatedFieldIndex=activatedIndex;}}
return this.lastActivatedFieldIndex;},_addButtonTooltip:function(node,$button){var self=this;$button.tooltip({title:function(){return qweb.render('WidgetButton.tooltip',{debug:config.isDebug(),state:self.state,node:node,});},});},_addOnClickAction:function($el,node){if(node.attrs.special||node.attrs.confirm||node.attrs.type||$el.hasClass('oe_stat_button')){var self=this;$el.on("click",function(){self.trigger_up('button_clicked',{attrs:node.attrs,record:self.state,});});}},_applyFormSizeClass:function(){const formEl=this.$el[0];if(config.device.size_class<=config.device.SIZES.XS){formEl.classList.add('o_xxs_form_view');}else{formEl.classList.remove('o_xxs_form_view');}
if(config.device.size_class===config.device.SIZES.XXL){formEl.classList.add('o_xxl_form_view');}else{formEl.classList.remove('o_xxl_form_view');}},_getIDForLabel:function(uid){if(!this.idsForLabels[uid]){this.idsForLabels[uid]=_.uniqueId('o_field_input_');}
return this.idsForLabels[uid];},_getRecord:function(recordId){return this.state.id===recordId?this.state:null;},_postProcessField:function(widget,node){this._super.apply(this,arguments);widget[symbol]=node.attrs.id;this._setIDForLabel(widget,this._getIDForLabel(node.attrs.id));if(JSON.parse(node.attrs.default_focus||"0")){this.defaultFocusField=widget;}},_renderButtonBox:function(node){var self=this;var $result=$('<'+node.tag+'>',{class:'o_not_full'});var nextDefIndex=this.defs.length;var buttons=_.map(node.children,function(child){if(child.tag==='button'){return self._renderStatButton(child);}else{return self._renderNode(child);}});var $tempWrapper=$('<div>');_.each(buttons,function($button){$button.appendTo($tempWrapper);});var defs=this.defs.slice(nextDefIndex);Promise.all(defs).then(function(){buttons=$tempWrapper.children();var buttons_partition=_.partition(buttons,function(button){return $(button).is('.o_invisible_modifier');});var invisible_buttons=buttons_partition[0];var visible_buttons=buttons_partition[1];var nb_buttons=self._renderButtonBoxNbButtons();var unfolded_buttons=visible_buttons.slice(0,nb_buttons).concat(invisible_buttons);var folded_buttons=visible_buttons.slice(nb_buttons);if(folded_buttons.length===1){unfolded_buttons=buttons;folded_buttons=[];}
var full=(visible_buttons.length>nb_buttons);$result.toggleClass('o_full',full).toggleClass('o_not_full',!full);_.each(unfolded_buttons,function(button){$(button).appendTo($result);});if(folded_buttons.length){$result.append(dom.renderButton({attrs:{'class':'oe_stat_button o_button_more dropdown-toggle','data-toggle':'dropdown',},text:_t("More"),}));var $dropdown=$("<div>",{class:"dropdown-menu o_dropdown_more",role:"menu"});_.each(folded_buttons,function(button){$(button).addClass('dropdown-item').appendTo($dropdown);});$dropdown.appendTo($result);}});this._handleAttributes($result,node);this._registerModifiers(node,this.state,$result);return $result;},_renderButtonBoxNbButtons:function(){return[2,2,2,4][config.device.size_class]||7;},_renderFieldWidget(node){if(!this.renderInvisible&&node.attrs.modifiers.invisible===true){return $();}
return this._super(...arguments);},_renderGenericTag:function(node){var $result=$('<'+node.tag+'>',_.omit(node.attrs,'modifiers'));this._handleAttributes($result,node);this._registerModifiers(node,this.state,$result);$result.append(_.map(node.children,this._renderNode.bind(this)));return $result;},_renderHeaderButton:function(node){var $button=viewUtils.renderButtonFromNode(node);if($button.not('.btn-primary, .btn-secondary, .btn-link, .btn-success, .btn-info, .btn-warning, .btn-danger').length){$button.addClass('btn-secondary');}
this._addOnClickAction($button,node);this._handleAttributes($button,node);this._registerModifiers(node,this.state,$button);if(config.isDebug()||node.attrs.help){this._addButtonTooltip(node,$button);}
return $button;},_renderHeaderButtons:function(node){var self=this;var buttons=[];_.each(node.children,function(child){if(child.tag==='button'){buttons.push(self._renderHeaderButton(child));}
if(child.tag==='widget'){buttons.push(self._renderTagWidget(child));}});return this._renderStatusbarButtons(buttons);},_renderInnerGroup:function(node){var self=this;var $result=$('<table/>',{class:'o_group o_inner_group'});var $tbody=$('<tbody />').appendTo($result);this._handleAttributes($result,node);this._registerModifiers(node,this.state,$result);var col=parseInt(node.attrs.col,10)||this.INNER_GROUP_COL;if(node.attrs.string){var $sep=$('<tr><td colspan="'+col+'" style="width: 100%;"><div class="o_horizontal_separator">'+node.attrs.string+'</div></td></tr>');$result.append($sep);}
var rows=[];var $currentRow=$('<tr/>');var currentColspan=0;node.children.forEach(function(child){if(child.tag==='newline'){rows.push($currentRow);$currentRow=$('<tr/>');currentColspan=0;return;}
var colspan=parseInt(child.attrs.colspan,10);var isLabeledField=(child.tag==='field'&&child.attrs.nolabel!=='1');if(!colspan){if(isLabeledField){colspan=2;}else{colspan=1;}}
var finalColspan=colspan-(isLabeledField?1:0);currentColspan+=colspan;if(currentColspan>col){rows.push($currentRow);$currentRow=$('<tr/>');currentColspan=colspan;}
var $tds;if(child.tag==='field'){$tds=self._renderInnerGroupField(child);}else if(child.tag==='label'){$tds=self._renderInnerGroupLabel(child);}else{var $td=$('<td/>');var $child=self._renderNode(child);if($child.hasClass('o_td_label')){$td.addClass('o_td_label');$child.removeClass('o_td_label');}
$tds=$td.append($child);}
if(finalColspan>1){$tds.last().attr('colspan',finalColspan);}
$currentRow.append($tds);});rows.push($currentRow);_.each(rows,function($tr){var nonLabelColSize=100/(col-$tr.children('.o_td_label').length);_.each($tr.children(':not(.o_td_label)'),function(el){var $el=$(el);$el.css('width',((parseInt($el.attr('colspan'),10)||1)*nonLabelColSize)+'%');});$tbody.append($tr);});return $result;},_renderInnerGroupField:function(node){var $el=this._renderFieldWidget(node,this.state);var $tds=$('<td/>').append($el);if(node.attrs.nolabel!=='1'){var $labelTd=this._renderInnerGroupLabel(node);$tds=$labelTd.add($tds);if(/\boe_edit_only\b/.test(node.attrs.class)){$tds.addClass('oe_edit_only');}
if(/\boe_read_only\b/.test(node.attrs.class)){$tds.addClass('oe_read_only');}}
return $tds;},_renderInnerGroupLabel:function(node){return $('<td/>',{class:'o_td_label'}).append(this._renderTagLabel(node));},_renderNode:function(node){var renderer=this['_renderTag'+_.str.capitalize(node.tag)];if(renderer){return renderer.call(this,node);}
if(node.tag==='div'&&node.attrs.name==='button_box'){return this._renderButtonBox(node);}
if(_.isString(node)){return node;}
return this._renderGenericTag(node);},_renderOuterGroup:function(node){var self=this;var $result=$('<div/>',{class:'o_group'});var nbCols=parseInt(node.attrs.col,10)||this.OUTER_GROUP_COL;var colSize=Math.max(1,Math.round(12/nbCols));if(node.attrs.string){var $sep=$('<div/>',{class:'o_horizontal_separator'}).text(node.attrs.string);$result.append($sep);}
$result.append(_.map(node.children,function(child){if(child.tag==='newline'){return $('<br/>');}
var $child=self._renderNode(child);$child.addClass('o_group_col_'+(colSize*(parseInt(child.attrs.colspan,10)||1)));return $child;}));this._handleAttributes($result,node);this._registerModifiers(node,this.state,$result);return $result;},_renderStatButton:function(node){var $button=viewUtils.renderButtonFromNode(node,{extraClass:'oe_stat_button',});$button.append(_.map(node.children,this._renderNode.bind(this)));if(node.attrs.help){this._addButtonTooltip(node,$button);}
this._addOnClickAction($button,node);this._handleAttributes($button,node);this._registerModifiers(node,this.state,$button);return $button;},_renderStatusbarButtons:function(buttons){var $statusbarButtons=$('<div>',{class:'o_statusbar_buttons'});buttons.forEach(button=>$statusbarButtons.append(button));return $statusbarButtons;},_renderTabHeader:function(page,page_id){var $a=$('<a>',{'data-toggle':'tab',disable_anchor:'true',href:'#'+page_id,class:'nav-link',role:'tab',text:page.attrs.string,});return $('<li>',{class:'nav-item'}).append($a);},_renderTabPage:function(page,page_id){var $result=$('<div class="tab-pane" id="'+page_id+'">');$result.append(_.map(page.children,this._renderNode.bind(this)));return $result;},_renderTagButton:function(node){var $button=viewUtils.renderButtonFromNode(node);$button.append(_.map(node.children,this._renderNode.bind(this)));this._addOnClickAction($button,node);this._handleAttributes($button,node);this._registerModifiers(node,this.state,$button);if(config.isDebug()||node.attrs.help){this._addButtonTooltip(node,$button);}
return $button;},_renderTagField:function(node){return this._renderFieldWidget(node,this.state);},_renderTagForm:function(node){var $result=$('<div/>');if(node.attrs.class){$result.addClass(node.attrs.class);}
var allNodes=node.children.map(this._renderNode.bind(this));$result.append(allNodes);return $result;},_renderTagGroup:function(node){var isOuterGroup=_.some(node.children,function(child){return child.tag==='group';});if(!isOuterGroup){return this._renderInnerGroup(node);}
return this._renderOuterGroup(node);},_renderTagHeader:function(node){var self=this;var $statusbar=$('<div>',{class:'o_form_statusbar'});$statusbar.append(this._renderHeaderButtons(node));_.each(node.children,function(child){if(child.tag==='field'){var $el=self._renderFieldWidget(child,self.state);$statusbar.append($el);}});this._handleAttributes($statusbar,node);this._registerModifiers(node,this.state,$statusbar);return $statusbar;},_renderTagLabel:function(node){if(!this.renderInvisible&&node.tag==='field'&&node.attrs.modifiers.invisible===true){return $();}
var self=this;var text;let fieldName;if(node.tag==='label'){fieldName=this.fieldIdsToNames[node.attrs.for];}else{fieldName=node.attrs.name;}
if('string'in node.attrs){text=node.attrs.string;}else if(fieldName){text=this.state.fields[fieldName].string;}else{return this._renderGenericTag(node);}
var $result=$('<label>',{class:'o_form_label',for:this._getIDForLabel(node.tag==='label'?node.attrs.for:node.attrs.id),text:text,});if(node.tag==='label'){this._handleAttributes($result,node);}
var modifiersOptions;if(fieldName){modifiersOptions={callback:function(element,modifiers,record){var widgets=self.allFieldWidgets[record.id];var widget=_.findWhere(widgets,{name:fieldName});if(!widget){return;}
element.$el.toggleClass('o_form_label_empty',!!(record.data.id&&(modifiers.readonly||self.mode==='readonly')&&!widget.isSet()));},};}
this._registerModifiers(node,this.state,$result,modifiersOptions);return $result;},_renderTagNotebook:function(node){var self=this;var $headers=$('<ul class="nav nav-tabs">');var $pages=$('<div class="tab-content">');var renderedTabs=_.map(node.children,function(child,index){var pageID=_.uniqueId('notebook_page_');var $header=self._renderTabHeader(child,pageID);var $page=self._renderTabPage(child,pageID);self._handleAttributes($header,child);$headers.append($header);$pages.append($page);return{$header:$header,$page:$page,node:child,};});_.each(renderedTabs,function(tab){self._registerModifiers(tab.node,self.state,tab.$header,{callback:function(element,modifiers){var $link=element.$el.find('.nav-link');if(modifiers.invisible&&$link.hasClass('active')){$link.removeClass('active');tab.$page.removeClass('active');self.inactiveNotebooks.push(renderedTabs);}},});});this._activateFirstVisibleTab(renderedTabs);var $notebookHeaders=$('<div class="o_notebook_headers">').append($headers);var $notebook=$('<div class="o_notebook">').append($notebookHeaders,$pages);$notebook[0].dataset.name=node.attrs.name||'_default_';this._registerModifiers(node,this.state,$notebook);this._handleAttributes($notebook,node);return $notebook;},_renderTagSeparator:function(node){var $separator=$('<div/>').addClass('o_horizontal_separator').text(node.attrs.string);this._handleAttributes($separator,node);this._registerModifiers(node,this.state,$separator);return $separator;},_renderTagSheet:function(node){this.has_sheet=true;var $sheet=$('<div>',{class:'clearfix position-relative o_form_sheet'});$sheet.append(node.children.map(this._renderNode.bind(this)));return $sheet;},_renderTagWidget:function(node){return this._renderWidget(this.state,node);},_renderView:function(){var self=this;var defs=[];this.defs=defs;this.inactiveNotebooks=[];var $form=this._renderNode(this.arch).addClass(this.className);delete this.defs;return Promise.all(defs).then(function(){self._updateView($form.contents());if(self.state.res_id in self.alertFields){self.displayTranslationAlert();}}).then(function(){if(self.lastActivatedFieldIndex>=0){self._activateNextFieldWidget(self.state,self.lastActivatedFieldIndex);}}).guardedCatch(function(){$form.remove();});},async _updateAllModifiers(){await this._super(...arguments);for(const tabs of this.inactiveNotebooks){this._activateFirstVisibleTab(tabs);}
this.inactiveNotebooks=[];},_updateView:function($newContent){var self=this;this.$el.html($newContent);this.$el.toggleClass('o_form_nosheet',!this.has_sheet);if(this.has_sheet){this.$el.children().not('.o_FormRenderer_chatterContainer').wrapAll($('<div/>',{class:'o_form_sheet_bg'}));}
this.$el.toggleClass('o_form_editable',this.mode==='edit');this.$el.toggleClass('o_form_readonly',this.mode==='readonly');_.each(this.allFieldWidgets[this.state.id],function(widget){const idForLabel=self.idsForLabels[widget[symbol]];var $label=idForLabel?self.$('.o_form_label[for='+idForLabel+']'):$();self._addFieldTooltip(widget,$label);if(widget.attrs.widget==='upgrade_boolean'){widget.renderWithLabel($label);}});},_setIDForLabel:function(widget,idForLabel){widget.setIDForLabel(idForLabel);},_onActivateNextWidget:function(ev){ev.stopPropagation();var index=this.allFieldWidgets[this.state.id].indexOf(ev.data.target);this._activateNextFieldWidget(this.state,index);},_onNavigationMove:function(ev){ev.stopPropagation();if(ev.data.originalEvent&&['next','previous'].includes(ev.data.direction)){ev.data.originalEvent.preventDefault();ev.data.originalEvent.stopPropagation();}
var index;let target=ev.data.target||ev.target;if(target.__owl__){target=target.__owl__.parent;}
if(ev.data.direction==="next"){index=this.allFieldWidgets[this.state.id].indexOf(target);this._activateNextFieldWidget(this.state,index);}else if(ev.data.direction==="previous"){index=this.allFieldWidgets[this.state.id].indexOf(target);this._activatePreviousFieldWidget(this.state,index);}},_onNotebookTabChanged:function(){core.bus.trigger('DOM_updated');},_onTranslate:function(ev){ev.preventDefault();this.trigger_up('translate',{fieldName:ev.target.name,id:this.state.id,isComingFromTranslationAlert:true,});},_onTranslateNotificationClose:function(ev){delete this.alertFields[this.state.res_id];},});return FormRenderer;});;

/* /web/static/src/js/views/form/form_controller.js defined in bundle 'web.assets_backend' */
odoo.define('web.FormController',function(require){"use strict";var BasicController=require('web.BasicController');var core=require('web.core');var Dialog=require('web.Dialog');var dialogs=require('web.view_dialogs');var _t=core._t;var qweb=core.qweb;var FormController=BasicController.extend({custom_events:_.extend({},BasicController.prototype.custom_events,{button_clicked:'_onButtonClicked',edited_list:'_onEditedList',open_one2many_record:'_onOpenOne2ManyRecord',open_record:'_onOpenRecord',toggle_column_order:'_onToggleColumnOrder',focus_control_button:'_onFocusControlButton',form_dialog_discarded:'_onFormDialogDiscarded',}),init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.actionButtons=params.actionButtons;this.disableAutofocus=params.disableAutofocus;this.footerToButtons=params.footerToButtons;this.defaultButtons=params.defaultButtons;this.hasActionMenus=params.hasActionMenus;this.toolbarActions=params.toolbarActions||{};},on_attach_callback:function(){this._super.apply(this,arguments);this.autofocus();},willRestore:function(){this.mode=this.model.isNew(this.handle)?'edit':'readonly';},autofocus:function(){if(!this.disableAutofocus){var isControlActivted=this.renderer.autofocus();if(!isControlActivted){if(this.$buttons&&this.mode==='readonly'){return this.$buttons.find('.o_form_button_edit').focus();}}}},createRecord:async function(parentID){const record=this.model.get(this.handle,{raw:true});const handle=await this.model.load({context:record.getContext(),fields:record.fields,fieldsInfo:record.fieldsInfo,modelName:this.modelName,parentID:parentID,res_ids:record.res_ids,type:'record',viewType:'form',});this.handle=handle;this._updateControlPanel();return this._setMode('edit');},getSelectedIds:function(){var env=this.model.get(this.handle,{env:true});return env.currentId?[env.currentId]:[];},getTitle:function(){return this.model.getName(this.handle);},getState:function(){const state=this._super.apply(this,arguments);const env=this.model.get(this.handle,{env:true});state.id=env.currentId;return state;},renderButtons:function($node){var $footer=this.footerToButtons?this.renderer.$el&&this.renderer.$('footer'):null;var mustRenderFooterButtons=$footer&&$footer.length;if((this.defaultButtons&&!this.$buttons)||mustRenderFooterButtons){this.$buttons=$('<div/>');if(mustRenderFooterButtons){this.$buttons.append($footer);}else{this.$buttons.append(qweb.render("FormView.buttons",{widget:this}));this.$buttons.on('click','.o_form_button_edit',this._onEdit.bind(this));this.$buttons.on('click','.o_form_button_create',this._onCreate.bind(this));this.$buttons.on('click','.o_form_button_save',this._onSave.bind(this));this.$buttons.on('click','.o_form_button_cancel',this._onDiscard.bind(this));this._assignSaveCancelKeyboardBehavior(this.$buttons.find('.o_form_buttons_edit'));this.$buttons.find('.o_form_buttons_edit').tooltip({delay:{show:200,hide:0},title:function(){return qweb.render('SaveCancelButton.tooltip');},trigger:'manual',});}}
if(this.$buttons&&$node){this.$buttons.appendTo($node);}},_getPagingInfo:function(){if(this.model.isNew(this.handle)){return null;}
return Object.assign(this._super(...arguments),{validate:this.canBeDiscarded.bind(this),});},_getActionMenuItems:function(state){if(!this.hasActionMenus||this.mode==='edit'){return null;}
const props=this._super(...arguments);const activeField=this.model.getActiveField(state);const otherActionItems=[];if(this.archiveEnabled&&activeField in state.data){if(state.data[activeField]){otherActionItems.push({description:_t("Archive"),callback:()=>{Dialog.confirm(this,_t("Are you sure that you want to archive this record?"),{confirm_callback:()=>this._toggleArchiveState(true),});},});}else{otherActionItems.push({description:_t("Unarchive"),callback:()=>this._toggleArchiveState(false),});}}
if(this.activeActions.create&&this.activeActions.duplicate){otherActionItems.push({description:_t("Duplicate"),callback:()=>this._onDuplicateRecord(this),});}
if(this.activeActions.delete){otherActionItems.push({description:_t("Delete"),callback:()=>this._onDeleteRecord(this),});}
return Object.assign(props,{items:Object.assign(this.toolbarActions,{other:otherActionItems}),});},saveRecord:async function(){const changedFields=await this._super(...arguments);this._updateControlPanel();if(_t.database.multi_lang&&changedFields.length){var fields=this.renderer.state.fields;var data=this.renderer.state.data;var alertFields={};for(var k=0;k<changedFields.length;k++){var field=fields[changedFields[k]];var fieldData=data[changedFields[k]];if(field.translate&&fieldData&&fieldData!=='<p><br></p>'){alertFields[changedFields[k]]=field;}}
if(!_.isEmpty(alertFields)){this.renderer.updateAlertFields(alertFields);}}
return changedFields;},update:async function(params,options){if('currentId'in params&&!params.currentId){this.mode='edit';}
params=_.extend({viewType:'form',mode:this.mode},params);await this._super(params,options);this.autofocus();},updateButtons:function(){if(!this.$buttons){return;}
if(this.footerToButtons){var $footer=this.renderer.$el&&this.renderer.$('footer');if($footer&&$footer.length){this.$buttons.empty().append($footer);}}
var edit_mode=(this.mode==='edit');this.$buttons.find('.o_form_buttons_edit').toggleClass('o_hidden',!edit_mode);this.$buttons.find('.o_form_buttons_view').toggleClass('o_hidden',edit_mode);},_applyChanges:async function(){const result=await this._super.apply(this,arguments);core.bus.trigger('DOM_updated');return result;},_assignSaveCancelKeyboardBehavior:function($saveCancelButtonContainer){var self=this;$saveCancelButtonContainer.children().on('keydown',function(e){switch(e.which){case $.ui.keyCode.ENTER:e.preventDefault();self.saveRecord();break;case $.ui.keyCode.ESCAPE:e.preventDefault();self._discardChanges();break;case $.ui.keyCode.TAB:if(!e.shiftKey&&e.target.classList.contains('btn-primary')){$saveCancelButtonContainer.tooltip('show');e.preventDefault();}
break;}});},_confirmSave:function(id){if(id===this.handle){if(this.mode==='readonly'){return this.reload();}else{return this._setMode('readonly');}}else{var record=this.model.get(this.handle);var containsChangedRecord=function(value){return _.isObject(value)&&(value.id===id||_.find(value.data,containsChangedRecord));};var changedFields=_.findKey(record.data,containsChangedRecord);return this.renderer.confirmChange(record,record.id,[changedFields]);}},_disableButtons:function(){this._super.apply(this,arguments);this.renderer.disableButtons();},_enableButtons:function(){this._super.apply(this,arguments);this.renderer.enableButtons();},_onDeletedRecords:function(){var state=this.model.get(this.handle,{raw:true});if(!state.res_ids.length){this.trigger_up('history_back');}else{this._super.apply(this,arguments);}},_rejectSave:function(){if(this.mode==='readonly'){return this.reload();}
return this._super.apply(this,arguments);},_setMode:function(mode,recordID){if((recordID||this.handle)===this.handle){this.model.unfreezeOrder(this.handle);}
if(this.mode!==mode){this.renderer.resetLastActivatedField();}
return this._super.apply(this,arguments);},_shouldBounceOnClick(element){return this.mode==='readonly'&&!!element.closest('.oe_title, .o_inner_group');},_onButtonClicked:function(ev){ev.stopPropagation();var self=this;var def;this._disableButtons();function saveAndExecuteAction(){return self.saveRecord(self.handle,{stayInEdit:true,}).then(function(){var record=self.model.get(ev.data.record.id);return self._callButtonAction(attrs,record);});}
var attrs=ev.data.attrs;if(attrs.confirm){def=new Promise(function(resolve,reject){Dialog.confirm(this,attrs.confirm,{confirm_callback:saveAndExecuteAction,}).on("closed",null,resolve);});}else if(attrs.special==='cancel'){def=this._callButtonAction(attrs,ev.data.record);}else if(!attrs.special||attrs.special==='save'){def=saveAndExecuteAction();}else{console.warn('Unhandled button event',ev);return;}
def.then(function(){self._enableButtons();if(attrs.close){self.trigger_up('close_dialog');}}).guardedCatch(this._enableButtons.bind(this));},_onCreate:function(){this.createRecord();},_onDeleteRecord:function(){this._deleteRecords([this.handle]);},_onDiscard:function(){this._discardChanges();},_onDuplicateRecord:async function(){const handle=await this.model.duplicateRecord(this.handle);this.handle=handle;this._updateControlPanel();this._setMode('edit');},_onEdit:function(){this.mutex.getUnlockedDef().then(this._setMode.bind(this,'edit'));},_onEditedList:function(ev){ev.stopPropagation();if(ev.data.id){this.model.save(ev.data.id,{savePoint:true});}
this.model.freezeOrder(ev.data.id);},_onFocusControlButton:function(e){if(this.$buttons){e.stopPropagation();this.$buttons.find('.btn-primary:visible:first()').focus();}},_onFormDialogDiscarded:function(ev){ev.stopPropagation();var isFocused=this.renderer.focusLastActivatedWidget();if(ev.data.callback){ev.data.callback(_.str.toBool(isFocused));}},_onOpenOne2ManyRecord:async function(ev){ev.stopPropagation();var data=ev.data;var record;if(data.id){record=this.model.get(data.id,{raw:true});}
await this.model.mutex.getUnlockedDef();new dialogs.FormViewDialog(this,{context:data.context,domain:data.domain,fields_view:data.fields_view,model:this.model,on_saved:data.on_saved,on_remove:data.on_remove,parentID:data.parentID,readonly:data.readonly,deletable:record?data.deletable:false,recordID:record&&record.id,res_id:record&&record.res_id,res_model:data.field.relation,shouldSaveLocally:true,title:(record?_t("Open: "):_t("Create "))+(ev.target.string||data.field.string),}).open();},_onOpenRecord:function(ev){ev.stopPropagation();var self=this;var record=this.model.get(ev.data.id,{raw:true});new dialogs.FormViewDialog(self,{context:ev.data.context,fields_view:ev.data.fields_view,on_saved:ev.data.on_saved,on_remove:ev.data.on_remove,readonly:ev.data.readonly,deletable:ev.data.deletable,res_id:record.res_id,res_model:record.model,title:_t("Open: ")+ev.data.string,}).open();},_onSave:function(ev){ev.stopPropagation();this._disableButtons();this.saveRecord().then(this._enableButtons.bind(this)).guardedCatch(this._enableButtons.bind(this));},_onToggleColumnOrder:function(ev){ev.stopPropagation();var self=this;this.model.setSort(ev.data.id,ev.data.name).then(function(){var field=ev.data.field;var state=self.model.get(self.handle);self.renderer.confirmChange(state,state.id,[field]);});},_toggleArchiveState:function(archive){const resIds=this.model.localIdsToResIds([this.handle]);this._archive(resIds,archive);},});return FormController;});;

/* /web/static/src/js/views/form/form_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.FormView',function(require){"use strict";var BasicView=require('web.BasicView');var Context=require('web.Context');var core=require('web.core');var FormController=require('web.FormController');var FormRenderer=require('web.FormRenderer');const{generateID}=require('web.utils');var _lt=core._lt;var FormView=BasicView.extend({config:_.extend({},BasicView.prototype.config,{Renderer:FormRenderer,Controller:FormController,}),display_name:_lt('Form'),icon:'fa-edit',multi_record:false,withSearchBar:false,searchMenuTypes:[],viewType:'form',init:function(viewInfo,params){var hasActionMenus=params.hasActionMenus;this._super.apply(this,arguments);var mode=params.mode||(params.currentId?'readonly':'edit');this.loadParams.type='record';if(hasActionMenus===undefined){hasActionMenus=params.hasActionMenus;}
this.controllerParams.hasActionMenus=hasActionMenus;this.controllerParams.disableAutofocus=params.disable_autofocus;this.controllerParams.toolbarActions=viewInfo.toolbar;this.controllerParams.footerToButtons=params.footerToButtons;var defaultButtons='default_buttons'in params?params.default_buttons:true;this.controllerParams.defaultButtons=defaultButtons;this.controllerParams.mode=mode;this.rendererParams.mode=mode;this.rendererParams.isFromFormViewDialog=params.isFromFormViewDialog;this.rendererParams.fieldIdsToNames=this.fieldsView.fieldIdsToNames;},getController:function(parent){return this._loadSubviews(parent).then(this._super.bind(this,parent));},_extractParamsFromAction:function(action){var params=this._super.apply(this,arguments);var inDialog=action.target==='new';var inline=action.target==='inline';var fullscreen=action.target==='fullscreen';params.withControlPanel=!(inDialog||inline);params.footerToButtons=inDialog;params.hasSearchView=inDialog?false:params.hasSearchView;params.hasActionMenus=!inDialog&&!inline;params.searchMenuTypes=inDialog?[]:params.searchMenuTypes;if(inDialog||inline||fullscreen){params.mode='edit';}else if(action.context&&action.context.form_view_initial_mode){params.mode=action.context.form_view_initial_mode;}
return params;},_loadSubviews:function(parent){var self=this;var defs=[];if(this.loadParams&&this.loadParams.fieldsInfo){var fields=this.loadParams.fields;_.each(this.loadParams.fieldsInfo.form,function(attrs,fieldName){var field=fields[fieldName];if(!field){return;}
if(field.type!=='one2many'&&field.type!=='many2many'){return;}
if(attrs.Widget.prototype.useSubview&&!attrs.__no_fetch&&!attrs.views[attrs.mode]){var context={};var regex=/'([a-z]*_view_ref)' *: *'(.*?)'/g;var matches;while(matches=regex.exec(attrs.context)){context[matches[1]]=matches[2];}
var refinedContext=_.pick(self.loadParams.context,function(value,key){return key.indexOf('_view_ref')===-1;});refinedContext.base_model_name=self.controllerParams.modelName;defs.push(parent.loadViews(field.relation,new Context(context,self.userContext,refinedContext).eval(),[[null,attrs.mode==='tree'?'list':attrs.mode]]).then(function(views){for(var viewName in views){attrs.views[viewName]=self._processFieldsView(views[viewName],viewName);attrs.views[viewName].fields=attrs.views[viewName].viewFields;self._processSubViewAttrs(attrs.views[viewName],attrs);}
self._setSubViewLimit(attrs);}));}else{self._setSubViewLimit(attrs);}});}
return Promise.all(defs);},_processArch(arch,fv){fv.fieldIdsToNames={};return this._super(...arguments);},_processNode(node,fv){if(node.tag==='field'){const name=node.attrs.name;let uid=node.attrs.id;if(!uid){uid=name in fv.fieldIdsToNames?`${name}__${generateID()}__`:name;node.attrs.id=uid;}
fv.fieldIdsToNames[uid]=name;}
return this._super(...arguments);},_setSubViewLimit:function(attrs){var view=attrs.views&&attrs.views[attrs.mode];var limit=view&&view.arch.attrs.limit&&parseInt(view.arch.attrs.limit,10);attrs.limit=limit||attrs.Widget.prototype.limit||40;},});return FormView;});;

/* /web/static/src/js/views/graph/graph_model.js defined in bundle 'web.assets_backend' */
odoo.define('web.GraphModel',function(require){"use strict";var core=require('web.core');const{DEFAULT_INTERVAL,rankInterval}=require('web.searchUtils');var _t=core._t;var AbstractModel=require('web.AbstractModel');return AbstractModel.extend({init:function(){this._super.apply(this,arguments);this.chart=null;},__get:function(){return Object.assign({isSample:this.isSampleModel},this.chart);},__load:function(params){var groupBys=params.context.graph_groupbys||params.groupBys;this.initialGroupBys=groupBys;this.fields=params.fields;this.modelName=params.modelName;this.chart=Object.assign({context:params.context,dataPoints:[],domain:params.domain,groupBy:params.groupedBy.length?params.groupedBy:groupBys,measure:params.context.graph_measure||params.measure,mode:params.context.graph_mode||params.mode,origins:[],stacked:params.stacked,timeRanges:params.timeRanges,orderBy:params.orderBy});this._computeDerivedParams();return this._loadGraph();},__reload:function(handle,params){if('context'in params){this.chart.context=params.context;this.chart.groupBy=params.context.graph_groupbys||this.chart.groupBy;this.chart.measure=params.context.graph_measure||this.chart.measure;this.chart.mode=params.context.graph_mode||this.chart.mode;}
if('domain'in params){this.chart.domain=params.domain;}
if('groupBy'in params){this.chart.groupBy=params.groupBy.length?params.groupBy:this.initialGroupBys;}
if('measure'in params){this.chart.measure=params.measure;}
if('timeRanges'in params){this.chart.timeRanges=params.timeRanges;}
this._computeDerivedParams();if('mode'in params){this.chart.mode=params.mode;return Promise.resolve();}
if('stacked'in params){this.chart.stacked=params.stacked;return Promise.resolve();}
if('orderBy'in params){this.chart.orderBy=params.orderBy;return Promise.resolve();}
return this._loadGraph();},_computeDerivedParams:function(){this.chart.processedGroupBy=this._processGroupBy(this.chart.groupBy);const{range,rangeDescription,comparisonRange,comparisonRangeDescription,fieldName}=this.chart.timeRanges;if(range){this.chart.domains=[this.chart.domain.concat(range),this.chart.domain.concat(comparisonRange),];this.chart.origins=[rangeDescription,comparisonRangeDescription];const groupBys=this.chart.processedGroupBy.map(function(gb){return gb.split(":")[0];});this.chart.comparisonFieldIndex=groupBys.indexOf(fieldName);}else{this.chart.domains=[this.chart.domain];this.chart.origins=[""];this.chart.comparisonFieldIndex=-1;}},_isEmpty(){return this.chart.dataPoints.length===0;},_loadGraph:function(){var self=this;this.chart.dataPoints=[];var groupBy=this.chart.processedGroupBy;var fields=_.map(groupBy,function(groupBy){return groupBy.split(':')[0];});if(this.chart.measure!=='__count__'){if(this.fields[this.chart.measure].type==='many2one'){fields=fields.concat(this.chart.measure+":count_distinct");}
else{fields=fields.concat(this.chart.measure);}}
var context=_.extend({fill_temporal:true},this.chart.context);var proms=[];this.chart.domains.forEach(function(domain,originIndex){proms.push(self._rpc({model:self.modelName,method:'read_group',context:context,domain:domain,fields:fields,groupBy:groupBy,lazy:false,}).then(self._processData.bind(self,originIndex)));});return Promise.all(proms);},_processData:function(originIndex,rawData){var self=this;var isCount=this.chart.measure==='__count__';var labels;function getLabels(dataPt){return self.chart.processedGroupBy.map(function(field){return self._sanitizeValue(dataPt[field],field.split(":")[0]);});}
rawData.forEach(function(dataPt){labels=getLabels(dataPt);var count=dataPt.__count||dataPt[self.chart.processedGroupBy[0]+'_count']||0;var value=isCount?count:dataPt[self.chart.measure];if(value instanceof Array){value=1;}
self.chart.dataPoints.push({resId:dataPt[self.chart.groupBy[0]]instanceof Array?dataPt[self.chart.groupBy[0]][0]:-1,count:count,domain:dataPt.__domain,value:value,labels:labels,originIndex:originIndex,});});},_processGroupBy:function(groupBy){const groupBysMap=new Map();for(const gb of groupBy){let[fieldName,interval]=gb.split(':');const field=this.fields[fieldName];if(['date','datetime'].includes(field.type)){interval=interval||DEFAULT_INTERVAL;}
if(groupBysMap.has(fieldName)){const registeredInterval=groupBysMap.get(fieldName);if(rankInterval(registeredInterval)<rankInterval(interval)){groupBysMap.set(fieldName,interval);}}else{groupBysMap.set(fieldName,interval);}}
return[...groupBysMap].map(([fieldName,interval])=>{if(interval){return`${fieldName}:${interval}`;}
return fieldName;});},_sanitizeValue:function(value,fieldName){if(value===false&&this.fields[fieldName].type!=='boolean'){return _t("Undefined");}
if(value instanceof Array){return value[1];}
if(fieldName&&(this.fields[fieldName].type==='selection')){var selected=_.where(this.fields[fieldName].selection,{0:value})[0];return selected?selected[1]:value;}
return value;},});});;

/* /web/static/src/js/views/graph/graph_controller.js defined in bundle 'web.assets_backend' */
odoo.define('web.GraphController',function(require){"use strict";const AbstractController=require('web.AbstractController');const{ComponentWrapper}=require('web.OwlCompatibility');const DropdownMenu=require('web.DropdownMenu');const{DEFAULT_INTERVAL,INTERVAL_OPTIONS}=require('web.searchUtils');const{qweb}=require('web.core');class CarretDropdownMenu extends DropdownMenu{get displayCaret(){return true;}}
var GraphController=AbstractController.extend({custom_events:_.extend({},AbstractController.prototype.custom_events,{item_selected:'_onItemSelected',open_view:'_onOpenView',}),init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.measures=params.measures;this.isEmbedded=params.isEmbedded;this.withButtons=params.withButtons;this.views=params.views;this.title=params.title;this.groupableFields=params.groupableFields;this.buttonDropdownPromises=[];},start:function(){this.$el.addClass('o_graph_controller');return this._super.apply(this,arguments);},destroy:function(){if(this.$buttons){this.$buttons.find('button').off().tooltip('dispose');}
this._super.apply(this,arguments);},getOwnedQueryParams:function(){var state=this.model.get();return{context:{graph_measure:state.measure,graph_mode:state.mode,graph_groupbys:state.groupBy,}};},reload:async function(){const promises=[this._super(...arguments)];if(this.withButtons){const state=this.model.get();this.measures.forEach(m=>m.isActive=m.fieldName===state.measure);promises.push(this.measureMenu.update({items:this.measures}));}
return Promise.all(promises);},renderButtons:function($node){this.$buttons=$(qweb.render('GraphView.buttons'));this.$buttons.find('button').tooltip();this.$buttons.click(ev=>this._onButtonClick(ev));if(this.withButtons){const state=this.model.get();const fragment=document.createDocumentFragment();this.measures.forEach(m=>m.isActive=m.fieldName===state.measure);this.measureMenu=new ComponentWrapper(this,CarretDropdownMenu,{title:"Measures",items:this.measures,});this.buttonDropdownPromises=[this.measureMenu.mount(fragment)];if($node){if(this.isEmbedded){this.groupByMenu=new ComponentWrapper(this,CarretDropdownMenu,{title:"Group By",icon:'fa fa-bars',items:this._getGroupBys(state.groupBy),});this.buttonDropdownPromises.push(this.groupByMenu.mount(fragment));}
this.$buttons.appendTo($node);}}},updateButtons:function(){if(!this.$buttons){return;}
var state=this.model.get();this.$buttons.find('.o_graph_button').removeClass('active');this.$buttons.find('.o_graph_button[data-mode="'+state.mode+'"]').addClass('active');this.$buttons.find('.o_graph_button[data-mode="stack"]').data('stacked',state.stacked).toggleClass('active',state.stacked).toggleClass('o_hidden',state.mode!=='bar');this.$buttons.find('.o_graph_button[data-order]').toggleClass('o_hidden',state.mode==='pie'||!!Object.keys(state.timeRanges).length).filter('.o_graph_button[data-order="'+state.orderBy+'"]').toggleClass('active',!!state.orderBy);if(this.withButtons){this._attachDropdownComponents();}},async _attachDropdownComponents(){await Promise.all(this.buttonDropdownPromises);const actionsContainer=this.$buttons[0];actionsContainer.appendChild(this.measureMenu.el);this.measureMenu.el.classList.add('o_graph_measures_list');if(this.isEmbedded){actionsContainer.appendChild(this.groupByMenu.el);this.groupByMenu.el.classList.add('o_group_by_menu');}
const buttons=actionsContainer.querySelectorAll('.o_dropdown_toggler_btn');for(const button of buttons){button.classList.remove('o_dropdown_toggler_btn','btn-secondary');if(this.isEmbedded){button.classList.add('btn-outline-secondary');}else{button.classList.add('btn-primary');button.tabIndex=0;}}},_getGroupBys(activeGroupBys){const normalizedGroupBys=this._normalizeActiveGroupBys(activeGroupBys);const groupBys=Object.keys(this.groupableFields).map(fieldName=>{const field=this.groupableFields[fieldName];const groupByActivity=normalizedGroupBys.filter(gb=>gb.fieldName===fieldName);const groupBy={id:fieldName,isActive:Boolean(groupByActivity.length),description:field.string,itemType:'groupBy',};if(['date','datetime'].includes(field.type)){groupBy.hasOptions=true;const activeOptionIds=groupByActivity.map(gb=>gb.interval);groupBy.options=Object.values(INTERVAL_OPTIONS).map(o=>{return Object.assign({},o,{isActive:activeOptionIds.includes(o.id)});});}
return groupBy;}).sort((gb1,gb2)=>{return gb1.description.localeCompare(gb2.description);});return groupBys;},_normalizeActiveGroupBys(activeGroupBys){return activeGroupBys.map(groupBy=>{const fieldName=groupBy.split(':')[0];const field=this.groupableFields[fieldName];const normalizedGroupBy={fieldName};if(['date','datetime'].includes(field.type)){normalizedGroupBy.interval=groupBy.split(':')[1]||DEFAULT_INTERVAL;}
return normalizedGroupBy;});},_onButtonClick:function(ev){var $target=$(ev.target);if($target.hasClass('o_graph_button')){if(_.contains(['bar','line','pie'],$target.data('mode'))){this.update({mode:$target.data('mode')});}else if($target.data('mode')==='stack'){this.update({stacked:!$target.data('stacked')});}else if(['asc','desc'].includes($target.data('order'))){const order=$target.data('order');const state=this.model.get();this.update({orderBy:state.orderBy===order?false:order});}}},_onItemSelected(ev){const item=ev.data.item;if(this.isEmbedded&&item.itemType==='groupBy'){const fieldName=item.id;const optionId=ev.data.option&&ev.data.option.id;const activeGroupBys=this.model.get().groupBy;if(optionId){const normalizedGroupBys=this._normalizeActiveGroupBys(activeGroupBys);const index=normalizedGroupBys.findIndex(ngb=>ngb.fieldName===fieldName&&ngb.interval===optionId);if(index===-1){activeGroupBys.push(fieldName+':'+optionId);}else{activeGroupBys.splice(index,1);}}else{const groupByFieldNames=activeGroupBys.map(gb=>gb.split(':')[0]);const indexOfGroupby=groupByFieldNames.indexOf(fieldName);if(indexOfGroupby===-1){activeGroupBys.push(fieldName);}else{activeGroupBys.splice(indexOfGroupby,1);}}
this.update({groupBy:activeGroupBys});this.groupByMenu.update({items:this._getGroupBys(activeGroupBys),});}else if(item.itemType==='measure'){this.update({measure:item.fieldName});this.measures.forEach(m=>m.isActive=m.fieldName===item.fieldName);this.measureMenu.update({items:this.measures});}},_onOpenView(ev){ev.stopPropagation();const state=this.model.get();const context=Object.assign({},state.context);Object.keys(context).forEach(x=>{if(x==='group_by'||x.startsWith('search_default_')){delete context[x];}});this.do_action({context:context,domain:ev.data.domain,name:this.title,res_model:this.modelName,target:'current',type:'ir.actions.act_window',view_mode:'list',views:this.views,});},});return GraphController;});;

/* /web/static/src/js/views/graph/graph_renderer.js defined in bundle 'web.assets_backend' */
odoo.define('web.GraphRenderer',function(require){"use strict";var AbstractRenderer=require('web.AbstractRenderer');var config=require('web.config');var core=require('web.core');var dataComparisonUtils=require('web.dataComparisonUtils');var fieldUtils=require('web.field_utils');var _t=core._t;var DateClasses=dataComparisonUtils.DateClasses;var qweb=core.qweb;var CHART_TYPES=['pie','bar','line'];var COLORS=["#1f77b4","#ff7f0e","#aec7e8","#ffbb78","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5","#8c564b","#c49c94","#e377c2","#f7b6d2","#7f7f7f","#c7c7c7","#bcbd22","#dbdb8d","#17becf","#9edae5"];var COLOR_NB=COLORS.length;function hexToRGBA(hex,opacity){var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);var rgb=result.slice(1,4).map(function(n){return parseInt(n,16);}).join(',');return'rgba('+rgb+','+opacity+')';}
var FORMAT_OPTIONS={humanReadable:function(value){return Math.abs(value)>=1000;},minDigits:1,decimals:2,formatterCallback:function(str){return str;},};var NO_DATA=[_t('No data')];NO_DATA.isNoData=true;var MAX_LEGEND_LENGTH=4*(Math.max(1,config.device.size_class));return AbstractRenderer.extend({className:"o_graph_renderer",sampleDataTargets:['.o_graph_canvas_container'],init:function(parent,state,params){this._super.apply(this,arguments);this.isEmbedded=params.isEmbedded||false;this.title=params.title||'';this.fields=params.fields||{};this.disableLinking=params.disableLinking;this.chart=null;this.chartId=_.uniqueId('chart');this.$legendTooltip=null;this.$tooltip=null;},on_attach_callback:function(){this._super.apply(this,arguments);this.isInDOM=true;this._render();},on_detach_callback:function(){this._super.apply(this,arguments);this.isInDOM=false;},_adjustTooltipHeight:function(maxTooltipHeight){var sizeOneLine=this.$tooltip.find('tbody tr')[0].clientHeight;var tbodySize=this.$tooltip.find('tbody')[0].clientHeight;var toKeep=Math.floor((maxTooltipHeight-(this.$tooltip[0].clientHeight-tbodySize))/sizeOneLine)-1;var $lines=this.$tooltip.find('tbody tr');var toRemove=$lines.length-toKeep;if(toRemove>0){$lines.slice(toKeep).remove();var tr=document.createElement('tr');var td=document.createElement('td');tr.classList.add('o_show_more');td.innerHTML=_t("...");tr.appendChild(td);this.$tooltip.find('tbody').append(tr);}},_customTooltip:function(tooltipModel){this.$el.css({cursor:'default'});if(this.$tooltip){this.$tooltip.remove();}
if(tooltipModel.opacity===0){return;}
if(tooltipModel.dataPoints.length===0){return;}
if(this._isRedirectionEnabled()){this.$el.css({cursor:'pointer'});}
const chartArea=this.chart.chartArea;const chartAreaLeft=chartArea.left;const chartAreaRight=chartArea.right;const chartAreaTop=chartArea.top;const rendererTop=this.$el[0].getBoundingClientRect().top;const maxTooltipLabelWidth=Math.floor((chartAreaRight-chartAreaLeft)/1.68)+'px';const tooltipItems=this._getTooltipItems(tooltipModel);this.$tooltip=$(qweb.render('GraphView.CustomTooltip',{measure:this.fields[this.state.measure].string,tooltipItems:tooltipItems,maxWidth:maxTooltipLabelWidth,})).css({top:'2px',left:'2px'});const $container=this.$el.find('.o_graph_canvas_container');$container.append(this.$tooltip);let top;const tooltipHeight=this.$tooltip[0].clientHeight;const minTopAllowed=Math.floor(chartAreaTop);const maxTopAllowed=Math.floor(window.innerHeight-rendererTop-tooltipHeight)-2;const y=Math.floor(tooltipModel.y);if(minTopAllowed<=maxTopAllowed){if(y<=maxTopAllowed){if(y>=minTopAllowed){top=y;}else{top=minTopAllowed;}}else{top=maxTopAllowed;}}else{top=minTopAllowed;const maxTooltipHeight=window.innerHeight-(rendererTop+chartAreaTop)-2;this._adjustTooltipHeight(maxTooltipHeight);}
this.$tooltip[0].style.top=Math.floor(top)+'px';this._fixTooltipLeftPosition(this.$tooltip[0],tooltipModel.x);},_filterDataPoints:function(){var dataPoints=[];if(_.contains(['bar','pie'],this.state.mode)){dataPoints=this.state.dataPoints.filter(function(dataPt){return dataPt.count>0;});}else if(this.state.mode==='line'){var counts=0;this.state.dataPoints.forEach(function(dataPt){if(dataPt.labels[0]!==_t("Undefined")){dataPoints.push(dataPt);}
counts+=dataPt.count;});if(counts===0){dataPoints=[];}}
return dataPoints;},_fixTooltipLeftPosition:function(tooltip,x){let left;const tooltipWidth=tooltip.clientWidth;const minLeftAllowed=Math.floor(this.chart.chartArea.left+2);const maxLeftAllowed=Math.floor(this.chart.chartArea.right-tooltipWidth-2);x=Math.floor(x);if(x<=maxLeftAllowed){if(x>=minLeftAllowed){left=x;}else{left=minLeftAllowed;}}else{left=maxLeftAllowed;}
tooltip.style.left=left+'px';},_formatValue:function(value){var measureField=this.fields[this.state.measure];var formatter=fieldUtils.format.float;var formatedValue=formatter(value,measureField,FORMAT_OPTIONS);return formatedValue;},_getColor:function(index){return COLORS[index%COLOR_NB];},_getDatasetDataLength:function(originIndex,defaultLength){if(_.contains(['bar','line'],this.state.mode)&&this.state.comparisonFieldIndex===0){return this.dateClasses.dateSets[originIndex].length;}
return defaultLength;},_getDatasetLabel:function(dataPt){if(_.contains(['bar','line'],this.state.mode)){var datasetLabel=dataPt.labels.slice(1).join("/");if(this.state.origins.length>1){datasetLabel=this.state.origins[dataPt.originIndex]+
(datasetLabel?('/'+datasetLabel):'');}
datasetLabel=datasetLabel||this.fields[this.state.measure].string;return datasetLabel;}
return this.state.origins[dataPt.originIndex];},_getElementOptions:function(){var elementOptions={};if(this.state.mode==='bar'){elementOptions.rectangle={borderWidth:1};}else if(this.state.mode==='line'){elementOptions.line={tension:0,fill:false,};}
return elementOptions;},_getDateClasses:function(dataPoints){var self=this;var dateSets=this.state.origins.map(function(){return[];});dataPoints.forEach(function(dataPt){dateSets[dataPt.originIndex].push(dataPt.labels[self.state.comparisonFieldIndex]);});dateSets=dateSets.map(function(dateSet){return _.uniq(dateSet);});return new DateClasses(dateSets);},_getLabel:function(dataPt){var i=this.state.comparisonFieldIndex;if(_.contains(['bar','line'],this.state.mode)){if(i===0){return[this.dateClasses.dateClass(dataPt.originIndex,dataPt.labels[i])];}else{return dataPt.labels.slice(0,1);}}else if(i===0){return Array.prototype.concat.apply([],[this.dateClasses.dateClass(dataPt.originIndex,dataPt.labels[i]),dataPt.labels.slice(i+1)]);}else{return dataPt.labels;}},_getLegendOptions:function(datasetsCount){var legendOptions={display:datasetsCount<=MAX_LEGEND_LENGTH,position:'top',onHover:this._onlegendTooltipHover.bind(this),onLeave:this._onLegendTootipLeave.bind(this),};var self=this;if(_.contains(['bar','line'],this.state.mode)){var referenceColor;if(this.state.mode==='bar'){referenceColor='backgroundColor';}else{referenceColor='borderColor';}
legendOptions.labels={generateLabels:function(chart){var data=chart.data;return data.datasets.map(function(dataset,i){return{text:self._shortenLabel(dataset.label),fullText:dataset.label,fillStyle:dataset[referenceColor],hidden:!chart.isDatasetVisible(i),lineCap:dataset.borderCapStyle,lineDash:dataset.borderDash,lineDashOffset:dataset.borderDashOffset,lineJoin:dataset.borderJoinStyle,lineWidth:dataset.borderWidth,strokeStyle:dataset[referenceColor],pointStyle:dataset.pointStyle,datasetIndex:i,};});},};}else{legendOptions.labels={generateLabels:function(chart){var data=chart.data;var metaData=data.datasets.map(function(dataset,index){return chart.getDatasetMeta(index).data;});return data.labels.map(function(label,i){var hidden=metaData.reduce(function(hidden,data){if(data[i]){hidden=hidden||data[i].hidden;}
return hidden;},false);var fullText=self._relabelling(label);var text=self._shortenLabel(fullText);return{text:text,fullText:fullText,fillStyle:label.isNoData?'#d3d3d3':self._getColor(i),hidden:hidden,index:i,};});},};}
return legendOptions;},_getScaleOptions:function(){var self=this;if(_.contains(['bar','line'],this.state.mode)){return{xAxes:[{type:'category',scaleLabel:{display:this.state.processedGroupBy.length&&!this.isEmbedded,labelString:this.state.processedGroupBy.length?this.fields[this.state.processedGroupBy[0].split(':')[0]].string:'',},ticks:{callback:function(label){return self._relabelling(label);},},}],yAxes:[{type:'linear',scaleLabel:{display:!this.isEmbedded,labelString:this.fields[this.state.measure].string,},ticks:{callback:this._formatValue.bind(this),suggestedMax:0,suggestedMin:0,}}],};}
return{};},_getTooltipItemContent:function(item,data){var dataset=data.datasets[item.datasetIndex];var label=data.labels[item.index];var value;var boxColor;if(this.state.mode==='bar'){label=this._relabelling(label,dataset.originIndex);if(this.state.processedGroupBy.length>1||this.state.origins.length>1){label=label+"/"+dataset.label;}
value=this._formatValue(item.yLabel);boxColor=dataset.backgroundColor;}else if(this.state.mode==='line'){label=this._relabelling(label,dataset.originIndex);if(this.state.processedGroupBy.length>1||this.state.origins.length>1){label=label+"/"+dataset.label;}
value=this._formatValue(item.yLabel);boxColor=dataset.borderColor;}else{if(label.isNoData){value=this._formatValue(0);}else{value=this._formatValue(dataset.data[item.index]);}
label=this._relabelling(label,dataset.originIndex);if(this.state.origins.length>1){label=dataset.label+"/"+label;}
boxColor=dataset.backgroundColor[item.index];}
return{label:label,value:value,boxColor:boxColor,};},_getTooltipItems:function(tooltipModel){var self=this;var data=this.chart.config.data;var orderedItems=tooltipModel.dataPoints.sort(function(dPt1,dPt2){return dPt2.yLabel-dPt1.yLabel;});return orderedItems.reduce(function(acc,item){acc.push(self._getTooltipItemContent(item,data));return acc;},[]);},_getTooltipOptions:function(){var tooltipOptions={enabled:false,custom:this._customTooltip.bind(this),};if(this.state.mode==='line'){tooltipOptions.mode='index';tooltipOptions.intersect=false;}
return tooltipOptions;},_isRedirectionEnabled:function(){return!this.disableLinking&&(this.state.mode==='bar'||this.state.mode==='pie');},_indexOf:function(list,label){var index=-1;for(var j=0;j<list.length;j++){var otherLabel=list[j];if(label.length===otherLabel.length){var equal=true;for(var i=0;i<label.length;i++){if(label[i]!==otherLabel[i]){equal=false;}}
if(equal){index=j;break;}}}
return index;},_prepareData:function(dataPoints){var self=this;var labelMap={};var labels=dataPoints.reduce(function(acc,dataPt){var label=self._getLabel(dataPt);var labelKey=dataPt.resId+':'+JSON.stringify(label);var index=labelMap[labelKey];if(index===undefined){labelMap[labelKey]=dataPt.labelIndex=acc.length;acc.push(label);}
else{dataPt.labelIndex=index;}
return acc;},[]);var newDataset=function(datasetLabel,originIndex){var data=new Array(self._getDatasetDataLength(originIndex,labels.length)).fill(0);const domain=new Array(self._getDatasetDataLength(originIndex,labels.length)).fill([]);return{label:datasetLabel,data:data,domain:domain,originIndex:originIndex,};};var datasets=_.values(dataPoints.reduce(function(acc,dataPt){var datasetLabel=self._getDatasetLabel(dataPt);if(!(datasetLabel in acc)){acc[datasetLabel]=newDataset(datasetLabel,dataPt.originIndex);}
var labelIndex=dataPt.labelIndex;acc[datasetLabel].data[labelIndex]=dataPt.value;acc[datasetLabel].domain[labelIndex]=dataPt.domain;return acc;},{}));datasets=datasets.sort(function(dataset1,dataset2){return dataset1.originIndex-dataset2.originIndex;});return{datasets:datasets,labels:labels,};},_prepareOptions:function(datasetsCount){const options={maintainAspectRatio:false,scales:this._getScaleOptions(),legend:this._getLegendOptions(datasetsCount),tooltips:this._getTooltipOptions(),elements:this._getElementOptions(),};if(this._isRedirectionEnabled()){options.onClick=this._onGraphClicked.bind(this);}
return options;},_relabelling:function(label,originIndex){if(label.isNoData){return label[0];}
var i=this.state.comparisonFieldIndex;if(_.contains(['bar','line'],this.state.mode)&&i===0){return this.dateClasses.representative(label,originIndex)||'';}else if(this.state.mode==='pie'&&i===0){var labelCopy=label.slice(0);if(originIndex!==undefined){labelCopy.splice(i,1,this.dateClasses.representative(label[i],originIndex));}else{labelCopy.splice(i,1,this.dateClasses.dateClassMembers(label[i]));}
return labelCopy.join('/');}
return label.join('/')||_t('Total');},async _renderView(){if(this.chart){this.chart.destroy();}
this.$el.empty();if(!_.contains(CHART_TYPES,this.state.mode)){this.trigger_up('warning',{title:_t('Invalid mode for chart'),message:_t('Cannot render chart with mode : ')+this.state.mode});}
var dataPoints=this._filterDataPoints();dataPoints=this._sortDataPoints(dataPoints);if(this.isInDOM){this._renderTitle();if(this.state.mode==='pie'){const someNegative=dataPoints.some(dataPt=>dataPt.value<0);const somePositive=dataPoints.some(dataPt=>dataPt.value>0);if(someNegative&&somePositive){const context={title:_t("Invalid data"),description:[_t("Pie chart cannot mix positive and negative numbers. "),_t("Try to change your domain to only display positive results")].join("")};this._renderNoContentHelper(context);return;}}
if(this.state.isSample&&!this.isEmbedded){this._renderNoContentHelper();}
var $canvasContainer=$('<div/>',{class:'o_graph_canvas_container'});var $canvas=$('<canvas/>').attr('id',this.chartId);$canvasContainer.append($canvas);this.$el.append($canvasContainer);var i=this.state.comparisonFieldIndex;if(i===0){this.dateClasses=this._getDateClasses(dataPoints);}
if(this.state.mode==='bar'){this._renderBarChart(dataPoints);}else if(this.state.mode==='line'){this._renderLineChart(dataPoints);}else if(this.state.mode==='pie'){this._renderPieChart(dataPoints);}}},_renderBarChart:function(dataPoints){var self=this;var data=this._prepareData(dataPoints);data.datasets.forEach(function(dataset,index){dataset.stack=self.state.stacked?self.state.origins[dataset.originIndex]:undefined;var color=self._getColor(index);dataset.backgroundColor=color;});var options=this._prepareOptions(data.datasets.length);var ctx=document.getElementById(this.chartId);this.chart=new Chart(ctx,{type:'bar',data:data,options:options,});},_renderLineChart:function(dataPoints){var self=this;var data=this._prepareData(dataPoints);data.datasets.forEach(function(dataset,index){if(self.state.processedGroupBy.length<=1&&self.state.origins.length>1){if(dataset.originIndex===0){dataset.fill='origin';dataset.backgroundColor=hexToRGBA(COLORS[0],0.4);dataset.borderColor=hexToRGBA(COLORS[0],1);}else if(dataset.originIndex===1){dataset.borderColor=hexToRGBA(COLORS[1],1);}else{dataset.borderColor=self._getColor(index);}}else{dataset.borderColor=self._getColor(index);}
if(data.labels.length===1){dataset.data.unshift(undefined);}
dataset.pointBackgroundColor=dataset.borderColor;dataset.pointBorderColor='rgba(0,0,0,0.2)';});if(data.datasets.length===1){const dataset=data.datasets[0];dataset.fill='origin';dataset.backgroundColor=hexToRGBA(COLORS[0],0.4);}
data.labels=data.labels.length>1?data.labels:Array.prototype.concat.apply([],[[['']],data.labels,[['']]]);var options=this._prepareOptions(data.datasets.length);var ctx=document.getElementById(this.chartId);this.chart=new Chart(ctx,{type:'line',data:data,options:options,});},_renderPieChart:function(dataPoints){var self=this;var data={};var colors=[];const allZero=dataPoints.every(dataPt=>dataPt.value===0);if(allZero){data.labels=[NO_DATA];data.datasets=this.state.origins.map(function(origin){return{label:origin,data:[1],backgroundColor:['#d3d3d3'],};});}else{data=this._prepareData(dataPoints);colors=data.labels.map(function(label,index){return self._getColor(index);});data.datasets.forEach(function(dataset){dataset.backgroundColor=colors;dataset.borderColor='rgba(255,255,255,0.6)';});var representedOriginIndexes=data.datasets.map(function(dataset){return dataset.originIndex;});var addNoDataToLegend=false;var fakeData=(new Array(data.labels.length)).concat([1]);this.state.origins.forEach(function(origin,originIndex){if(!_.contains(representedOriginIndexes,originIndex)){data.datasets.splice(originIndex,0,{label:origin,data:fakeData,backgroundColor:colors.concat(['#d3d3d3']),});addNoDataToLegend=true;}});if(addNoDataToLegend){data.labels.push(NO_DATA);}}
var options=this._prepareOptions(data.datasets.length);var ctx=document.getElementById(this.chartId);this.chart=new Chart(ctx,{type:'pie',data:data,options:options,});},_renderTitle:function(){if(this.title){this.$el.prepend($('<label/>',{text:this.title,}));}},_shortenLabel:function(label){var groups=label.split("/");var shortLabel=groups.slice(0,3).join("/");if(shortLabel.length>30){shortLabel=shortLabel.slice(0,30)+'...';}else if(groups.length>3){shortLabel=shortLabel+'/...';}
return shortLabel;},_sortDataPoints(dataPoints){if(!Object.keys(this.state.timeRanges).length&&this.state.orderBy&&['bar','line'].includes(this.state.mode)&&this.state.groupBy.length){const groupByFieldName=this.state.groupBy[0].split(':')[0];const groupedByMany2One=this.fields[groupByFieldName].type==='many2one';const groupedDataPoints={};dataPoints.forEach(function(dataPoint){const key=groupedByMany2One?dataPoint.resId:dataPoint.labels[0];groupedDataPoints[key]=groupedDataPoints[key]||[];groupedDataPoints[key].push(dataPoint);});dataPoints=_.sortBy(groupedDataPoints,function(group){return group.reduce((sum,dataPoint)=>sum+dataPoint.value,0);});dataPoints=dataPoints.flat();if(this.state.orderBy==='desc'){dataPoints=dataPoints.reverse('value');}}
return dataPoints;},_onGraphClicked:function(ev){const activeElement=this.chart.getElementAtEvent(ev);if(activeElement.length===0){return;}
const domain=this.chart.data.datasets[activeElement[0]._datasetIndex].domain;if(!domain){return;}
this.trigger_up('open_view',{domain:domain[activeElement[0]._index],});},_onlegendTooltipHover:function(e,legendItem){e.target.style.cursor='pointer';if(legendItem.text===legendItem.fullText||this.$legendTooltip){return;}
const chartAreaLeft=this.chart.chartArea.left;const chartAreaRight=this.chart.chartArea.right;const rendererTop=this.$el[0].getBoundingClientRect().top;this.$legendTooltip=$('<div>',{class:"o_tooltip_legend",text:legendItem.fullText,css:{maxWidth:Math.floor((chartAreaRight-chartAreaLeft)/1.68)+'px',top:(e.clientY-rendererTop)+'px',}});const $container=this.$el.find('.o_graph_canvas_container');$container.append(this.$legendTooltip);this._fixTooltipLeftPosition(this.$legendTooltip[0],e.clientX);},_onLegendTootipLeave:function(e){e.target.style.cursor="";if(this.$legendTooltip){this.$legendTooltip.remove();this.$legendTooltip=null;}},});});;

/* /web/static/src/js/views/graph/graph_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.GraphView',function(require){"use strict";var AbstractView=require('web.AbstractView');var core=require('web.core');var GraphModel=require('web.GraphModel');var Controller=require('web.GraphController');var GraphRenderer=require('web.GraphRenderer');var _t=core._t;var _lt=core._lt;var searchUtils=require('web.searchUtils');var GROUPABLE_TYPES=searchUtils.GROUPABLE_TYPES;var GraphView=AbstractView.extend({display_name:_lt('Graph'),icon:'fa-bar-chart',jsLibs:['/web/static/lib/Chart/Chart.js',],config:_.extend({},AbstractView.prototype.config,{Model:GraphModel,Controller:Controller,Renderer:GraphRenderer,}),viewType:'graph',searchMenuTypes:['filter','groupBy','comparison','favorite'],init:function(viewInfo,params){this._super.apply(this,arguments);const additionalMeasures=params.additionalMeasures||[];let measure;const measures={};const measureStrings={};let groupBys=[];const groupableFields={};this.fields.__count__={string:_t("Count"),type:'integer'};this.arch.children.forEach(field=>{let fieldName=field.attrs.name;if(fieldName==="id"){return;}
const interval=field.attrs.interval;if(interval){fieldName=fieldName+':'+interval;}
if(field.attrs.type==='measure'){const{string}=this.fields[fieldName];measure=fieldName;measures[fieldName]={description:string,fieldName,groupNumber:0,isActive:false,itemType:'measure',};}else{groupBys.push(fieldName);}
if(field.attrs.string){measureStrings[fieldName]=field.attrs.string;}});for(const name in this.fields){const field=this.fields[name];if(name!=='id'&&field.store===true){if(['integer','float','monetary'].includes(field.type)||additionalMeasures.includes(name)){measures[name]={description:field.string,fieldName:name,groupNumber:0,isActive:false,itemType:'measure',};}
if(GROUPABLE_TYPES.includes(field.type)){groupableFields[name]=field;}}}
for(const name in measureStrings){if(measures[name]){measures[name].description=measureStrings[name];}}
this.arch.children.forEach(field=>{let fieldName=field.attrs.name;if(field.attrs.invisible&&py.eval(field.attrs.invisible)){groupBys=groupBys.filter(groupBy=>groupBy!==fieldName);if(fieldName in groupableFields){delete groupableFields[fieldName];}
if(!additionalMeasures.includes(fieldName)){delete measures[fieldName];}}});const sortedMeasures=Object.values(measures).sort((a,b)=>{const descA=a.description.toLowerCase();const descB=b.description.toLowerCase();return descA>descB?1:descA<descB?-1:0;});const countMeasure={description:_t("Count"),fieldName:'__count__',groupNumber:1,isActive:false,itemType:'measure',};this.controllerParams.withButtons=params.withButtons!==false;this.controllerParams.measures=[...sortedMeasures,countMeasure];this.controllerParams.groupableFields=groupableFields;this.controllerParams.title=params.title||this.arch.attrs.string||_t("Untitled");function _findView(views,viewType){const view=views.find(view=>{return view.type===viewType;});return[view?view.viewID:false,viewType];}
this.controllerParams.views=[_findView(params.actionViews,'list'),_findView(params.actionViews,'form'),];this.rendererParams.fields=this.fields;this.rendererParams.title=this.arch.attrs.title;this.rendererParams.disableLinking=!!JSON.parse(this.arch.attrs.disable_linking||'0');this.loadParams.mode=this.arch.attrs.type||'bar';this.loadParams.orderBy=this.arch.attrs.order;this.loadParams.measure=measure||'__count__';this.loadParams.groupBys=groupBys;this.loadParams.fields=this.fields;this.loadParams.comparisonDomain=params.comparisonDomain;this.loadParams.stacked=this.arch.attrs.stacked!=="False";},});return GraphView;});;

/* /web/static/src/js/views/kanban/kanban_column.js defined in bundle 'web.assets_backend' */
odoo.define('web.KanbanColumn',function(require){"use strict";var config=require('web.config');var core=require('web.core');var session=require('web.session');var Dialog=require('web.Dialog');var KanbanRecord=require('web.KanbanRecord');var RecordQuickCreate=require('web.kanban_record_quick_create');var view_dialogs=require('web.view_dialogs');var viewUtils=require('web.viewUtils');var Widget=require('web.Widget');var KanbanColumnProgressBar=require('web.KanbanColumnProgressBar');var _t=core._t;var QWeb=core.qweb;var KanbanColumn=Widget.extend({template:'KanbanView.Group',custom_events:{cancel_quick_create:'_onCancelQuickCreate',quick_create_add_record:'_onQuickCreateAddRecord',tweak_column:'_onTweakColumn',tweak_column_records:'_onTweakColumnRecords',},events:{'click .o_column_edit':'_onEditColumn','click .o_column_delete':'_onDeleteColumn','click .o_kanban_quick_add':'_onAddQuickCreate','click .o_kanban_load_more':'_onLoadMore','click .o_kanban_toggle_fold':'_onToggleFold','click .o_column_archive_records':'_onArchiveRecords','click .o_column_unarchive_records':'_onUnarchiveRecords','click .o_kanban_config .dropdown-menu':'_onConfigDropdownClicked',},init:function(parent,data,options,recordOptions){this._super(parent);this.db_id=data.id;this.data_records=data.data;this.data=data;var value=data.value;this.id=data.res_id;this.folded=!data.isOpen;this.has_active_field='active'in data.fields;this.fields=data.fields;this.records=[];this.modelName=data.model;this.quick_create=options.quick_create;this.quickCreateView=options.quickCreateView;this.groupedBy=options.groupedBy;this.grouped_by_m2o=options.grouped_by_m2o;this.editable=options.editable;this.deletable=options.deletable;this.archivable=options.archivable;this.draggable=options.draggable;this.KanbanRecord=options.KanbanRecord||KanbanRecord;this.records_editable=options.records_editable;this.records_deletable=options.records_deletable;this.recordsDraggable=options.recordsDraggable;this.relation=options.relation;this.offset=0;this.remaining=data.count-this.data_records.length;this.canBeFolded=this.folded;if(options.hasProgressBar){this.barOptions={columnID:this.db_id,progressBarStates:options.progressBarStates,};}
this.record_options=_.clone(recordOptions);if(options.grouped_by_m2o||options.grouped_by_date){this.title=value?value:_t('Undefined');}else{this.title=value===undefined?_t('Undefined'):value;}
if(options.group_by_tooltip){this.tooltipInfo=_.compact(_.map(options.group_by_tooltip,function(help,field){help=help?help+"</br>":'';return(data.tooltipData&&data.tooltipData[field]&&"<div>"+help+data.tooltipData[field]+"</div>")||'';}));this.tooltipInfo=this.tooltipInfo.join("<div class='dropdown-divider' role='separator' />");}},start:function(){var self=this;var defs=[this._super.apply(this,arguments)];this.$header=this.$('.o_kanban_header');for(var i=0;i<this.data_records.length;i++){defs.push(this._addRecord(this.data_records[i]));}
if(this.recordsDraggable){this.$el.sortable({connectWith:'.o_kanban_group',containment:this.draggable?false:'parent',revert:0,delay:0,items:'> .o_kanban_record:not(.o_updating)',cursor:'move',over:function(){self.$el.addClass('o_kanban_hover');},out:function(){self.$el.removeClass('o_kanban_hover');},start:function(event,ui){ui.item.addClass('o_currently_dragged');},stop:function(event,ui){var item=ui.item;setTimeout(function(){item.removeClass('o_currently_dragged');});},update:function(event,ui){var record=ui.item.data('record');var index=self.records.indexOf(record);record.$el.removeAttr('style');if(index>=0){if($.contains(self.$el[0],record.$el[0])){self.trigger_up('kanban_column_resequence',{ids:self._getIDs()});}}else{ui.item.addClass('o_updating');self.trigger_up('kanban_column_add_record',{record:record,ids:self._getIDs()});}}});}
this.$el.click(function(event){if(self.folded){self._onToggleFold(event);}});if(this.barOptions){this.$el.addClass('o_kanban_has_progressbar');this.progressBar=new KanbanColumnProgressBar(this,this.barOptions,this.data);defs.push(this.progressBar.appendTo(this.$header));}
var title=this.folded?this.title+' ('+this.data.count+')':this.title;this.$header.find('.o_column_title').text(title);this.$el.toggleClass('o_column_folded',this.canBeFolded);if(this.tooltipInfo){this.$header.find('.o_kanban_header_title').tooltip({}).attr('data-original-title',this.tooltipInfo);}
if(!this.remaining){this.$('.o_kanban_load_more').remove();}else{this.$('.o_kanban_load_more').html(QWeb.render('KanbanView.LoadMore',{widget:this}));}
return Promise.all(defs);},on_attach_callback:function(){_.invoke(this.records,'on_attach_callback');if(this.quickCreateWidget){this.quickCreateWidget.on_attach_callback();}},addQuickCreate:async function(){if(this.folded){this.trigger_up('column_toggle_fold',{openQuickCreate:true,});return;}
if(this.quickCreateWidget){return Promise.reject();}
this.trigger_up('close_quick_create');var context=this.data.getContext();context['default_'+this.groupedBy]=viewUtils.getGroupValue(this.data,this.groupedBy);this.quickCreateWidget=new RecordQuickCreate(this,{context:context,formViewRef:this.quickCreateView,model:this.modelName,});await this.quickCreateWidget.appendTo(document.createDocumentFragment());this.trigger_up('start_quick_create');this.quickCreateWidget.$el.insertAfter(this.$header);this.quickCreateWidget.on_attach_callback();},cancelQuickCreate:function(){if(this.quickCreateWidget){this.quickCreateWidget.cancel();}},isEmpty:function(){return!this.records.length;},_addRecord:function(recordState,options){var record=new this.KanbanRecord(this,recordState,this.record_options);this.records.push(record);if(options&&options.position==='before'){return record.insertAfter(this.quickCreateWidget?this.quickCreateWidget.$el:this.$header);}else{var $load_more=this.$('.o_kanban_load_more');if($load_more.length){return record.insertBefore($load_more);}else{return record.appendTo(this.$el);}}},_cancelQuickCreate:function(){this.quickCreateWidget.destroy();this.quickCreateWidget=undefined;},_getIDs:function(){var ids=[];this.$('.o_kanban_record').each(function(index,r){ids.push($(r).data('record').id);});return ids;},_onAddQuickCreate:function(){this.trigger_up('add_quick_create',{groupId:this.db_id});},_onCancelQuickCreate:function(){this._cancelQuickCreate();},_onConfigDropdownClicked(ev){ev.stopPropagation();},_onDeleteColumn:function(event){event.preventDefault();var buttons=[{text:_t("Ok"),classes:'btn-primary',close:true,click:this.trigger_up.bind(this,'kanban_column_delete'),},{text:_t("Cancel"),close:true}];new Dialog(this,{size:'medium',buttons:buttons,$content:$('<div>',{text:_t("Are you sure that you want to remove this column ?")}),}).open();},_onEditColumn:function(event){event.preventDefault();new view_dialogs.FormViewDialog(this,{res_model:this.relation,res_id:this.id,context:session.user_context,title:_t("Edit Column"),on_saved:this.trigger_up.bind(this,'reload'),}).open();},_onLoadMore:function(event){event.preventDefault();this.trigger_up('kanban_load_more');},_onQuickCreateAddRecord:function(event){this.trigger_up('quick_create_record',event.data);},_onToggleFold:function(event){event.preventDefault();this.trigger_up('column_toggle_fold');},_onTweakColumn:function(ev){ev.data.callback(this.$el);},_onTweakColumnRecords:function(ev){_.each(this.records,function(record){ev.data.callback(record.$el,record.state.data);});},_onArchiveRecords:function(event){event.preventDefault();Dialog.confirm(this,_t("Are you sure that you want to archive all the records from this column?"),{confirm_callback:this.trigger_up.bind(this,'kanban_column_records_toggle_active',{archive:true,}),});},_onUnarchiveRecords:function(event){event.preventDefault();this.trigger_up('kanban_column_records_toggle_active',{archive:false,});}});return KanbanColumn;});;

/* /web/static/src/js/views/kanban/kanban_column_progressbar.js defined in bundle 'web.assets_backend' */
odoo.define('web.KanbanColumnProgressBar',function(require){'use strict';const core=require('web.core');var session=require('web.session');var utils=require('web.utils');var Widget=require('web.Widget');const _t=core._t;var KanbanColumnProgressBar=Widget.extend({template:'KanbanView.ColumnProgressBar',events:{'click .o_kanban_counter_progress':'_onProgressBarParentClick','click .progress-bar':'_onProgressBarClick',},ANIMATE:true,init:function(parent,options,columnState){this._super.apply(this,arguments);this.columnID=options.columnID;this.columnState=columnState;this.fieldName=columnState.progressBarValues.field;this.colors=_.extend({},columnState.progressBarValues.colors,{__false:'muted',});this.sumField=columnState.progressBarValues.sum_field;var state=options.progressBarStates[this.columnID];if(state){this.groupCount=state.groupCount;this.subgroupCounts=state.subgroupCounts;this.totalCounterValue=state.totalCounterValue;this.activeFilter=state.activeFilter;}
var sumFieldInfo=this.sumField&&columnState.fieldsInfo.kanban[this.sumField];var currencyField=sumFieldInfo&&sumFieldInfo.options&&sumFieldInfo.options.currency_field;if(currencyField&&columnState.data.length){this.currency=session.currencies[columnState.data[0].data[currencyField].res_id];}},start:function(){var self=this;this.$bars={};_.each(this.colors,function(val,key){self.$bars[key]=self.$(`.progress-bar[data-filter=${key}]`);});this.$counter=this.$('.o_kanban_counter_side');this.$number=this.$counter.find('b');if(this.currency){var $currency=$('<span/>',{text:this.currency.symbol,});if(this.currency.position==='before'){$currency.prependTo(this.$counter);}else{$currency.appendTo(this.$counter);}}
return this._super.apply(this,arguments).then(function(){self.computeCounters();self._notifyState();self._render();});},computeCounters(){const subgroupCounts={};let allSubgroupCount=0;for(const key of Object.keys(this.colors)){const subgroupCount=this.columnState.progressBarValues.counts[key]||0;if(this.activeFilter===key&&subgroupCount===0){this.activeFilter=false;}
subgroupCounts[key]=subgroupCount;allSubgroupCount+=subgroupCount;};subgroupCounts.__false=this.columnState.count-allSubgroupCount;this.groupCount=this.columnState.count;this.subgroupCounts=subgroupCounts;this.prevTotalCounterValue=this.totalCounterValue;this.totalCounterValue=this.sumField?(this.columnState.aggregateValues[this.sumField]||0):this.columnState.count;},_render:function(){var self=this;this.trigger_up('tweak_column',{callback:function($el){$el.removeClass('o_kanban_group_show');_.each(self.colors,function(val,key){$el.removeClass('o_kanban_group_show_'+val);});if(self.activeFilter){$el.addClass('o_kanban_group_show o_kanban_group_show_'+self.colors[self.activeFilter]);}},});this.trigger_up('tweak_column_records',{callback:function($el,recordData){var categoryValue=recordData[self.fieldName]?recordData[self.fieldName]:'__false';_.each(self.colors,function(val,key){$el.removeClass('oe_kanban_card_'+val);});if(self.colors[categoryValue]){$el.addClass('oe_kanban_card_'+self.colors[categoryValue]);}},});var barNumber=0;var barMinWidth=6;const selection=self.columnState.fields[self.fieldName].selection;_.each(self.colors,function(val,key){var $bar=self.$bars[key];var count=self.subgroupCounts&&self.subgroupCounts[key]||0;if(!$bar){return;}
let value;if(selection){const option=selection.find(option=>option[0]===key);value=option&&option[1]||_t('Other');}else{value=key;}
$bar.attr('data-original-title',count+' '+value);$bar.tooltip({delay:0,trigger:'hover',});$bar.toggleClass('progress-bar-animated progress-bar-striped',key===self.activeFilter);$bar.removeClass('o_bar_has_records transition-off');window.getComputedStyle($bar[0]).getPropertyValue('width');if(count>0){$bar.addClass('o_bar_has_records');var maxWidth=100-barMinWidth*barNumber;self.$('.progress-bar.o_bar_has_records').css('max-width',maxWidth+'%');$bar.css('width',(count*100/self.groupCount)+'%');barNumber++;$bar.attr('aria-valuemin',0);$bar.attr('aria-valuemax',self.groupCount);$bar.attr('aria-valuenow',count);}else{$bar.css('width','');}});this.$('.progress-bar').css('min-width','');this.$('.progress-bar.o_bar_has_records').css('min-width',barMinWidth+'%');var start=this.prevTotalCounterValue;var end=this.totalCounterValue;if(this.activeFilter){if(this.sumField){end=0;_.each(self.columnState.data,function(record){var recordData=record.data;if(self.activeFilter===recordData[self.fieldName]||(self.activeFilter==='__false'&&!recordData[self.fieldName])){end+=parseFloat(recordData[self.sumField]);}});}else{end=this.subgroupCounts[this.activeFilter];}}
this.prevTotalCounterValue=end;var animationClass=start>999?'o_kanban_grow':'o_kanban_grow_huge';if(start!==undefined&&(end>start||this.activeFilter)&&this.ANIMATE){$({currentValue:start}).animate({currentValue:end},{duration:1000,start:function(){self.$counter.addClass(animationClass);},step:function(){self.$number.html(_getCounterHTML(this.currentValue));},complete:function(){self.$number.html(_getCounterHTML(this.currentValue));self.$counter.removeClass(animationClass);},});}else{this.$number.html(_getCounterHTML(end));}
function _getCounterHTML(value){return utils.human_number(value,0,3);}},_notifyState:function(){this.trigger_up('set_progress_bar_state',{columnID:this.columnID,values:{groupCount:this.groupCount,subgroupCounts:this.subgroupCounts,totalCounterValue:this.totalCounterValue,activeFilter:this.activeFilter,},});},_onProgressBarClick:function(ev){this.$clickedBar=$(ev.currentTarget);var filter=this.$clickedBar.data('filter');this.activeFilter=(this.activeFilter===filter?false:filter);this._notifyState();this._render();},_onProgressBarParentClick:function(ev){if(ev.target!==ev.currentTarget){return;}
this.activeFilter=false;this._notifyState();this._render();},});return KanbanColumnProgressBar;});;

/* /web/static/src/js/views/kanban/kanban_column_quick_create.js defined in bundle 'web.assets_backend' */
odoo.define('web.kanban_column_quick_create',function(require){"use strict";var core=require('web.core');var Dialog=require('web.Dialog');var Widget=require('web.Widget');var _t=core._t;var QWeb=core.qweb;var ColumnQuickCreate=Widget.extend({template:'KanbanView.ColumnQuickCreate',events:{'click .o_quick_create_folded':'_onUnfold','click .o_kanban_add':'_onAddClicked','click .o_kanban_examples':'_onShowExamples','keydown':'_onKeydown','keypress input':'_onKeypress','blur input':'_onInputBlur','focus input':'_onInputFocus',},init:function(parent,options){this._super.apply(this,arguments);this.applyExamplesText=options.applyExampleText||_t("Use This For My Kanban");this.examples=options.examples;this.folded=true;this.isMobile=false;},start:function(){this.$quickCreateFolded=this.$('.o_quick_create_folded');this.$quickCreateUnfolded=this.$('.o_quick_create_unfolded');this.$input=this.$('input');core.bus.on('click',this,this._onWindowClicked);this._update();return this._super.apply(this,arguments);},on_attach_callback:function(){if(!this.folded){this.$input.focus();}},toggleFold:function(){this.folded=!this.folded;this._update();if(!this.folded){this.$input.focus();this.trigger_up('scrollTo',{selector:'.o_column_quick_create'});}},_add:function(){var value=this.$input.val().trim();if(!value.length){this._cancel();return;}
this.$input.val('');this.trigger_up('quick_create_add_column',{value:value});this.$input.focus();},_cancel:function(){if(!this.folded){this.$input.val('');this.folded=true;this._update();}},_update:function(){this.$quickCreateFolded.toggle(this.folded);this.$quickCreateUnfolded.toggle(!this.folded);this.trigger_up('quick_create_column_updated');},_onAddClicked:function(event){event.stopPropagation();this._add();},_onInputBlur:function(){this.$('.o_discard_msg').hide();},_onInputFocus:function(){this.$('.o_discard_msg').show();},_onKeydown:function(event){if(event.keyCode===$.ui.keyCode.ESCAPE){this._cancel();}},_onKeypress:function(event){if(event.keyCode===$.ui.keyCode.ENTER){this._add();}},_onShowExamples:function(){var self=this;var dialog=new Dialog(this,{$content:$(QWeb.render('KanbanView.ExamplesDialog',{examples:this.examples,})),buttons:[{classes:'btn-primary float-right',text:this.applyExamplesText,close:true,click:function(){const activeExample=self.examples[this.$('.nav-link.active').data("exampleIndex")];activeExample.columns.forEach(column=>{self.trigger_up('quick_create_add_column',{value:column.toString(),foldQuickCreate:true});});}},{classes:'btn-secondary float-right',close:true,text:_t('Close'),}],size:"large",title:"Kanban Examples",}).open();dialog.on('closed',this,function(){self.$input.focus();});},_onUnfold:function(){if(this.folded){this.toggleFold();}},_onWindowClicked:function(event){if(!document.contains(this.el)){return;}
if($(event.target).closest('.modal').length){return;}
if(this.el.contains(event.target)){return;}
this._cancel();},});return ColumnQuickCreate;});;

/* /web/static/src/js/views/kanban/kanban_model.js defined in bundle 'web.assets_backend' */
odoo.define('web.KanbanModel',function(require){"use strict";var BasicModel=require('web.BasicModel');var viewUtils=require('web.viewUtils');var KanbanModel=BasicModel.extend({addRecordToGroup:function(groupID,resId){var self=this;var group=this.localData[groupID];var new_record=this._makeDataPoint({res_id:resId,modelName:group.model,fields:group.fields,fieldsInfo:group.fieldsInfo,viewType:group.viewType,parentID:groupID,});var def=this._fetchRecord(new_record).then(function(result){group.data.unshift(new_record.id);group.res_ids.unshift(resId);group.count++;self.localData[group.parentID].count++;self._updateParentResIDs(group);return result.id;});return this._reloadProgressBarGroupFromRecord(new_record.id,def);},createGroup:function(name,parentID){var self=this;var parent=this.localData[parentID];var groupBy=parent.groupedBy[0];var groupByField=parent.fields[groupBy];if(!groupByField||groupByField.type!=='many2one'){return Promise.reject();}
return this._rpc({model:groupByField.relation,method:'name_create',args:[name],context:parent.context,}).then(function(result){const createGroupDataPoint=(model,parent)=>{const newGroup=model._makeDataPoint({modelName:parent.model,context:parent.context,domain:parent.domain.concat([[groupBy,"=",result[0]]]),fields:parent.fields,fieldsInfo:parent.fieldsInfo,isOpen:true,limit:parent.limit,parentID:parent.id,openGroupByDefault:true,orderedBy:parent.orderedBy,value:result,viewType:parent.viewType,});if(parent.progressBar){newGroup.progressBarValues=_.extend({counts:{},},parent.progressBar);}
return newGroup;};const newGroup=createGroupDataPoint(self,parent);parent.data.push(newGroup.id);if(self.isInSampleMode()){const sampleParent=self.sampleModel.localData[parentID];const newSampleGroup=createGroupDataPoint(self.sampleModel,sampleParent);sampleParent.data.push(newSampleGroup.id);}
return newGroup.id;});},createRecordInGroup:function(groupID,values){var self=this;var group=this.localData[groupID];var context=this._getContext(group);var parent=this.localData[group.parentID];var groupedBy=parent.groupedBy;context['default_'+groupedBy]=viewUtils.getGroupValue(group,groupedBy);var def;if(Object.keys(values).length===1&&'display_name'in values){def=this._rpc({model:parent.model,method:'name_create',args:[values.display_name],context:context,}).then(function(records){return records[0];});}else{def=this._rpc({model:parent.model,method:'create',args:[values],context:context,});}
return def.then(function(resID){return self.addRecordToGroup(group.id,resID);});},__get:function(){var result=this._super.apply(this,arguments);var dp=result&&this.localData[result.id];if(dp){if(dp.tooltipData){result.tooltipData=$.extend(true,{},dp.tooltipData);}
if(dp.progressBarValues){result.progressBarValues=$.extend(true,{},dp.progressBarValues);}
if(dp.fields[dp.groupedBy[0]]){var groupedByM2O=dp.fields[dp.groupedBy[0]].type==='many2one';result.isGroupedByM2ONoColumn=!dp.data.length&&groupedByM2O;}else{result.isGroupedByM2ONoColumn=false;}}
return result;},getColumn:function(id){var element=this.localData[id];if(element){return this.get(element.parentID);}
return null;},__load:function(params){this.defaultGroupedBy=params.groupBy||[];params.groupedBy=(params.groupedBy&&params.groupedBy.length)?params.groupedBy:this.defaultGroupedBy;return this._super(params);},loadMore:function(groupID){var group=this.localData[groupID];var offset=group.loadMoreOffset+group.limit;return this.reload(group.id,{loadMoreOffset:offset,});},moveRecord:function(recordID,groupID,parentID){var self=this;var parent=this.localData[parentID];var new_group=this.localData[groupID];var changes={};var groupedFieldName=parent.groupedBy[0];var groupedField=parent.fields[groupedFieldName];if(groupedField.type==='many2one'){changes[groupedFieldName]={id:new_group.res_id,display_name:new_group.value,};}else if(groupedField.type==='selection'){var value=_.findWhere(groupedField.selection,{1:new_group.value});changes[groupedFieldName]=value&&value[0]||false;}else{changes[groupedFieldName]=new_group.value;}
var record=self.localData[recordID];var resID=record.res_id;var old_group;for(var i=0;i<parent.data.length;i++){old_group=self.localData[parent.data[i]];var index=_.indexOf(old_group.data,recordID);if(index>=0){old_group.data.splice(index,1);old_group.count--;old_group.res_ids=_.without(old_group.res_ids,resID);self._updateParentResIDs(old_group);break;}}
new_group.data.push(recordID);new_group.res_ids.push(resID);new_group.count++;return this.notifyChanges(recordID,changes).then(function(){return self.save(recordID);}).then(function(){record.parentID=new_group.id;return[old_group.id,new_group.id];});},reload:function(id,options){if(options&&options.groupBy&&!options.groupBy.length){options.groupBy=this.defaultGroupedBy;}
return this._super(id,options);},__reload:function(id,options){var def=this._super(id,options);if(options&&options.loadMoreOffset){return def;}
return this._reloadProgressBarGroupFromRecord(id,def);},save:function(recordID){var def=this._super.apply(this,arguments);return this._reloadProgressBarGroupFromRecord(recordID,def);},_makeDataPoint:function(params){var dataPoint=this._super.apply(this,arguments);if(params.progressBar){dataPoint.progressBar=params.progressBar;}
return dataPoint;},_load:function(dataPoint,options){if(dataPoint.groupedBy.length&&dataPoint.progressBar){return this._readProgressBarGroup(dataPoint,options);}
return this._super.apply(this,arguments);},_readGroup:function(list){var self=this;if(list.groupedBy.length>1){list.groupedBy=[list.groupedBy[0]];}
return this._super.apply(this,arguments).then(function(result){return self._readTooltipFields(list).then(_.constant(result));});},_readProgressBarGroup:function(list,options){var self=this;var groupsDef=this._readGroup(list,options);var progressBarDef=this._rpc({model:list.model,method:'read_progress_bar',kwargs:{domain:list.domain,group_by:list.groupedBy[0],progress_bar:list.progressBar,context:list.context,},});return Promise.all([groupsDef,progressBarDef]).then(function(results){var data=results[1];_.each(list.data,function(groupID){var group=self.localData[groupID];group.progressBarValues=_.extend({counts:data[group.value]||{},},list.progressBar);});return list;});},_readTooltipFields:function(list){var self=this;var groupedByField=list.fields[list.groupedBy[0].split(':')[0]];if(groupedByField.type!=='many2one'){return Promise.resolve();}
var groupIds=_.reduce(list.data,function(groupIds,id){var res_id=self.get(id,{raw:true}).res_id;if(res_id){groupIds.push(res_id);}
return groupIds;},[]);var tooltipFields=[];var groupedByFieldInfo=list.fieldsInfo.kanban[list.groupedBy[0]];if(groupedByFieldInfo&&groupedByFieldInfo.options){tooltipFields=Object.keys(groupedByFieldInfo.options.group_by_tooltip||{});}
if(groupIds.length&&tooltipFields.length){var fieldNames=_.union(['display_name'],tooltipFields);return this._rpc({model:groupedByField.relation,method:'read',args:[groupIds,fieldNames],context:list.context,}).then(function(result){_.each(list.data,function(id){var dp=self.localData[id];dp.tooltipData=_.findWhere(result,{id:dp.res_id});});});}
return Promise.resolve();},_reloadProgressBarGroupFromRecord:function(recordID,def){var element=this.localData[recordID];if(element.type==='list'&&!element.parentID){return def;}
var self=this;while(element){if(element.progressBar){return def.then(function(data){return self._load(element,{keepEmptyGroups:true,onlyGroups:true,}).then(function(){return data;});});}
element=this.localData[element.parentID];}
return def;},});return KanbanModel;});;

/* /web/static/src/js/views/kanban/kanban_controller.js defined in bundle 'web.assets_backend' */
odoo.define('web.KanbanController',function(require){"use strict";var BasicController=require('web.BasicController');var Context=require('web.Context');var core=require('web.core');var Dialog=require('web.Dialog');var Domain=require('web.Domain');var view_dialogs=require('web.view_dialogs');var viewUtils=require('web.viewUtils');var _t=core._t;var qweb=core.qweb;var KanbanController=BasicController.extend({buttons_template:'KanbanView.buttons',custom_events:_.extend({},BasicController.prototype.custom_events,{add_quick_create:'_onAddQuickCreate',quick_create_add_column:'_onAddColumn',quick_create_record:'_onQuickCreateRecord',resequence_columns:'_onResequenceColumn',button_clicked:'_onButtonClicked',kanban_record_delete:'_onRecordDelete',kanban_record_update:'_onUpdateRecord',kanban_column_delete:'_onDeleteColumn',kanban_column_add_record:'_onAddRecordToColumn',kanban_column_resequence:'_onColumnResequence',kanban_load_more:'_onLoadMore',column_toggle_fold:'_onToggleColumn',kanban_column_records_toggle_active:'_onToggleActiveRecords',}),init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.on_create=params.on_create;this.hasButtons=params.hasButtons;this.quickCreateEnabled=params.quickCreateEnabled;},renderButtons:function($node){if(!this.hasButtons||!this.is_action_enabled('create')){return;}
this.$buttons=$(qweb.render(this.buttons_template,{btnClass:'btn-primary',widget:this,}));this.$buttons.on('click','button.o-kanban-button-new',this._onButtonNew.bind(this));this.$buttons.on('keydown',this._onButtonsKeyDown.bind(this));if($node){this.$buttons.appendTo($node);}},updateButtons:function(){if(!this.$buttons){return;}
var state=this.model.get(this.handle,{raw:true});var createHidden=this.is_action_enabled('group_create')&&state.isGroupedByM2ONoColumn;this.$buttons.find('.o-kanban-button-new').toggleClass('o_hidden',createHidden);},_addQuickCreate(groupId){this._removeSampleData(async()=>{await this.update({shouldUpdateSearchComponents:false},{reload:false});return this.renderer.addQuickCreate(groupId);});},_confirmSave:function(id){var data=this.model.get(this.handle,{raw:true});var grouped=data.groupedBy.length;if(grouped){var columnState=this.model.getColumn(id);return this.renderer.updateColumn(columnState.id,columnState);}
return this.renderer.updateRecord(this.model.get(id));},_getPagingInfo:function(state){if(!(state.count&&!state.groupedBy.length)){return null;}
return this._super(...arguments);},_reloadAfterButtonClick:function(kanbanRecord,params){var self=this;var recordModel=this.model.localData[params.record.id];var group=this.model.localData[recordModel.parentID];var parent=this.model.localData[group.parentID];this.model.reload(params.record.id).then(function(db_id){var data=self.model.get(db_id);kanbanRecord.update(data);var domain=(parent?parent.domain:group.domain)||[];var domInData=_.every(domain,function(d){return d[0]in data.data;});var activeInDomain=_.pluck(domain,0).indexOf('active')!==-1;var activeInData='active'in data.data;if(domInData&&!activeInDomain&&activeInData){domain=domain.concat([['active','=',true]]);}else if(!domInData&&!activeInDomain&&activeInData){domain=[['active','=',true]];}
try{var visible=new Domain(domain).compute(data.evalContext);}catch(e){return;}
if(!visible){kanbanRecord.destroy();}});},_resequenceColumns:function(ids){var state=this.model.get(this.handle,{raw:true});var model=state.fields[state.groupedBy[0]].relation;return this.model.resequence(model,ids,this.handle);},_resequenceRecords:function(column_id,ids){var self=this;return this.model.resequence(this.modelName,ids,column_id);},_shouldBounceOnClick(element){const state=this.model.get(this.handle,{raw:true});if(!state.count||state.isSample){const classesList=['o_kanban_view','o_kanban_group','o_kanban_header','o_column_quick_create','o_view_nocontent_smiling_face',];return classesList.some(c=>element.classList.contains(c));}
return false;},_onAddColumn:function(ev){var self=this;this.mutex.exec(function(){return self.model.createGroup(ev.data.value,self.handle).then(function(){var state=self.model.get(self.handle,{raw:true});var ids=_.pluck(state.data,'res_id').filter(_.isNumber);return self._resequenceColumns(ids);}).then(function(){return self.update({},{reload:false});}).then(function(){let quickCreateFolded=self.renderer.quickCreate.folded;if(ev.data.foldQuickCreate?!quickCreateFolded:quickCreateFolded){self.renderer.quickCreateToggleFold();}
self.renderer.trigger_up("quick_create_column_created");});});},_onAddRecordToColumn:function(ev){var self=this;var record=ev.data.record;var column=ev.target;this.alive(this.model.moveRecord(record.db_id,column.db_id,this.handle)).then(function(column_db_ids){return self._resequenceRecords(column.db_id,ev.data.ids).then(function(){_.each(column_db_ids,function(db_id){var data=self.model.get(db_id);self.renderer.updateColumn(db_id,data);});});}).guardedCatch(this.reload.bind(this));},_onAddQuickCreate(ev){ev.stopPropagation();this._addQuickCreate(ev.data.groupId);},_onButtonClicked:function(ev){var self=this;ev.stopPropagation();var attrs=ev.data.attrs;var record=ev.data.record;var def=Promise.resolve();if(attrs.context){attrs.context=new Context(attrs.context).set_eval_context({active_id:record.res_id,active_ids:[record.res_id],active_model:record.model,});}
if(attrs.confirm){def=new Promise(function(resolve,reject){Dialog.confirm(this,attrs.confirm,{confirm_callback:resolve,cancel_callback:reject,}).on("closed",null,reject);});}
def.then(function(){self.trigger_up('execute_action',{action_data:attrs,env:{context:record.getContext(),currentID:record.res_id,model:record.model,resIDs:record.res_ids,},on_closed:self._reloadAfterButtonClick.bind(self,ev.target,ev.data),});});},_onButtonNew:function(){var state=this.model.get(this.handle,{raw:true});var quickCreateEnabled=this.quickCreateEnabled&&viewUtils.isQuickCreateEnabled(state);if(this.on_create==='quick_create'&&quickCreateEnabled&&state.data.length){this.mutex.getUnlockedDef().then(this._addQuickCreate.bind(this,null));}else if(this.on_create&&this.on_create!=='quick_create'){this.do_action(this.on_create,{on_close:this.reload.bind(this,{}),additional_context:state.context,});}else{this.trigger_up('switch_view',{view_type:'form',res_id:undefined});}},_onButtonsKeyDown:function(ev){switch(ev.keyCode){case $.ui.keyCode.DOWN:this._giveFocus();}},_onColumnResequence:function(ev){this._resequenceRecords(ev.target.db_id,ev.data.ids);},_onDeleteColumn:function(ev){var column=ev.target;var state=this.model.get(this.handle,{raw:true});var relatedModelName=state.fields[state.groupedBy[0]].relation;this.model.deleteRecords([column.db_id],relatedModelName).then(this.update.bind(this,{},{}));},_onLoadMore:function(ev){var self=this;var column=ev.target;this.model.loadMore(column.db_id).then(function(db_id){var data=self.model.get(db_id);self.renderer.updateColumn(db_id,data);});},_onQuickCreateRecord:function(ev){var self=this;var values=ev.data.values;var column=ev.target;var onFailure=ev.data.onFailure||function(){};var update=function(db_id){var columnState=self.model.getColumn(db_id);var state=self.model.get(self.handle);return self.renderer.updateColumn(columnState.id,columnState,{openQuickCreate:true,state:state}).then(function(){if(ev.data.openRecord){self.trigger_up('open_record',{id:db_id,mode:'edit'});}});};this.model.createRecordInGroup(column.db_id,values).then(update).guardedCatch(function(reason){reason.event.preventDefault();var columnState=self.model.get(column.db_id,{raw:true});var context=columnState.getContext();var state=self.model.get(self.handle,{raw:true});var groupedBy=state.groupedBy[0];context['default_'+groupedBy]=viewUtils.getGroupValue(columnState,groupedBy);new view_dialogs.FormViewDialog(self,{res_model:state.model,context:_.extend({default_name:values.name||values.display_name},context),title:_t("Create"),disable_multiple_selection:true,on_saved:function(record){self.model.addRecordToGroup(column.db_id,record.res_id).then(update);},}).open().opened(onFailure);});},_onRecordDelete:function(ev){this._deleteRecords([ev.data.id]);},_onResequenceColumn:function(ev){var self=this;this._resequenceColumns(ev.data.ids);},_onToggleColumn:function(ev){var self=this;const columnID=ev.target.db_id||ev.data.db_id;this.model.toggleGroup(columnID).then(function(db_id){var data=self.model.get(db_id);var options={openQuickCreate:!!ev.data.openQuickCreate,};return self.renderer.updateColumn(db_id,data,options);}).then(function(){if(ev.data.onSuccess){ev.data.onSuccess();}});},_onUpdateRecord:function(ev){var onSuccess=ev.data.onSuccess;delete ev.data.onSuccess;var changes=_.clone(ev.data);ev.data.force_save=true;this._applyChanges(ev.target.db_id,changes,ev).then(onSuccess);},_onToggleActiveRecords:function(ev){var self=this;var archive=ev.data.archive;var column=ev.target;var recordIds=_.pluck(column.records,'id');if(recordIds.length){var prom=archive?this.model.actionArchive(recordIds,column.db_id):this.model.actionUnarchive(recordIds,column.db_id);prom.then(function(dbID){var data=self.model.get(dbID);if(data){self.model.reload(self.handle).then(function(){const state=self.model.get(self.handle);self.renderer.updateColumn(dbID,data,{state});});}});}},});return KanbanController;});;

/* /web/static/src/js/views/kanban/kanban_examples_registry.js defined in bundle 'web.assets_backend' */
odoo.define('web.kanban_examples_registry',function(require){"use strict";var Registry=require('web.Registry');return new Registry();});;

/* /web/static/src/js/views/kanban/kanban_record.js defined in bundle 'web.assets_backend' */
odoo.define('web.KanbanRecord',function(require){"use strict";var config=require('web.config');var core=require('web.core');var Domain=require('web.Domain');var Dialog=require('web.Dialog');var field_utils=require('web.field_utils');const FieldWrapper=require('web.FieldWrapper');var utils=require('web.utils');var Widget=require('web.Widget');var widgetRegistry=require('web.widget_registry');var _t=core._t;var QWeb=core.qweb;var KANBAN_RECORD_COLORS=require('web.basic_fields').FieldColorPicker.prototype.RECORD_COLORS;var NB_KANBAN_RECORD_COLORS=KANBAN_RECORD_COLORS.length;var KanbanRecord=Widget.extend({events:{'click .oe_kanban_action':'_onKanbanActionClicked','click .o_kanban_manage_toggle_button':'_onManageTogglerClicked',},init:function(parent,state,options){this._super(parent);this.fields=state.fields;this.fieldsInfo=state.fieldsInfo.kanban;this.modelName=state.model;this.options=options;this.editable=options.editable;this.deletable=options.deletable;this.read_only_mode=options.read_only_mode;this.selectionMode=options.selectionMode;this.qweb=options.qweb;this.subWidgets={};this._setState(state);this._onKanbanActionClicked=_.debounce(this._onKanbanActionClicked,300,true);},start:function(){return Promise.all([this._super.apply(this,arguments),this._render()]);},on_attach_callback:function(){this.isInDOM=true;_.invoke(this.subWidgets,'on_attach_callback');},on_detach_callback:function(){this.isInDOM=false;_.invoke(this.subWidgets,'on_detach_callback');},update:function(state){_.invoke(_.pluck(this.subWidgets,'$el'),'detach');this._setState(state);return this._render();},_attachTooltip:function(){var self=this;this.$('[tooltip]').each(function(){var $el=$(this);var tooltip=$el.attr('tooltip');if(tooltip){$el.tooltip({title:self.qweb.render(tooltip,self.qweb_context)});}});},_computeDomain:function(d){return new Domain(d).compute(this.state.evalContext);},_getColorClassname:function(variable){var color=this._getColorID(variable);return'oe_kanban_color_'+color;},_getColorID:function(variable){if(typeof variable==='number'){return Math.round(variable)%NB_KANBAN_RECORD_COLORS;}
if(typeof variable==='string'){var index=0;for(var i=0;i<variable.length;i++){index+=variable.charCodeAt(i);}
return index%NB_KANBAN_RECORD_COLORS;}
return 0;},_getColorname:function(variable){var colorID=this._getColorID(variable);return KANBAN_RECORD_COLORS[colorID];},file_type_magic_word:{'/':'jpg','R':'gif','i':'png','P':'svg+xml',},_getImageURL:function(model,field,id,placeholder){id=(_.isArray(id)?id[0]:id)||null;var isCurrentRecord=this.modelName===model&&this.recordData.id===id;var url;if(isCurrentRecord&&this.record[field]&&this.record[field].raw_value&&!utils.is_bin_size(this.record[field].raw_value)){url='data:image/'+this.file_type_magic_word[this.record[field].raw_value[0]]+';base64,'+this.record[field].raw_value;}else if(placeholder&&(!model||!field||!id||(isCurrentRecord&&this.record[field]&&!this.record[field].raw_value))){url=placeholder;}else{var session=this.getSession();var params={model:model,field:field,id:id};if(isCurrentRecord){params.unique=this.record.__last_update&&this.record.__last_update.value.replace(/[^0-9]/g,'');}
url=session.url('/web/image',params);}
return url;},_openRecord:function(){if(this.$el.hasClass('o_currently_dragged')){return;}
var editMode=this.$el.hasClass('oe_kanban_global_click_edit');this.trigger_up('open_record',{id:this.db_id,mode:editMode?'edit':'readonly',});},_processFields:function(){var self=this;this.$("field").each(function(){var $field=$(this);var field_name=$field.attr("name");var field_widget=$field.attr("widget");if(field_widget||self.fields[field_name].type==='many2many'){var widget=self.subWidgets[field_name];if(!widget){var Widget=self.fieldsInfo[field_name].Widget;if(Widget){widget=self._processWidget($field,field_name,Widget);self.subWidgets[field_name]=widget;}else if(config.isDebug()){$field.replaceWith($('<span>',{text:_.str.sprintf(_t('[No widget %s]'),field_widget),}));}}else{widget.reset(self.state);$field.replaceWith(widget.$el);if(self.isInDOM&&widget.on_attach_callback){widget.on_attach_callback();}}}else{self._processField($field,field_name);}});},_processField:function($field,field_name){var field=this.fields[field_name];var value=this.recordData[field_name];var options={data:this.recordData,forceString:true};var formatted_value=field_utils.format[field.type](value,field,options);var $result=$('<span>',{text:formatted_value,});$field.replaceWith($result);this._setFieldDisplay($result,field_name);return $result;},_processWidget:function($field,field_name,Widget){var self=this;var attrs=Object.create(null);_.each(this.fieldsInfo[field_name],function(value,key){if(_.str.startsWith(key,'t-att-')){key=key.slice(6);value=$field.attr(key);}
attrs[key]=value;});var options=_.extend({},this.options,{attrs:attrs});let widget;let def;if(utils.isComponent(Widget)){widget=new FieldWrapper(this,Widget,{fieldName:field_name,record:this.state,options:options,});def=widget.mount(document.createDocumentFragment()).then(()=>{$field.replaceWith(widget.$el);});}else{widget=new Widget(this,field_name,this.state,options);def=widget.replace($field);}
this.defs.push(def);def.then(function(){self._setFieldDisplay(widget.$el,field_name);});return widget;},_processWidgets:function(){var self=this;this.$("widget").each(function(){var $field=$(this);var Widget=widgetRegistry.get($field.attr('name'));var widget=new Widget(self,self.state);var def=widget._widgetRenderAndInsert(function(){});self.defs.push(def);def.then(function(){$field.replaceWith(widget.$el);widget.$el.addClass('o_widget');});});},_render:function(){this.defs=[];_.invoke(this.subWidgets,'on_detach_callback');this._replaceElement(this.qweb.render('kanban-box',this.qweb_context));this.$el.addClass('o_kanban_record').attr("tabindex",0);this.$el.attr('role','article');this.$el.data('record',this);if(this.selectionMode){this.$el.addClass('oe_kanban_global_click');}
if(this.$el.hasClass('oe_kanban_global_click')||this.$el.hasClass('oe_kanban_global_click_edit')){this.$el.on('click',this._onGlobalClick.bind(this));this.$el.on('keydown',this._onKeyDownCard.bind(this));}else{this.$el.on('keydown',this._onKeyDownOpenFirstLink.bind(this));}
this._processFields();this._processWidgets();this._setupColor();this._setupColorPicker();this._attachTooltip();this.$('span.o_tag').tooltip({delay:{'show':50}});return Promise.all(this.defs);},_setCoverImage:function(fieldName,autoOpen){var self=this;this._rpc({model:'ir.attachment',method:'search_read',domain:[['res_model','=',this.modelName],['res_id','=',this.id],['mimetype','ilike','image']],fields:['id','name'],}).then(function(attachmentIds){self.imageUploadID=_.uniqueId('o_cover_image_upload');self.accepted_file_extensions='image/*';self.attachment_count=attachmentIds.length;var coverId=self.record[fieldName]&&self.record[fieldName].raw_value;var $content=$(QWeb.render('KanbanView.SetCoverModal',{coverId:coverId,attachmentIds:attachmentIds,widget:self,}));var $imgs=$content.find('.o_kanban_cover_image');var dialog=new Dialog(self,{title:_t("Set a Cover Image"),$content:$content,buttons:[{text:_t("Select"),classes:attachmentIds.length?'btn-primary':'d-none',close:true,disabled:!coverId,click:function(){var $img=$imgs.filter('.o_selected').find('img');var data={};data[fieldName]={id:$img.data('id'),display_name:$img.data('name')};self.trigger_up('kanban_record_update',data);},},{text:_t('Upload and Set'),classes:attachmentIds.length?'':'btn-primary',close:false,click:function(){$content.find('input.o_input_file').click();},},{text:_t("Remove Cover Image"),classes:coverId?'':'d-none',close:true,click:function(){var data={};data[fieldName]=false;self.trigger_up('kanban_record_update',data);},},{text:_t("Discard"),close:true,}],});dialog.opened().then(function(){var $selectBtn=dialog.$footer.find('.btn-primary');if(autoOpen&&!self.attachment_count){$selectBtn.click();}
$content.on('click','.o_kanban_cover_image',function(ev){$imgs.not(ev.currentTarget).removeClass('o_selected');$selectBtn.prop('disabled',!$(ev.currentTarget).toggleClass('o_selected').hasClass('o_selected'));});$content.on('dblclick','.o_kanban_cover_image',function(ev){var $img=$(ev.currentTarget).find('img');var data={};data[fieldName]={id:$img.data('id'),display_name:$img.data('name')};self.trigger_up('kanban_record_update',data);dialog.close();});$content.on('change','input.o_input_file',function(){$content.find('form.o_form_binary_form').submit();});$(window).on(self.imageUploadID,function(){var images=Array.prototype.slice.call(arguments,1);var data={};data[fieldName]={id:images[0].id,display_name:images[0].filename};self.trigger_up('kanban_record_update',data);dialog.close();});});dialog.open();});},_setFieldDisplay:function($el,fieldName){if(this.fieldsInfo[fieldName].display==='right'){$el.addClass('float-right');}else if(this.fieldsInfo[fieldName].display==='full'){$el.addClass('o_text_block');}
if(this.fieldsInfo[fieldName].bold){$el.addClass('o_text_bold');}},_setState:function(recordState){this.state=recordState;this.id=recordState.res_id;this.db_id=recordState.id;this.recordData=recordState.data;this.record=this._transformRecord(recordState.data);this.qweb_context={context:this.state.getContext(),kanban_image:this._getImageURL.bind(this),kanban_color:this._getColorClassname.bind(this),kanban_getcolor:this._getColorID.bind(this),kanban_getcolorname:this._getColorname.bind(this),kanban_compute_domain:this._computeDomain.bind(this),selection_mode:this.selectionMode,read_only_mode:this.read_only_mode,record:this.record,user_context:this.getSession().user_context,widget:this,};},_setupColor:function(){var color_field=this.$el.attr('color');if(color_field&&color_field in this.fields){var colorHelp=_.str.sprintf(_t("Card color: %s"),this._getColorname(this.recordData[color_field]));var colorClass=this._getColorClassname(this.recordData[color_field]);this.$el.addClass(colorClass);this.$el.prepend('<span title="'+colorHelp+'" aria-label="'+colorHelp+'" role="img" class="oe_kanban_color_help"/>');}},_setupColorPicker:function(){var $colorpicker=this.$('ul.oe_kanban_colorpicker');if(!$colorpicker.length){return;}
$colorpicker.html(QWeb.render('KanbanColorPicker',{colors:KANBAN_RECORD_COLORS}));$colorpicker.on('click','a',this._onColorChanged.bind(this));},_transformRecord:function(recordData){var self=this;var new_record={};_.each(this.state.getFieldNames(),function(name){var value=recordData[name];var r=_.clone(self.fields[name]||{});if((r.type==='date'||r.type==='datetime')&&value){r.raw_value=value.toDate();}else if(r.type==='one2many'||r.type==='many2many'){r.raw_value=value.count?value.res_ids:[];}else if(r.type==='many2one'){r.raw_value=value&&value.res_id||false;}else{r.raw_value=value;}
if(r.type){var formatter=field_utils.format[r.type];r.value=formatter(value,self.fields[name],recordData,self.state);}else{r.value=value;}
new_record[name]=r;});return new_record;},_updateRecord:function(data){this.trigger_up('kanban_record_update',data);},_onColorChanged:function(event){event.preventDefault();var data={};var color_field=$(event.delegateTarget).data('field')||'color';data[color_field]=$(event.currentTarget).data('color');this.trigger_up('kanban_record_update',data);},_onGlobalClick:function(event){if($(event.target).parents('.o_dropdown_kanban').length){return;}
var trigger=true;var elem=event.target;var ischild=true;var children=[];while(elem){var events=$._data(elem,'events');if(elem===event.currentTarget){ischild=false;}
var test_event=events&&events.click&&(events.click.length>1||events.click[0].namespace!=='bs.tooltip');var testLinkWithHref=elem.nodeName.toLowerCase()==='a'&&elem.href;if(ischild){children.push(elem);if(test_event||testLinkWithHref){trigger=false;}}
if(trigger&&test_event){_.each(events.click,function(click_event){if(click_event.selector){_.each(children,function(child){if($(child).is(click_event.selector)){trigger=false;}});}});}
elem=elem.parentElement;}
if(trigger){this._openRecord();}},_onKanbanActionClicked:function(event){event.preventDefault();var $action=$(event.currentTarget);var type=$action.data('type')||'button';switch(type){case'edit':this.trigger_up('open_record',{id:this.db_id,mode:'edit'});break;case'open':this.trigger_up('open_record',{id:this.db_id});break;case'delete':this.trigger_up('kanban_record_delete',{id:this.db_id,record:this});break;case'action':case'object':var attrs=$action.data();attrs.confirm=$action.attr('confirm');this.trigger_up('button_clicked',{attrs:attrs,record:this.state,});break;case'set_cover':var fieldName=$action.data('field');var autoOpen=$action.data('auto-open');if(this.fields[fieldName].type==='many2one'&&this.fields[fieldName].relation==='ir.attachment'&&this.fieldsInfo[fieldName].widget==='attachment_image'){this._setCoverImage(fieldName,autoOpen);}else{var warning=_.str.sprintf(_t('Could not set the cover image: incorrect field ("%s") is provided in the view.'),fieldName);this.do_warn(warning);}
break;default:this.do_warn(false,_t("Kanban: no action for type: ")+type);}},_onKeyDownCard:function(event){switch(event.keyCode){case $.ui.keyCode.ENTER:if($(event.target).hasClass('oe_kanban_global_click')){event.preventDefault();this._onGlobalClick(event);break;}}},_onKeyDownOpenFirstLink:function(event){switch(event.keyCode){case $.ui.keyCode.ENTER:event.preventDefault();$(event.target).find('a, button').first().click();break;}},_onManageTogglerClicked:function(event){event.preventDefault();this.$el.parent().find('.o_kanban_record').not(this.$el).removeClass('o_dropdown_open');this.$el.toggleClass('o_dropdown_open');var colorClass=this._getColorClassname(this.recordData.color||0);this.$('.o_kanban_manage_button_section').toggleClass(colorClass);},});return KanbanRecord;});;

/* /web/static/src/js/views/kanban/kanban_record_quick_create.js defined in bundle 'web.assets_backend' */
odoo.define('web.kanban_record_quick_create',function(require){"use strict";var core=require('web.core');var QuickCreateFormView=require('web.QuickCreateFormView');const session=require('web.session');var Widget=require('web.Widget');var RecordQuickCreate=Widget.extend({className:'o_kanban_quick_create',custom_events:{add:'_onAdd',cancel:'_onCancel',},events:{'click .o_kanban_add':'_onAddClicked','click .o_kanban_edit':'_onEditClicked','click .o_kanban_cancel':'_onCancelClicked',},init:function(parent,options){this._super.apply(this,arguments);this.context=options.context;this.formViewRef=options.formViewRef;this.model=options.model;this._disabled=false;},willStart:function(){var self=this;var superWillStart=this._super.apply(this,arguments);var viewsLoaded;if(this.formViewRef){var views=[[false,'form']];var context=_.extend({},this.context,{form_view_ref:this.formViewRef,});viewsLoaded=this.loadViews(this.model,context,views);}else{var fieldsView={};fieldsView.arch='<form>'+'<field name="display_name" placeholder="Title" modifiers=\'{"required": true}\'/>'+'</form>';var fields={display_name:{string:'Display name',type:'char'},};fieldsView.fields=fields;fieldsView.viewFields=fields;viewsLoaded=Promise.resolve({form:fieldsView});}
viewsLoaded=viewsLoaded.then(function(fieldsViews){var formView=new QuickCreateFormView(fieldsViews.form,{context:self.context,modelName:self.model,userContext:session.user_context,});return formView.getController(self).then(function(controller){self.controller=controller;return self.controller.appendTo(document.createDocumentFragment());});});return Promise.all([superWillStart,viewsLoaded]);},start:function(){this.$el.append(this.controller.$el);this.controller.renderButtons(this.$el);this.controller.autofocus();core.bus.on('click',this,this._onWindowClicked);return this._super.apply(this,arguments);},on_attach_callback:function(){if(this.controller){this.controller.autofocus();}},cancel:function(){var self=this;return this.controller.commitChanges().then(function(){if(!self.controller.isDirty()){self._cancel();}});},_add:function(options){var self=this;if(this._disabled){return;}
this._disableQuickCreate();this.controller.commitChanges().then(function(){var canBeSaved=self.controller.canBeSaved();if(canBeSaved){self.trigger_up('quick_create_add_record',{openRecord:options&&options.openRecord||false,values:self.controller.getChanges(),onFailure:self._enableQuickCreate.bind(self),});}else{self._enableQuickCreate();}}).guardedCatch(this._enableQuickCreate.bind(this));},_cancel:function(){this.trigger_up('cancel_quick_create');},_disableQuickCreate:function(){this._disabled=true;this.$el.addClass('o_disabled');this.$('input:not(:disabled)').addClass('o_temporarily_disabled').attr('disabled','disabled');},_enableQuickCreate:function(){this._disabled=false;this.$el.removeClass('o_disabled');this.$('input.o_temporarily_disabled').removeClass('o_temporarily_disabled').attr('disabled',false);},_onAdd:function(ev){ev.stopPropagation();this._add();},_onAddClicked:function(ev){ev.stopPropagation();this._add();},_onCancel:function(ev){ev.stopPropagation();this._cancel();},_onCancelClicked:function(ev){ev.stopPropagation();this._cancel();},_onEditClicked:function(ev){ev.stopPropagation();this._add({openRecord:true});},_onWindowClicked:function(ev){if(!document.contains(this.el)){return;}
if($(ev.target).closest('.o-kanban-button-new, .o_kanban_quick_add').length){return;}
if($(ev.target).parents('.ui-autocomplete').length){return;}
if($(ev.target).closest('.modal').length){return;}
if(!document.contains(ev.target)){return;}
if(this.el.contains(ev.target)&&this.el!==ev.target){return;}
this.cancel();},});return RecordQuickCreate;});;

/* /web/static/src/js/views/kanban/kanban_renderer.js defined in bundle 'web.assets_backend' */
odoo.define('web.KanbanRenderer',function(require){"use strict";var BasicRenderer=require('web.BasicRenderer');var ColumnQuickCreate=require('web.kanban_column_quick_create');var config=require('web.config');var core=require('web.core');var KanbanColumn=require('web.KanbanColumn');var KanbanRecord=require('web.KanbanRecord');var QWeb=require('web.QWeb');var session=require('web.session');var utils=require('web.utils');var viewUtils=require('web.viewUtils');var qweb=core.qweb;var _t=core._t;function findInNode(node,predicate){if(predicate(node)){return node;}
if(!node.children){return undefined;}
for(var i=0;i<node.children.length;i++){if(findInNode(node.children[i],predicate)){return node.children[i];}}}
function qwebAddIf(node,condition){if(node.attrs[qweb.prefix+'-if']){condition=_.str.sprintf("(%s) and (%s)",node.attrs[qweb.prefix+'-if'],condition);}
node.attrs[qweb.prefix+'-if']=condition;}
function transformQwebTemplate(node,fields){if(node.tag&&node.attrs.modifiers){var modifiers=node.attrs.modifiers||{};if(modifiers.invisible){qwebAddIf(node,_.str.sprintf("!kanban_compute_domain(%s)",JSON.stringify(modifiers.invisible)));}}
switch(node.tag){case'button':case'a':var type=node.attrs.type||'';if(_.indexOf('action,object,edit,open,delete,url,set_cover'.split(','),type)!==-1){_.each(node.attrs,function(v,k){if(_.indexOf('icon,type,name,args,string,context,states,kanban_states'.split(','),k)!==-1){node.attrs['data-'+k]=v;delete(node.attrs[k]);}});if(node.attrs['data-string']){node.attrs.title=node.attrs['data-string'];}
if(node.tag==='a'&&node.attrs['data-type']!=="url"){node.attrs.href='#';}else{node.attrs.type='button';}
var action_classes=" oe_kanban_action oe_kanban_action_"+node.tag;if(node.attrs['t-attf-class']){node.attrs['t-attf-class']+=action_classes;}else if(node.attrs['t-att-class']){node.attrs['t-att-class']+=" + '"+action_classes+"'";}else{node.attrs['class']=(node.attrs['class']||'')+action_classes;}}
break;}
if(node.children){for(var i=0,ii=node.children.length;i<ii;i++){transformQwebTemplate(node.children[i],fields);}}}
var KanbanRenderer=BasicRenderer.extend({className:'o_kanban_view',config:{KanbanColumn:KanbanColumn,KanbanRecord:KanbanRecord,},custom_events:_.extend({},BasicRenderer.prototype.custom_events||{},{close_quick_create:'_onCloseQuickCreate',cancel_quick_create:'_onCancelQuickCreate',set_progress_bar_state:'_onSetProgressBarState',start_quick_create:'_onStartQuickCreate',quick_create_column_updated:'_onQuickCreateColumnUpdated',}),events:_.extend({},BasicRenderer.prototype.events||{},{'keydown .o_kanban_record':'_onRecordKeyDown'}),sampleDataTargets:['.o_kanban_counter','.o_kanban_record','.o_kanban_toggle_fold','.o_column_folded','.o_column_archive_records','.o_column_unarchive_records',],init:function(parent,state,params){this._super.apply(this,arguments);this.widgets=[];this.qweb=new QWeb(config.isDebug(),{_s:session.origin},false);var templates=findInNode(this.arch,function(n){return n.tag==='templates';});transformQwebTemplate(templates,state.fields);this.qweb.add_template(utils.json_node_to_xml(templates));this.examples=params.examples;this.recordOptions=_.extend({},params.record_options,{qweb:this.qweb,viewType:'kanban',});this.columnOptions=_.extend({KanbanRecord:this.config.KanbanRecord},params.column_options);if(this.columnOptions.hasProgressBar){this.columnOptions.progressBarStates={};}
this.quickCreateEnabled=params.quickCreateEnabled;if(!params.readOnlyMode){var handleField=_.findWhere(this.state.fieldsInfo.kanban,{widget:'handle'});this.handleField=handleField&&handleField.name;}
this._setState(state);},on_attach_callback:function(){this._super(...arguments);if(this.quickCreate){this.quickCreate.on_attach_callback();}},addQuickCreate:function(groupId){let kanbanColumn;if(groupId){kanbanColumn=this.widgets.find(column=>column.db_id===groupId);}
kanbanColumn=kanbanColumn||this.widgets[0];return kanbanColumn.addQuickCreate();},giveFocus:function(){this.$('.o_kanban_record:first').focus();},quickCreateToggleFold:function(){this.quickCreate.toggleFold();this._toggleNoContentHelper();},updateColumn:function(localID,columnState,options){var self=this;var KanbanColumn=this.config.KanbanColumn;var newColumn=new KanbanColumn(this,columnState,this.columnOptions,this.recordOptions);var index=_.findIndex(this.widgets,{db_id:localID});var column=this.widgets[index];this.widgets[index]=newColumn;if(options&&options.state){this._setState(options.state);}
return newColumn.appendTo(document.createDocumentFragment()).then(function(){var def;if(options&&options.openQuickCreate){def=newColumn.addQuickCreate();}
return Promise.resolve(def).then(function(){newColumn.$el.insertAfter(column.$el);self._toggleNoContentHelper();newColumn.on_attach_callback();column.destroy();});});},updateRecord:function(recordState){var isGrouped=!!this.state.groupedBy.length;var record;if(isGrouped){_.each(this.widgets,function(widget){record=record||_.findWhere(widget.records,{db_id:recordState.id,});});}else{record=_.findWhere(this.widgets,{db_id:recordState.id});}
if(record){return record.update(recordState);}
return Promise.resolve();},_focusOnNextCard:function(currentCardElement){var nextCard=currentCardElement.nextElementSibling;if(nextCard){nextCard.focus();}},_focusOnPreviousCard:function(currentCardElement){var previousCard=currentCardElement.previousElementSibling;if(previousCard&&previousCard.classList.contains("o_kanban_record")){previousCard.focus();return true;}},_getGhostColumns:function(){if(this.examples&&this.examples.ghostColumns){return this.examples.ghostColumns;}
return _.map(_.range(1,5),function(num){return _.str.sprintf(_t("Column %s"),num);});},_renderExampleBackground:function(fragment){var $background=$(qweb.render('KanbanView.ExamplesBackground',{ghostColumns:this._getGhostColumns()}));$background.appendTo(fragment);},_renderGhostDivs:function(fragment,nbDivs,options){var ghostDefs=[];for(var $ghost,i=0;i<nbDivs;i++){$ghost=$('<div>').addClass('o_kanban_record o_kanban_ghost');if(options&&options.inlineStyle){$ghost.attr('style',options.inlineStyle);}
var def=$ghost.appendTo(fragment);ghostDefs.push(def);}
return Promise.all(ghostDefs);},_renderGrouped:function(fragment){var self=this;var KanbanColumn=this.config.KanbanColumn;_.each(this.state.data,function(group){var column=new KanbanColumn(self,group,self.columnOptions,self.recordOptions);var def;if(!group.value){def=column.prependTo(fragment);self.widgets.unshift(column);}else{def=column.appendTo(fragment);self.widgets.push(column);}
self.defs.push(def);});if(this.$el.sortable('instance')!==undefined){this.$el.sortable('destroy');}
if(this.groupedByM2O){this.$el.sortable({axis:'x',items:'> .o_kanban_group',handle:'.o_column_title',cursor:'move',revert:150,delay:100,tolerance:'pointer',forcePlaceholderSize:true,stop:function(){var ids=[];self.$('.o_kanban_group').each(function(index,u){if(_.isNumber($(u).data('id'))){ids.push($(u).data('id'));}});self.trigger_up('resequence_columns',{ids:ids});},});if(this.createColumnEnabled){this.quickCreate=new ColumnQuickCreate(this,{applyExamplesText:this.examples&&this.examples.applyExamplesText,examples:this.examples&&this.examples.examples,});this.defs.push(this.quickCreate.appendTo(fragment).then(function(){if(!self.state.data.length){self.quickCreate.toggleFold();self._renderExampleBackground(fragment);}}));}}},_renderUngrouped:function(fragment){var self=this;var KanbanRecord=this.config.KanbanRecord;var kanbanRecord;_.each(this.state.data,function(record){kanbanRecord=new KanbanRecord(self,record,self.recordOptions);self.widgets.push(kanbanRecord);var def=kanbanRecord.appendTo(fragment);self.defs.push(def);});var orderedBy=this.state.orderedBy;var hasHandle=this.handleField&&(orderedBy.length===0||orderedBy[0].name===this.handleField);if(hasHandle){this.$el.sortable({items:'.o_kanban_record:not(.o_kanban_ghost)',cursor:'move',revert:0,delay:0,tolerance:'pointer',forcePlaceholderSize:true,stop:function(event,ui){self._moveRecord(ui.item.data('record').db_id,ui.item.index());},});}
var prom=Promise.all(self.defs).then(function(){var options={};if(kanbanRecord){options.inlineStyle=kanbanRecord.$el.attr('style');}
return self._renderGhostDivs(fragment,6,options);});this.defs.push(prom);},_renderView:function(){var self=this;var isGrouped=!!this.state.groupedBy.length;var fragment=document.createDocumentFragment();var defs=[];this.defs=defs;if(isGrouped){this._renderGrouped(fragment);}else{this._renderUngrouped(fragment);}
delete this.defs;return this._super.apply(this,arguments).then(function(){return Promise.all(defs).then(function(){self.$el.empty();self.$el.toggleClass('o_kanban_grouped',isGrouped);self.$el.toggleClass('o_kanban_ungrouped',!isGrouped);self.$el.append(fragment);self._toggleNoContentHelper();});});},_toggleNoContentHelper:function(remove){var displayNoContentHelper=!remove&&!this._hasContent()&&!!this.noContentHelp&&!(this.quickCreate&&!this.quickCreate.folded)&&!this.state.isGroupedByM2ONoColumn;var $noContentHelper=this.$('.o_view_nocontent');if(displayNoContentHelper&&!$noContentHelper.length){this._renderNoContentHelper();}
if(!displayNoContentHelper&&$noContentHelper.length){$noContentHelper.remove();}},_setState:function(){this._super(...arguments);var groupByField=this.state.groupedBy[0];var cleanGroupByField=this._cleanGroupByField(groupByField);var groupByFieldAttrs=this.state.fields[cleanGroupByField];var groupByFieldInfo=this.state.fieldsInfo.kanban[cleanGroupByField];var draggable=true;var grouped_by_date=false;if(groupByFieldAttrs){if(groupByFieldAttrs.type==="date"||groupByFieldAttrs.type==="datetime"){draggable=false;grouped_by_date=true;}else if(groupByFieldAttrs.readonly!==undefined){draggable=!(groupByFieldAttrs.readonly);}}
if(groupByFieldInfo){if(draggable&&groupByFieldInfo.readonly!==undefined){draggable=!(groupByFieldInfo.readonly);}}
this.groupedByM2O=groupByFieldAttrs&&(groupByFieldAttrs.type==='many2one');var relation=this.groupedByM2O&&groupByFieldAttrs.relation;var groupByTooltip=groupByFieldInfo&&groupByFieldInfo.options.group_by_tooltip;this.columnOptions=_.extend(this.columnOptions,{draggable:draggable,group_by_tooltip:groupByTooltip,groupedBy:groupByField,grouped_by_m2o:this.groupedByM2O,grouped_by_date:grouped_by_date,relation:relation,quick_create:this.quickCreateEnabled&&viewUtils.isQuickCreateEnabled(this.state),});this.createColumnEnabled=this.groupedByM2O&&this.columnOptions.group_creatable;},_cleanGroupByField:function(groupByField){var cleanGroupByField=groupByField;if(cleanGroupByField&&cleanGroupByField.indexOf(':')>-1){cleanGroupByField=cleanGroupByField.substring(0,cleanGroupByField.indexOf(':'));}
return cleanGroupByField;},_focusOnCardInColumn:function(eventTarget,direction){var currentColumn=eventTarget.parentElement;var hasSelectedACard=false;var cannotSelectAColumn=false;while(!hasSelectedACard&&!cannotSelectAColumn){var candidateColumn=direction==='LEFT'?currentColumn.previousElementSibling:currentColumn.nextElementSibling;currentColumn=candidateColumn;if(candidateColumn){var allCardsOfCandidateColumn=candidateColumn.getElementsByClassName('o_kanban_record');if(allCardsOfCandidateColumn.length){allCardsOfCandidateColumn[0].focus();hasSelectedACard=true;}}
else{direction==='LEFT'?this._focusOnPreviousCard(eventTarget):this._focusOnNextCard(eventTarget);cannotSelectAColumn=true;}}},_onCancelQuickCreate:function(){this._toggleNoContentHelper();},_onCloseQuickCreate:function(){if(this.state.groupedBy.length){_.invoke(this.widgets,'cancelQuickCreate');}
this._toggleNoContentHelper();},_onQuickCreateColumnUpdated:function(ev){ev.stopPropagation();this._toggleNoContentHelper();this._updateExampleBackground();},_onRecordKeyDown:function(e){switch(e.which){case $.ui.keyCode.DOWN:this._focusOnNextCard(e.currentTarget);e.stopPropagation();e.preventDefault();break;case $.ui.keyCode.UP:const previousFocused=this._focusOnPreviousCard(e.currentTarget);if(!previousFocused){this.trigger_up('navigation_move',{direction:'up'});}
e.stopPropagation();e.preventDefault();break;case $.ui.keyCode.RIGHT:this._focusOnCardInColumn(e.currentTarget,'RIGHT');e.stopPropagation();e.preventDefault();break;case $.ui.keyCode.LEFT:this._focusOnCardInColumn(e.currentTarget,'LEFT');e.stopPropagation();e.preventDefault();break;}},_onSetProgressBarState:function(ev){if(!this.columnOptions.progressBarStates[ev.data.columnID]){this.columnOptions.progressBarStates[ev.data.columnID]={};}
_.extend(this.columnOptions.progressBarStates[ev.data.columnID],ev.data.values);},_onStartQuickCreate:function(){this._toggleNoContentHelper(true);},_updateExampleBackground:function(){var $elem=this.$('.o_kanban_example_background_container');if(!this.state.data.length&&!$elem.length){this._renderExampleBackground(this.$el);}else{$elem.remove();}},});return KanbanRenderer;});;

/* /web/static/src/js/views/kanban/kanban_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.KanbanView',function(require){"use strict";var BasicView=require('web.BasicView');var core=require('web.core');var KanbanController=require('web.KanbanController');var kanbanExamplesRegistry=require('web.kanban_examples_registry');var KanbanModel=require('web.KanbanModel');var KanbanRenderer=require('web.KanbanRenderer');var utils=require('web.utils');var _lt=core._lt;var KanbanView=BasicView.extend({accesskey:"k",display_name:_lt("Kanban"),icon:'fa-th-large',mobile_friendly:true,config:_.extend({},BasicView.prototype.config,{Model:KanbanModel,Controller:KanbanController,Renderer:KanbanRenderer,}),jsLibs:[],viewType:'kanban',init:function(viewInfo,params){this._super.apply(this,arguments);this.loadParams.limit=this.loadParams.limit||40;this.loadParams.openGroupByDefault=true;this.loadParams.type='list';this.noDefaultGroupby=params.noDefaultGroupby;var progressBar;utils.traverse(this.arch,function(n){var isProgressBar=(n.tag==='progressbar');if(isProgressBar){progressBar=_.clone(n.attrs);progressBar.colors=JSON.parse(progressBar.colors);progressBar.sum_field=progressBar.sum_field||false;}
return!isProgressBar;});if(progressBar){this.loadParams.progressBar=progressBar;}
var activeActions=this.controllerParams.activeActions;var archAttrs=this.arch.attrs;activeActions=_.extend(activeActions,{group_create:this.arch.attrs.group_create?!!JSON.parse(archAttrs.group_create):true,group_edit:archAttrs.group_edit?!!JSON.parse(archAttrs.group_edit):true,group_delete:archAttrs.group_delete?!!JSON.parse(archAttrs.group_delete):true,});this.rendererParams.column_options={editable:activeActions.group_edit,deletable:activeActions.group_delete,archivable:archAttrs.archivable?!!JSON.parse(archAttrs.archivable):true,group_creatable:activeActions.group_create,quickCreateView:archAttrs.quick_create_view||null,recordsDraggable:archAttrs.records_draggable?!!JSON.parse(archAttrs.records_draggable):true,hasProgressBar:!!progressBar,};this.rendererParams.record_options={editable:activeActions.edit,deletable:activeActions.delete,read_only_mode:params.readOnlyMode,selectionMode:params.selectionMode,};this.rendererParams.quickCreateEnabled=this._isQuickCreateEnabled();this.rendererParams.readOnlyMode=params.readOnlyMode;var examples=archAttrs.examples;if(examples){this.rendererParams.examples=kanbanExamplesRegistry.get(examples);}
this.controllerParams.on_create=archAttrs.on_create;this.controllerParams.hasButtons=!params.selectionMode?true:false;this.controllerParams.quickCreateEnabled=this.rendererParams.quickCreateEnabled;},_isQuickCreateEnabled:function(){if(!this.controllerParams.activeActions.create){return false;}
if(this.arch.attrs.quick_create!==undefined){return!!JSON.parse(this.arch.attrs.quick_create);}
return true;},_updateMVCParams:function(){this._super.apply(this,arguments);if(this.searchMenuTypes.includes('groupBy')&&!this.noDefaultGroupby&&this.arch.attrs.default_group_by){this.loadParams.groupBy=[this.arch.attrs.default_group_by];}},});return KanbanView;});;

/* /web/static/src/js/views/kanban/quick_create_form_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.QuickCreateFormView',function(require){"use strict";var BasicModel=require('web.BasicModel');var FormController=require('web.FormController');var FormRenderer=require('web.FormRenderer');var FormView=require('web.FormView');const{qweb}=require("web.core");var QuickCreateFormRenderer=FormRenderer.extend({start:async function(){await this._super.apply(this,arguments);this.$el.addClass('o_xxs_form_view');this.$el.removeClass('o_xxl_form_view');},_applyFormSizeClass(){},_onNavigationMove:function(ev){var direction=ev.data.direction;if(direction==='cancel'||direction==='next_line'){ev.stopPropagation();this.trigger_up(direction==='cancel'?'cancel':'add');}else{this._super.apply(this,arguments);}},});var QuickCreateFormModel=BasicModel.extend({getChanges:function(localID){var record=this.localData[localID];return this._generateChanges(record,{changesOnly:false});},});var QuickCreateFormController=FormController.extend({commitChanges:function(){var mutexDef=this.mutex.getUnlockedDef();return Promise.all([mutexDef,this.renderer.commitChanges(this.handle)]);},getChanges:function(){return this.model.getChanges(this.handle);},renderButtons($node){this.$buttons=$(qweb.render('KanbanView.RecordQuickCreate.buttons'));if($node){this.$buttons.appendTo($node);}},updateButtons(){},});var QuickCreateFormView=FormView.extend({withControlPanel:false,config:_.extend({},FormView.prototype.config,{Model:QuickCreateFormModel,Renderer:QuickCreateFormRenderer,Controller:QuickCreateFormController,}),});return QuickCreateFormView;});;

/* /web/static/src/js/views/list/list_editable_renderer.js defined in bundle 'web.assets_backend' */
odoo.define('web.EditableListRenderer',function(require){"use strict";var core=require('web.core');var dom=require('web.dom');var ListRenderer=require('web.ListRenderer');var utils=require('web.utils');const{WidgetAdapterMixin}=require('web.OwlCompatibility');var _t=core._t;ListRenderer.include({RESIZE_DELAY:200,custom_events:_.extend({},ListRenderer.prototype.custom_events,{navigation_move:'_onNavigationMove',}),events:_.extend({},ListRenderer.prototype.events,{'click .o_field_x2many_list_row_add a':'_onAddRecord','click .o_group_field_row_add a':'_onAddRecordToGroup','keydown .o_field_x2many_list_row_add a':'_onKeyDownAddRecord','click tbody td.o_data_cell':'_onCellClick','click tbody tr:not(.o_data_row)':'_onEmptyRowClick','click tfoot':'_onFooterClick','click tr .o_list_record_remove':'_onRemoveIconClick',}),init:function(parent,state,params){this._super.apply(this,arguments);this.editable=params.editable;this.isMultiEditable=params.isMultiEditable;this.columnWidths=false;this.addCreateLine=params.addCreateLine;this.addCreateLineInGroups=params.addCreateLineInGroups;this.creates=[];this.arch.children.forEach(child=>{if(child.tag!=='control'){return;}
child.children.forEach(child=>{if(child.tag!=='create'||child.attrs.invisible){return;}
this.creates.push({context:child.attrs.context,string:child.attrs.string,});});});if(this.creates.length===0){this.creates.push({string:_t("Add a line"),});}
this.addTrashIcon=params.addTrashIcon;this.isMany2Many=params.isMany2Many;this.currentRow=null;this.currentFieldIndex=null;this.isResizing=false;this.eventListeners=[];},start:function(){core.bus.on('click',this,this._onWindowClicked.bind(this));core.bus.on('resize',this,_.debounce(this._onResize.bind(this),this.RESIZE_DELAY));core.bus.on('DOM_updated',this,()=>this._freezeColumnWidths());return this._super();},destroy:function(){this.eventListeners.forEach(listener=>{const{type,el,callback,options}=listener;el.removeEventListener(type,callback,options);});return this._super.apply(this,arguments);},on_attach_callback:function(){this.isInDOM=true;this._super();this._freezeColumnWidths();},on_detach_callback:function(){this.isInDOM=false;this._super();},canBeSaved:function(recordID){if((recordID||this.state.id)===this.state.id){recordID=this.getEditableRecordID();if(recordID===null){return[];}}
var fieldNames=this._super(recordID);this.$('.o_selected_row .o_data_cell').removeClass('o_invalid_cell');this.$('.o_selected_row .o_data_cell:has(> .o_field_invalid)').addClass('o_invalid_cell');return fieldNames;},confirmChange:function(state,recordID){var self=this;return this._super.apply(this,arguments).then(function(widgets){if(widgets.length){var $row=self._getRow(recordID);var record=self._getRecord(recordID);self._setDecorationClasses($row,self.rowDecorations,record);self._updateFooter();}
return widgets;});},confirmUpdate:function(state,id,fields,ev){var self=this;var oldData=this.state.data;this._setState(state);return this.confirmChange(state,id,fields,ev).then(function(){var record=self._getRecord(id);if(!record){return;}
_.each(oldData,function(rec){if(rec.id!==id){self._destroyFieldWidgets(rec.id);}});self.defs=[];var $newBody=self._renderBody();var defs=self.defs;delete self.defs;return Promise.all(defs).then(function(){_.each(self.columns,function(node){self._registerModifiers(node,record,null,{mode:'edit'});});var currentRowID;var currentWidget;var focusedElement;var selectionRange;if(self.currentRow!==null){currentRowID=self._getRecordID(self.currentRow);currentWidget=self.allFieldWidgets[currentRowID][self.currentFieldIndex];if(currentWidget){focusedElement=currentWidget.getFocusableElement().get(0);if(currentWidget.formatType!=='boolean'){selectionRange=dom.getSelectionRange(focusedElement);}}}
var $editedRow=self._getRow(id);$editedRow.nextAll('.o_data_row').remove();$editedRow.prevAll('.o_data_row').remove();var $newRow=$newBody.find('.o_data_row[data-id="'+id+'"]');$newRow.prevAll('.o_data_row').get().reverse().forEach(function(row){$(row).insertBefore($editedRow);});$newRow.nextAll('.o_data_row').get().reverse().forEach(function(row){$(row).insertAfter($editedRow);});if(self.currentRow!==null){var newRowIndex=$editedRow.prop('rowIndex')-1;self.currentRow=newRowIndex;return self._selectCell(newRowIndex,self.currentFieldIndex,{force:true}).then(function(){currentWidget=self.allFieldWidgets[currentRowID][self.currentFieldIndex];if(currentWidget){focusedElement=currentWidget.getFocusableElement().get(0);if(selectionRange){dom.setSelectionRange(focusedElement,selectionRange);}}});}});});},editFirstRecord:function(ev){const $borderRow=this._getBorderRow(ev.data.side||'first');this._selectCell($borderRow.prop('rowIndex')-1,ev.data.cellIndex||0);},editRecord:function(recordID){var $row=this._getRow(recordID);var rowIndex=$row.prop('rowIndex')-1;this._selectCell(rowIndex,0);},focusCell:function(recordId,column){var $row=this._getRow(recordId);var cellIndex=this.columns.indexOf(column);$row.find('.o_data_cell')[cellIndex].focus();},getEditableRecordID:function(){if(this.currentRow!==null){return this._getRecordID(this.currentRow);}
return null;},isInMultipleRecordEdition:function(recordId){return this.isEditable()&&this.isMultiEditable&&this.selection.includes(recordId);},isEditable:function(){return this.editable||(this.isMultiEditable&&this.selection.length);},removeLine:function(state,recordID){this._setState(state);var $row=this._getRow(recordID);if($row.length===0){return;}
if($row.prop('rowIndex')-1===this.currentRow){this.currentRow=null;this._enableRecordSelectors();}
this._destroyFieldWidgets(recordID);if(this.state.count>=4){$row.remove();}else{var $emptyRow=this._renderEmptyRow();$row.replaceWith($emptyRow);const $lastDataRow=this.$('.o_data_row:last');if($lastDataRow.length){$emptyRow.insertAfter($lastDataRow);}}},setRowMode:function(recordID,mode){var self=this;var record=self._getRecord(recordID);if(!record){return Promise.resolve();}
var editMode=(mode==='edit');var $row=this._getRow(recordID);this.currentRow=editMode?$row.prop('rowIndex')-1:null;var $tds=$row.children('.o_data_cell');var oldWidgets=_.clone(this.allFieldWidgets[record.id]);var options={renderInvisible:editMode,renderWidgets:editMode,};options.mode=editMode?'edit':'readonly';var defs=[];this.defs=defs;_.each(this.columns,function(node,colIndex){var $td=$tds.eq(colIndex);var $newTd=self._renderBodyCell(record,node,colIndex,options);if($td.hasClass('o_list_button')){self._unregisterModifiersElement(node,recordID,$td.children());}
if(editMode){$td.empty().append($newTd.contents());}else{self._unregisterModifiersElement(node,recordID,$td);$td.replaceWith($newTd);}});delete this.defs;_.each(oldWidgets,this._destroyFieldWidget.bind(this,recordID));$row.toggleClass('o_selected_row',editMode);if(editMode){this._disableRecordSelectors();}else{this._enableRecordSelectors();}
return Promise.all(defs).then(function(){WidgetAdapterMixin.on_attach_callback.call(self);core.bus.trigger('DOM_updated');});},unselectRow:function(){if(this.currentRow===null){return Promise.resolve();}
var recordID=this._getRecordID(this.currentRow);var recordWidgets=this.allFieldWidgets[recordID];function toggleWidgets(disabled){_.each(recordWidgets,function(widget){var $el=widget.getFocusableElement();$el.prop('disabled',disabled);});}
toggleWidgets(true);return new Promise((resolve,reject)=>{this.trigger_up('save_line',{recordID:recordID,onSuccess:resolve,onFailure:reject,});}).then(selectNextRow=>{this._enableRecordSelectors();return selectNextRow;}).guardedCatch(()=>{toggleWidgets(false);});},updateState:function(state,params){if(params.keepWidths&&this.$el.is(':visible')){this._storeColumnWidths();}
if(params.noRender){this.allModifiersData=[];}
if('addTrashIcon'in params){if(this.addTrashIcon!==params.addTrashIcon){this.columnWidths=false;}
this.addTrashIcon=params.addTrashIcon;}
if('addCreateLine'in params){this.addCreateLine=params.addCreateLine;}
return this._super.apply(this,arguments);},_addEventListener:function(type,el,callback,options){el.addEventListener(type,callback,options);this.eventListeners.push({type,el,callback,options});},_computeDefaultWidths:function(){const isListEmpty=!this._hasVisibleRecords(this.state);const relativeWidths=[];this.columns.forEach(column=>{const th=this._getColumnHeader(column);if(th.offsetParent===null){relativeWidths.push(false);}else{const width=this._getColumnWidth(column);if(width.match(/[a-zA-Z]/)){if(isListEmpty){th.style.width=width;}else{th.style.minWidth=width;}
relativeWidths.push(false);}else{relativeWidths.push(parseFloat(width,10));}}});if(isListEmpty){const totalWidth=this._getColumnsTotalWidth(relativeWidths);for(let i in this.columns){if(relativeWidths[i]){const th=this._getColumnHeader(this.columns[i]);th.style.width=(relativeWidths[i]/totalWidth*100)+'%';}}
const trashHeader=this.el.getElementsByClassName('o_list_record_remove_header')[0];if(trashHeader){trashHeader.style.width='32px';}}},_destroyFieldWidgets:function(recordID){if(recordID in this.allFieldWidgets){var widgetsToDestroy=this.allFieldWidgets[recordID].slice();_.each(widgetsToDestroy,this._destroyFieldWidget.bind(this,recordID));delete this.allFieldWidgets[recordID];}},_disableRecordSelectors:function(){this.$('.o_list_record_selector input').attr('disabled','disabled');},_enableRecordSelectors:function(){this.$('.o_list_record_selector input').attr('disabled',false);},_freezeColumnWidths:function(){if(!this.columnWidths&&this.el.offsetParent===null){return;}
const thElements=[...this.el.querySelectorAll('table thead th')];if(!thElements.length){return;}
const table=this.el.getElementsByClassName('o_list_table')[0];let columnWidths=this.columnWidths;if(!columnWidths||!columnWidths.length){table.style.tableLayout='auto';thElements.forEach(th=>{th.style.width=null;th.style.maxWidth=null;});this._computeDefaultWidths();columnWidths=this._squeezeTable();}
thElements.forEach((th,index)=>{if(!th.style.width){th.style.width=`${columnWidths[index]}px`;}});table.style.tableLayout='fixed';},_getBorderRow:function(side){let $borderDataRow=this.$(`.o_data_row:${side}`);if(!this._isRecordEditable($borderDataRow.data('id'))){$borderDataRow=this._getNearestEditableRow($borderDataRow,side==='first');}
return $borderDataRow;},_getColumnsTotalWidth(relativeWidths){return relativeWidths.reduce((acc,width)=>acc+width,0);},_getColumnWidth:function(column){if(column.attrs.width){return column.attrs.width;}
const fieldsInfo=this.state.fieldsInfo.list;const name=column.attrs.name;if(!fieldsInfo[name]){return'1';}
const widget=fieldsInfo[name].Widget.prototype;if('widthInList'in widget){return widget.widthInList;}
const field=this.state.fields[name];if(!field){return'1';}
const fixedWidths={boolean:'70px',date:'92px',datetime:'146px',float:'92px',integer:'74px',monetary:'104px',};let type=field.type;if(fieldsInfo[name].widget in fixedWidths){type=fieldsInfo[name].widget;}
return fixedWidths[type]||'1';},_getColumnHeader:function(column){const{icon,name,string}=column.attrs;if(name){return this.el.querySelector(`thead th[data-name="${name}"]`);}else if(string){return this.el.querySelector(`thead th[data-string="${string}"]`);}else if(icon){return this.el.querySelector(`thead th[data-icon="${icon}"]`);}},_getNearestEditableRow:function($row,next){const direction=next?'next':'prev';let $nearestRow;if(this.editable){$nearestRow=$row[direction]();if(!$nearestRow.hasClass('o_data_row')){var $nextBody=$row.closest('tbody')[direction]();while($nextBody.length&&!$nextBody.find('.o_data_row').length){$nextBody=$nextBody[direction]();}
$nearestRow=$nextBody.find(`.o_data_row:${next ? 'first' : 'last'}`);}}else{const recordId=$row.data('id');const rowSelectionIndex=this.selection.indexOf(recordId);let nextRowIndex;if(rowSelectionIndex<0){nextRowIndex=next?0:this.selection.length-1;}else{nextRowIndex=rowSelectionIndex+(next?1:-1);}
$nearestRow=this._getRow(this.selection[nextRowIndex]);}
return $nearestRow;},_getNumberOfCols:function(){var n=this._super();if(this.addTrashIcon){n++;}
return n;},_getRecord:function(recordId){var record;utils.traverse_records(this.state,function(r){if(r.id===recordId){record=r;}});return record;},_getRecordID:function(rowIndex){var $tr=this.$('table.o_list_table > tbody tr').eq(rowIndex);return $tr.data('id');},_getRow:function(recordId){return this.$('.o_data_row[data-id="'+recordId+'"]');},_hasVisibleRecords:function(list){if(!list.groupedBy.length){return!!list.data.length;}else{var hasVisibleRecords=false;for(var i=0;i<list.data.length;i++){hasVisibleRecords=hasVisibleRecords||this._hasVisibleRecords(list.data[i]);}
return hasVisibleRecords;}},_isRecordEditable:function(recordID){return this.editable||(this.isMultiEditable&&this.selection.includes(recordID));},_moveToNextLine:function(options){this._moveToSideLine(true,options);},_moveToPreviousLine:function(options){this._moveToSideLine(false,options);},_moveToSideLine:function(next,options){options=options||{};const recordID=this._getRecordID(this.currentRow);this.commitChanges(recordID).then(()=>{const record=this._getRecord(recordID);const multiEdit=this.isInMultipleRecordEdition(recordID);if(!multiEdit){const fieldNames=this.canBeSaved(recordID);if(fieldNames.length&&(record.isDirty()||options.forceCreate)){return;}}
const side=next?'first':'last';const borderRowIndex=this._getBorderRow(side).prop('rowIndex')-1;const cellIndex=next?0:this.allFieldWidgets[recordID].length-1;const cellOptions={inc:next?1:-1,force:true};const $currentRow=this._getRow(recordID);const $nextRow=this._getNearestEditableRow($currentRow,next);let nextRowIndex=null;let groupId;if(!this.isGrouped){if($nextRow.length){nextRowIndex=$nextRow.prop('rowIndex')-1;}else if(!this.editable){nextRowIndex=borderRowIndex;}else if(!options.forceCreate&&!record.isDirty()){this.trigger_up('discard_changes',{recordID:recordID,onSuccess:this.trigger_up.bind(this,'activate_next_widget',{side:side}),});return;}}else{var $directNextRow=$currentRow.next();if(next&&this.editable==="bottom"&&$directNextRow.hasClass('o_add_record_row')){if(options.forceCreate||record.isDirty()){groupId=$directNextRow.data('group-id');}else{nextRowIndex=($nextRow.prop('rowIndex')-1)||null;this.trigger_up('discard_changes',{recordID:recordID,onSuccess:()=>{if(nextRowIndex!==null){if(!record.res_id){nextRowIndex--;}
this._selectCell(nextRowIndex,cellIndex,cellOptions);}else{this._selectCell(borderRowIndex,cellIndex,cellOptions);}},});return;}}else{nextRowIndex=$nextRow.length?($nextRow.prop('rowIndex')-1):borderRowIndex;}}
if(nextRowIndex!==null){this._selectCell(nextRowIndex,cellIndex,cellOptions);}else if(this.editable){this.unselectRow().then(this.trigger_up.bind(this,'add_record',{groupId:groupId,onFail:this._selectCell.bind(this,borderRowIndex,cellIndex,cellOptions),}));}});},_processColumns:function(){const oldColumns=this.columns;this._super.apply(this,arguments);if(this.columnWidths&&oldColumns&&oldColumns.length===this.columns.length){for(let i=0;i<oldColumns.length;i++){if(oldColumns[i]!==this.columns[i]){this.columnWidths=false;break;}}}else{this.columnWidths=false;}},_render:function(){this.currentRow=null;this.currentFieldIndex=null;return this._super.apply(this,arguments);},_renderGroup:function(group){var result=this._super.apply(this,arguments);if(!group.groupedBy.length&&this.addCreateLineInGroups){var $groupBody=result[0];var $a=$('<a href="#" role="button">').text(_t("Add a line")).attr('data-group-id',group.id);var $td=$('<td>').attr('colspan',this._getNumberOfCols()).addClass('o_group_field_row_add').attr('tabindex',-1).append($a);var $tr=$('<tr>',{class:'o_add_record_row'}).attr('data-group-id',group.id).append($td);$groupBody.append($tr.prepend($('<td>').html('&nbsp;')));}
return result;},_renderBody:function(){var self=this;var $body=this._super.apply(this,arguments);if(this.hasHandle){$body.sortable({axis:'y',items:'> tr.o_data_row',helper:'clone',handle:'.o_row_handle',stop:function(event,ui){if(self.currentRow!==null){var currentID=self.state.data[self.currentRow].id;self.currentRow=self._getRow(currentID).index();}
self.unselectRow().then(function(){self._moveRecord(ui.item.data('id'),ui.item.index());});},});}
return $body;},_renderFooter:function(){const $footer=this._super.apply(this,arguments);if(this.addTrashIcon){$footer.find('tr').append($('<td>'));}
return $footer;},_renderHeader:function(){var $thead=this._super.apply(this,arguments);if(this.addTrashIcon){$thead.find('tr').append($('<th>',{class:'o_list_record_remove_header'}));}
return $thead;},_renderHeaderCell:function(){const $th=this._super.apply(this,arguments);if($th[0].innerHTML.length&&this._hasVisibleRecords(this.state)){const resizeHandle=document.createElement('span');resizeHandle.classList='o_resize';resizeHandle.onclick=this._onClickResize.bind(this);resizeHandle.onmousedown=this._onStartResize.bind(this);$th.append(resizeHandle);}
return $th;},_renderRow:function(record,index){var $row=this._super.apply(this,arguments);if(this.addTrashIcon){var $icon=this.isMany2Many?$('<button>',{'class':'fa fa-times','name':'unlink','aria-label':_t('Unlink row ')+(index+1)}):$('<button>',{'class':'fa fa-trash-o','name':'delete','aria-label':_t('Delete row ')+(index+1)});var $td=$('<td>',{class:'o_list_record_remove'}).append($icon);$row.append($td);}
return $row;},_renderRows:function(){var $rows=this._super();if(this.addCreateLine){var $tr=$('<tr>');var colspan=this._getNumberOfCols();if(this.handleField){colspan=colspan-1;$tr.append('<td>');}
var $td=$('<td>').attr('colspan',colspan).addClass('o_field_x2many_list_row_add');$tr.append($td);$rows.push($tr);if(this.addCreateLine){_.each(this.creates,function(create,index){var $a=$('<a href="#" role="button">').attr('data-context',create.context).text(create.string);if(index>0){$a.addClass('ml16');}
$td.append($a);});}}
return $rows;},_renderView:function(){this.currentRow=null;return this._super.apply(this,arguments).then(()=>{const table=this.el.getElementsByClassName('o_list_table')[0];if(table){table.classList.toggle('o_empty_list',!this._hasVisibleRecords(this.state));this._freezeColumnWidths();}});},_selectCell:function(rowIndex,fieldIndex,options){options=options||{};if(!options.force&&rowIndex===this.currentRow&&fieldIndex===this.currentFieldIndex){return Promise.resolve();}
var wrap=options.wrap===undefined?true:options.wrap;var recordID=this._getRecordID(rowIndex);var self=this;return this._selectRow(rowIndex).then(function(){var record=self._getRecord(recordID);if(fieldIndex>=(self.allFieldWidgets[record.id]||[]).length){return Promise.reject();}
var oldFieldIndex=self.currentFieldIndex;self.currentFieldIndex=fieldIndex;fieldIndex=self._activateFieldWidget(record,fieldIndex,{inc:options.inc||1,wrap:wrap,event:options&&options.event,});if(fieldIndex<0){self.currentFieldIndex=oldFieldIndex;return Promise.reject();}
self.currentFieldIndex=fieldIndex;});},_selectRow:function(rowIndex){if(rowIndex===this.currentRow){return Promise.resolve();}
if(!this.columnWidths){this._storeColumnWidths();}
var recordId=this._getRecordID(rowIndex);var self=this;return this.unselectRow().then((selectNextRow=true)=>{if(!selectNextRow){return Promise.resolve();}
if(!recordId){return Promise.reject();}
return new Promise(function(resolve){self.trigger_up('edit_line',{recordId:recordId,onSuccess:function(){self._disableRecordSelectors();resolve();},});});});},_squeezeTable:function(){const table=this.el.getElementsByClassName('o_list_table')[0];table.classList.add('o_list_computing_widths');const thead=table.getElementsByTagName('thead')[0];const thElements=[...thead.getElementsByTagName('th')];const columnWidths=thElements.map(th=>th.offsetWidth);const getWidth=th=>columnWidths[thElements.indexOf(th)]||0;const getTotalWidth=()=>thElements.reduce((tot,th,i)=>tot+columnWidths[i],0);const shrinkColumns=(columns,width)=>{let thresholdReached=false;columns.forEach(th=>{const index=thElements.indexOf(th);let maxWidth=columnWidths[index]-Math.ceil(width/columns.length);if(maxWidth<92){maxWidth=92;thresholdReached=true;}
th.style.maxWidth=`${maxWidth}px`;columnWidths[index]=maxWidth;});return thresholdReached;};const sortedThs=[...thead.querySelectorAll('th:not(.o_list_button)')].sort((a,b)=>getWidth(b)-getWidth(a));const allowedWidth=table.parentNode.offsetWidth;let totalWidth=getTotalWidth();let stop=false;let index=0;while(totalWidth>allowedWidth&&!stop){index++;const largests=sortedThs.slice(0,index);while(getWidth(largests[0])===getWidth(sortedThs[index])){largests.push(sortedThs[index]);index++;}
const nextLargest=sortedThs[index];const totalToRemove=totalWidth-allowedWidth;const canRemove=(getWidth(largests[0])-getWidth(nextLargest))*largests.length;stop=shrinkColumns(largests,Math.min(totalToRemove,canRemove));totalWidth=getTotalWidth();}
table.classList.remove('o_list_computing_widths');return columnWidths;},_storeColumnWidths:function(){this.columnWidths=this.$('thead th').toArray().map(function(th){return $(th).outerWidth();});},_onAddRecordToGroup:function(ev){ev.preventDefault();ev.stopPropagation();var self=this;const target=ev.target.tagName!=='A'?ev.target.getElementsByTagName('A')[0]:ev.target;const groupId=target.dataset.groupId;this.currentGroupId=groupId;this.unselectRow().then(function(){self.trigger_up('add_record',{groupId:groupId,});});},_onAddRecord:function(ev){ev.preventDefault();ev.stopPropagation();var self=this;this.unselectRow().then(function(){self.trigger_up('add_record',{context:ev.currentTarget.dataset.context&&[ev.currentTarget.dataset.context]});});},_onCellClick:function(event){var $td=$(event.currentTarget);var $tr=$td.parent();var rowIndex=$tr.prop('rowIndex')-1;if(!this._isRecordEditable($tr.data('id'))||$(event.target).prop('special_click')){return;}
var fieldIndex=Math.max($tr.find('.o_field_cell').index($td),0);this._selectCell(rowIndex,fieldIndex,{event:event});},_onClickResize:function(ev){ev.stopPropagation();ev.preventDefault();},_onEmptyRowClick:function(){this.unselectRow();},_onFooterClick:function(){this.unselectRow();},_onKeyDown:function(ev){const $target=$(ev.currentTarget);const $tr=$target.closest('tr');const recordEditable=this._isRecordEditable($tr.data('id'));if(recordEditable&&ev.keyCode===$.ui.keyCode.ENTER&&$tr.hasClass('o_selected_row')){return;}
if(recordEditable&&ev.keyCode===$.ui.keyCode.ENTER&&!$tr.hasClass('o_selected_row')&&!$tr.hasClass('o_group_header')){ev.stopPropagation();ev.preventDefault();if($target.closest('td').hasClass('o_group_field_row_add')){this._onAddRecordToGroup(ev);}else{this._onCellClick(ev);}}else{this._super.apply(this,arguments);}},_onKeyDownAddRecord:function(e){switch(e.keyCode){case $.ui.keyCode.ENTER:e.stopPropagation();e.preventDefault();this._onAddRecord(e);break;}},_onNavigationMove:function(ev){var self=this;if(this.currentRow===null&&ev.data.direction==='up'){return;}
ev.stopPropagation();if(ev.data.originalEvent&&['next','previous'].includes(ev.data.direction)){ev.data.originalEvent.preventDefault();ev.data.originalEvent.stopPropagation();}
switch(ev.data.direction){case'previous':if(this.currentFieldIndex>0){this._selectCell(this.currentRow,this.currentFieldIndex-1,{inc:-1,wrap:false}).guardedCatch(this._moveToPreviousLine.bind(this));}else{this._moveToPreviousLine();}
break;case'next':if(this.currentFieldIndex+1<this.columns.length){this._selectCell(this.currentRow,this.currentFieldIndex+1,{wrap:false}).guardedCatch(this._moveToNextLine.bind(this));}else{this._moveToNextLine();}
break;case'next_line':if(!this.editable&&this.selection.length===1&&this._getRecordID(this.currentRow)===ev.target.dataPointID){this.unselectRow();}else{this._moveToNextLine({forceCreate:true});}
break;case'cancel':ev.data.originalEvent.stopPropagation();var rowIndex=this.currentRow;var cellIndex=this.currentFieldIndex+1;this.trigger_up('discard_changes',{recordID:ev.target.dataPointID,onSuccess:function(){self._enableRecordSelectors();var recordId=self._getRecordID(rowIndex);if(recordId){var correspondingRow=self._getRow(recordId);correspondingRow.children().eq(cellIndex).focus();}else if(self.currentGroupId){self.$('a[data-group-id="'+self.currentGroupId+'"]').focus();}else{self.$('.o_field_x2many_list_row_add a:first').focus();}}});break;}},_onRemoveIconClick:function(event){event.stopPropagation();var $row=$(event.target).closest('tr');var id=$row.data('id');if($row.hasClass('o_selected_row')){this.trigger_up('list_record_remove',{id:id});}else{var self=this;this.unselectRow().then(function(){self.trigger_up('list_record_remove',{id:id});});}},_onResize:function(){this.columnWidths=false;this._freezeColumnWidths();},_onRowClicked:function(ev){if(!this._isRecordEditable(ev.currentTarget.dataset.id)){if(this.getEditableRecordID()){this.unselectRow();}else{this._super.apply(this,arguments);}}},_onSortColumn:function(){if(this.currentRow===null&&!this.isResizing){this._super.apply(this,arguments);}},_onStartResize:function(ev){if(ev.which!==1){return;}
ev.preventDefault();ev.stopPropagation();this.isResizing=true;const table=this.el.getElementsByClassName('o_list_table')[0];const th=ev.target.closest('th');table.style.width=`${table.offsetWidth}px`;const thPosition=[...th.parentNode.children].indexOf(th);const resizingColumnElements=[...table.getElementsByTagName('tr')].filter(tr=>tr.children.length===th.parentNode.children.length).map(tr=>tr.children[thPosition]);const optionalDropdown=this.el.getElementsByClassName('o_optional_columns')[0];const initialX=ev.pageX;const initialWidth=th.offsetWidth;const initialTableWidth=table.offsetWidth;const initialDropdownX=optionalDropdown?optionalDropdown.offsetLeft:null;const resizeStoppingEvents=['keydown','mousedown','mouseup',];if(!this.el.style.width){this.el.style.width=`${initialTableWidth}px`;}
table.classList.add('o_resizing');resizingColumnElements.forEach(el=>el.classList.add('o_column_resizing'));const resizeHeader=ev=>{ev.preventDefault();ev.stopPropagation();const delta=ev.pageX-initialX;const newWidth=Math.max(10,initialWidth+delta);const tableDelta=newWidth-initialWidth;th.style.width=`${newWidth}px`;table.style.width=`${initialTableWidth + tableDelta}px`;if(optionalDropdown){optionalDropdown.style.left=`${initialDropdownX + tableDelta}px`;}};this._addEventListener('mousemove',window,resizeHeader);const stopResize=ev=>{if(ev.type==='mousedown'&&ev.which===1){return;}
ev.preventDefault();ev.stopPropagation();clearTimeout(this.resizeTimeout);this.resizeTimeout=setTimeout(()=>{this.isResizing=false;},100);window.removeEventListener('mousemove',resizeHeader);table.classList.remove('o_resizing');resizingColumnElements.forEach(el=>el.classList.remove('o_column_resizing'));resizeStoppingEvents.forEach(stoppingEvent=>{window.removeEventListener(stoppingEvent,stopResize);});document.activeElement.blur();};resizeStoppingEvents.forEach(stoppingEvent=>{this._addEventListener(stoppingEvent,window,stopResize);});},_onToggleOptionalColumnDropdown:function(ev){this.unselectRow().then(this._super.bind(this,ev));},_onWindowClicked:function(event){if(!this.isEditable()){return;}
if(!document.contains(this.el)){return;}
if(this.currentRow===null){return;}
if($(event.target).parents('.ui-autocomplete').length){return;}
var $clickModal=$(event.target).closest('.modal');if($clickModal.length){var $listModal=this.$el.closest('.modal');if($clickModal.prop('id')!==$listModal.prop('id')){return;}}
if(!document.contains(event.target)){return;}
if(this.el.contains(event.target)&&this.el!==event.target){return;}
this.unselectRow();},});});;

/* /web/static/src/js/views/list/list_model.js defined in bundle 'web.assets_backend' */
odoo.define('web.ListModel',function(require){"use strict";var BasicModel=require('web.BasicModel');var ListModel=BasicModel.extend({init:function(parent,params){this._super.apply(this,arguments);this.groupbys=params.groupbys;},__get:function(){var result=this._super.apply(this,arguments);var dp=result&&this.localData[result.id];if(dp&&dp.groupData){result.groupData=this.get(dp.groupData);}
return result;},saveRecords:function(listDatapointId,referenceRecordId,recordIds,fieldName){var self=this;var referenceRecord=this.localData[referenceRecordId];var list=this.localData[listDatapointId];var allChanges=this._generateChanges(referenceRecord,{changesOnly:false});var changes=_.pick(allChanges,fieldName);var records=recordIds.map(function(recordId){return self.localData[recordId];});var model=records[0].model;var recordResIds=_.pluck(records,'res_id');var fieldNames=records[0].getFieldNames();var context=records[0].getContext();return this._rpc({model:model,method:'write',args:[recordResIds,changes],context:context,}).then(function(){return self._rpc({model:model,method:'read',args:[recordResIds,fieldNames],context:context,});}).then(function(results){results.forEach(function(data){var record=_.findWhere(records,{res_id:data.id});record.data=_.extend({},record.data,data);record._changes={};record._isDirty=false;self._parseServerData(fieldNames,record,record.data);});}).then(function(){return Promise.all([self._fetchX2ManysBatched(list),self._fetchReferencesBatched(list)]);});},_readGroup:function(list,options){var self=this;options=options||{};options.fetchRecordsWithGroups=true;return this._super(list,options).then(function(result){return self._readGroupExtraFields(list).then(_.constant(result));});},_readGroupExtraFields:function(list){var self=this;var groupByFieldName=list.groupedBy[0].split(':')[0];var groupedByField=list.fields[groupByFieldName];if(groupedByField.type!=='many2one'||!this.groupbys[groupByFieldName]){return Promise.resolve();}
var groupIds=_.reduce(list.data,function(groupIds,id){var resId=self.get(id,{raw:true}).res_id;if(resId){groupIds.push(resId);}
return groupIds;},[]);var groupFields=Object.keys(this.groupbys[groupByFieldName].viewFields);var prom;if(groupIds.length&&groupFields.length){prom=this._rpc({model:groupedByField.relation,method:'read',args:[groupIds,groupFields],context:list.context,});}
return Promise.resolve(prom).then(function(result){var fvg=self.groupbys[groupByFieldName];_.each(list.data,function(id){var dp=self.localData[id];var groupData=result&&_.findWhere(result,{id:dp.res_id,});var groupDp=self._makeDataPoint({context:dp.context,data:groupData,fields:fvg.fields,fieldsInfo:fvg.fieldsInfo,modelName:groupedByField.relation,parentID:dp.id,res_id:dp.res_id,viewType:'groupby',});dp.groupData=groupDp.id;});});},});return ListModel;});;

/* /web/static/src/js/views/list/list_renderer.js defined in bundle 'web.assets_backend' */
odoo.define('web.ListRenderer',function(require){"use strict";var BasicRenderer=require('web.BasicRenderer');const{ComponentWrapper}=require('web.OwlCompatibility');var config=require('web.config');var core=require('web.core');var dom=require('web.dom');var field_utils=require('web.field_utils');var Pager=require('web.Pager');var utils=require('web.utils');var viewUtils=require('web.viewUtils');var _t=core._t;var DECORATIONS=['decoration-bf','decoration-it','decoration-danger','decoration-info','decoration-muted','decoration-primary','decoration-success','decoration-warning'];var FIELD_CLASSES={char:'o_list_char',float:'o_list_number',integer:'o_list_number',monetary:'o_list_number',text:'o_list_text',many2one:'o_list_many2one',};var ListRenderer=BasicRenderer.extend({className:'o_list_view',events:{"mousedown":"_onMouseDown","click .o_optional_columns_dropdown .dropdown-item":"_onToggleOptionalColumn","click .o_optional_columns_dropdown_toggle":"_onToggleOptionalColumnDropdown",'click tbody tr':'_onRowClicked','change tbody .o_list_record_selector':'_onSelectRecord','click thead th.o_column_sortable':'_onSortColumn','click .o_list_record_selector':'_onToggleCheckbox','click .o_group_header':'_onToggleGroup','change thead .o_list_record_selector input':'_onToggleSelection','keypress thead tr td':'_onKeyPress','keydown td':'_onKeyDown','keydown th':'_onKeyDown',},sampleDataTargets:['.o_data_row','.o_group_header','.o_list_table > tfoot','.o_list_table > thead .o_list_record_selector',],init:function(parent,state,params){this._super.apply(this,arguments);this._preprocessColumns();this.columnInvisibleFields=params.columnInvisibleFields||{};this.rowDecorations=this._extractDecorationAttrs(this.arch);this.fieldDecorations={};for(const field of this.arch.children.filter(c=>c.tag==='field')){const decorations=this._extractDecorationAttrs(field);this.fieldDecorations[field.attrs.name]=decorations;}
this.hasSelectors=params.hasSelectors;this.selection=params.selectedRecords||[];this.pagers=[];this.isGrouped=this.state.groupedBy.length>0;this.groupbys=params.groupbys;},willStart:function(){this._processColumns(this.columnInvisibleFields);return this._super.apply(this,arguments);},giveFocus:function(){this.$('th:eq(0) input, th:eq(1)').first().focus();},updateState:function(state,params){this._setState(state);this.isGrouped=this.state.groupedBy.length>0;this.columnInvisibleFields=params.columnInvisibleFields||{};this._processColumns(this.columnInvisibleFields);if(params.selectedRecords){this.selection=params.selectedRecords;}
return this._super.apply(this,arguments);},_computeAggregates:function(){var self=this;var data=[];if(this.selection.length){utils.traverse_records(this.state,function(record){if(_.contains(self.selection,record.id)){data.push(record);}});}else{data=this.state.data;}
_.each(this.columns,this._computeColumnAggregates.bind(this,data));},_computeColumnAggregates:function(data,column){var attrs=column.attrs;var field=this.state.fields[attrs.name];if(!field){return;}
var type=field.type;if(type!=='integer'&&type!=='float'&&type!=='monetary'){return;}
var func=(attrs.sum&&'sum')||(attrs.avg&&'avg')||(attrs.max&&'max')||(attrs.min&&'min');if(func){var count=0;var aggregateValue=0;if(func==='max'){aggregateValue=-Infinity;}else if(func==='min'){aggregateValue=Infinity;}
_.each(data,function(d){count+=1;var value=(d.type==='record')?d.data[attrs.name]:d.aggregateValues[attrs.name];if(func==='avg'){aggregateValue+=value;}else if(func==='sum'){aggregateValue+=value;}else if(func==='max'){aggregateValue=Math.max(aggregateValue,value);}else if(func==='min'){aggregateValue=Math.min(aggregateValue,value);}});if(func==='avg'){aggregateValue=count?aggregateValue/count:aggregateValue;}
column.aggregate={help:attrs[func],value:aggregateValue,};}},_extractDecorationAttrs:function(node){const decorations={};for(const[key,expr]of Object.entries(node.attrs)){if(DECORATIONS.includes(key)){const cssClass=key.replace('decoration','text');decorations[cssClass]=py.parse(py.tokenize(expr));}}
return decorations;},_findConnectedCell:function($cell,direction,colIndex){var $connectedRow=$cell.closest('tr')[direction]('tr');if(!$connectedRow.length){var tbody=$cell.closest('tbody, thead');var $connectedGroup=tbody[direction]('tbody, thead');if($connectedGroup.length){var $connectedRows=$connectedGroup.find('tr');var rowIndex;if(direction==='prev'){rowIndex=$connectedRows.length-1;}else{rowIndex=0;}
$connectedRow=$connectedRows.eq(rowIndex);}else{return;}}
var $connectedCell;if($connectedRow.hasClass('o_group_header')){$connectedCell=$connectedRow.children();this.currentColIndex=colIndex;}else if($connectedRow.has('td.o_group_field_row_add').length){$connectedCell=$connectedRow.find('.o_group_field_row_add');this.currentColIndex=colIndex;}else{var connectedRowChildren=$connectedRow.children();if(colIndex===-1){colIndex=connectedRowChildren.length-1;}
$connectedCell=connectedRowChildren.eq(colIndex);}
return $connectedCell;},_getNumberOfCols:function(){var n=this.columns.length;return this.hasSelectors?n+1:n;},_getOptionalColumnsStorageKeyParts:function(){var self=this;return{fields:_.map(this.state.fieldsInfo[this.viewType],function(_,fieldName){return{name:fieldName,type:self.state.fields[fieldName].type};}),};},_groupAdjacentButtons:function(){const children=[];let groupId=0;let buttonGroupNode=null;for(const c of this.arch.children){if(c.tag==='button'){if(!buttonGroupNode){buttonGroupNode={tag:'button_group',children:[c],attrs:{name:`button_group_${groupId++}`,modifiers:{},},};children.push(buttonGroupNode);}else{buttonGroupNode.children.push(c);}}else{buttonGroupNode=null;children.push(c);}}
this.arch.children=children;},_preprocessColumns:function(){this._processModeClassNames();this._groupAdjacentButtons();this.arch.children.filter(c=>c.tag==='button_group').forEach(c=>{c.attrs.editOnly=c.children.every(n=>n.attrs.editOnly);c.attrs.readOnly=c.children.every(n=>n.attrs.readOnly);});},_processColumns:function(columnInvisibleFields){var self=this;this.handleField=null;this.columns=[];this.optionalColumns=[];this.optionalColumnsEnabled=[];var storedOptionalColumns;this.trigger_up('load_optional_fields',{keyParts:this._getOptionalColumnsStorageKeyParts(),callback:function(res){storedOptionalColumns=res;},});_.each(this.arch.children,function(c){if(c.tag!=='control'&&c.tag!=='groupby'&&c.tag!=='header'){var reject=c.attrs.modifiers.column_invisible;if(c.tag==="button_group"){reject=c.children.every(child=>columnInvisibleFields[child.attrs.name]);}else if(c.attrs.name in columnInvisibleFields){reject=columnInvisibleFields[c.attrs.name];}
if(!reject&&c.attrs.widget==='handle'){self.handleField=c.attrs.name;if(self.isGrouped){reject=true;}}
if(!reject&&c.attrs.optional){self.optionalColumns.push(c);var enabled;if(storedOptionalColumns===undefined){enabled=c.attrs.optional==='show';}else{enabled=_.contains(storedOptionalColumns,c.attrs.name);}
if(enabled){self.optionalColumnsEnabled.push(c.attrs.name);}
reject=!enabled;}
if(!reject){self.columns.push(c);}}});},_processModeClassNames:function(){this.arch.children.forEach(c=>{if(c.attrs.class){c.attrs.editOnly=/\boe_edit_only\b/.test(c.attrs.class);c.attrs.readOnly=/\boe_read_only\b/.test(c.attrs.class);}});},_renderAggregateCells:function(aggregateValues){var self=this;return _.map(this.columns,function(column){var $cell=$('<td>');if(config.isDebug()){$cell.addClass(column.attrs.name);}
if(column.attrs.editOnly){$cell.addClass('oe_edit_only');}
if(column.attrs.readOnly){$cell.addClass('oe_read_only');}
if(column.attrs.name in aggregateValues){var field=self.state.fields[column.attrs.name];var value=aggregateValues[column.attrs.name].value;var help=aggregateValues[column.attrs.name].help;var formatFunc=field_utils.format[column.attrs.widget];if(!formatFunc){formatFunc=field_utils.format[field.type];}
var formattedValue=formatFunc(value,field,{escape:true,digits:column.attrs.digits?JSON.parse(column.attrs.digits):undefined,});$cell.addClass('o_list_number').attr('title',help).html(formattedValue);}
return $cell;});},_renderBody:function(){var self=this;var $rows=this._renderRows();while($rows.length<4){$rows.push(self._renderEmptyRow());}
return $('<tbody>').append($rows);},_renderBodyCell:function(record,node,colIndex,options){var tdClassName='o_data_cell';if(node.tag==='button_group'){tdClassName+=' o_list_button';}else if(node.tag==='field'){tdClassName+=' o_field_cell';var typeClass=FIELD_CLASSES[this.state.fields[node.attrs.name].type];if(typeClass){tdClassName+=(' '+typeClass);}
if(node.attrs.widget){tdClassName+=(' o_'+node.attrs.widget+'_cell');}}
if(node.attrs.editOnly){tdClassName+=' oe_edit_only';}
if(node.attrs.readOnly){tdClassName+=' oe_read_only';}
var $td=$('<td>',{class:tdClassName,tabindex:-1});var modifiers=this._registerModifiers(node,record,$td,_.pick(options,'mode'));if(modifiers.invisible&&!(options&&options.renderInvisible)){return $td;}
if(node.tag==='button_group'){for(const buttonNode of node.children){if(!this.columnInvisibleFields[buttonNode.attrs.name]){$td.append(this._renderButton(record,buttonNode));}}
return $td;}else if(node.tag==='widget'){return $td.append(this._renderWidget(record,node));}
if(node.attrs.widget||(options&&options.renderWidgets)){var $el=this._renderFieldWidget(node,record,_.pick(options,'mode'));return $td.append($el);}
this._handleAttributes($td,node);this._setDecorationClasses($td,this.fieldDecorations[node.attrs.name],record);var name=node.attrs.name;var field=this.state.fields[name];var value=record.data[name];var formatter=field_utils.format[field.type];var formatOptions={escape:true,data:record.data,isPassword:'password'in node.attrs,digits:node.attrs.digits&&JSON.parse(node.attrs.digits),};var formattedValue=formatter(value,field,formatOptions);var title='';if(field.type!=='boolean'){title=formatter(value,field,_.extend(formatOptions,{escape:false}));}
return $td.html(formattedValue).attr('title',title);},_renderButton:function(record,node){var self=this;var nodeWithoutWidth=Object.assign({},node);delete nodeWithoutWidth.attrs.width;let extraClass='';if(node.attrs.icon){const btnStyleRegex=/\bbtn-[a-z]+\b/;if(!btnStyleRegex.test(nodeWithoutWidth.attrs.class)){extraClass='btn-link o_icon_button';}}
var $button=viewUtils.renderButtonFromNode(nodeWithoutWidth,{extraClass:extraClass,});this._handleAttributes($button,node);this._registerModifiers(node,record,$button);if(record.res_id){$button.on("click",function(e){e.stopPropagation();self.trigger_up('button_clicked',{attrs:node.attrs,record:record,});});}else{if(node.attrs.options.warn){$button.on("click",function(e){e.stopPropagation();self.do_warn(false,_t('Please click on the "save" button first'));});}else{$button.prop('disabled',true);}}
return $button;},_renderEmptyRow:function(){var $td=$('<td>&nbsp;</td>').attr('colspan',this._getNumberOfCols());return $('<tr>').append($td);},_renderFooter:function(){var aggregates={};_.each(this.columns,function(column){if('aggregate'in column){aggregates[column.attrs.name]=column.aggregate;}});var $cells=this._renderAggregateCells(aggregates);if(this.hasSelectors){$cells.unshift($('<td>'));}
return $('<tfoot>').append($('<tr>').append($cells));},_renderGroupButton:function(list,node){var $button=viewUtils.renderButtonFromNode(node,{extraClass:node.attrs.icon?'o_icon_button':undefined,textAsTitle:!!node.attrs.icon,});this._handleAttributes($button,node);this._registerModifiers(node,list.groupData,$button);$button.on("click",this._onGroupButtonClicked.bind(this,list.groupData,node));$button.on("keydown",this._onGroupButtonKeydown.bind(this));return $button;},_renderGroupButtons:function(list,group){var self=this;var $buttons=$();if(list.value){group.arch.children.forEach(function(child){if(child.tag==='button'){$buttons=$buttons.add(self._renderGroupButton(list,child));}});}
return $buttons;},_renderGroupRow:function(group,groupLevel){var cells=[];var name=group.value===undefined?_t('Undefined'):group.value;var groupBy=this.state.groupedBy[groupLevel];if(group.fields[groupBy.split(':')[0]].type!=='boolean'){name=name||_t('Undefined');}
var $th=$('<th>').addClass('o_group_name').attr('tabindex',-1).text(name+' ('+group.count+')');var $arrow=$('<span>').css('padding-left',2+(groupLevel*20)+'px').css('padding-right','5px').addClass('fa');if(group.count>0){$arrow.toggleClass('fa-caret-right',!group.isOpen).toggleClass('fa-caret-down',group.isOpen);}
$th.prepend($arrow);cells.push($th);var aggregateKeys=Object.keys(group.aggregateValues);var aggregateValues=_.mapObject(group.aggregateValues,function(value){return{value:value};});var aggregateCells=this._renderAggregateCells(aggregateValues);var firstAggregateIndex=_.findIndex(this.columns,function(column){return column.tag==='field'&&_.contains(aggregateKeys,column.attrs.name);});var colspanBeforeAggregate;if(firstAggregateIndex!==-1){colspanBeforeAggregate=firstAggregateIndex;var lastAggregateIndex=_.findLastIndex(this.columns,function(column){return column.tag==='field'&&_.contains(aggregateKeys,column.attrs.name);});cells=cells.concat(aggregateCells.slice(firstAggregateIndex,lastAggregateIndex+1));var colSpan=this.columns.length-1-lastAggregateIndex;if(colSpan>0){cells.push($('<th>').attr('colspan',colSpan));}}else{var colN=this.columns.length;colspanBeforeAggregate=colN>1?colN-1:1;if(colN>1){cells.push($('<th>'));}}
if(this.hasSelectors){colspanBeforeAggregate+=1;}
$th.attr('colspan',colspanBeforeAggregate);if(group.isOpen&&!group.groupedBy.length&&(group.count>group.data.length)){const lastCell=cells[cells.length-1][0];this._renderGroupPager(group,lastCell);}
if(group.isOpen&&this.groupbys[groupBy]){var $buttons=this._renderGroupButtons(group,this.groupbys[groupBy]);if($buttons.length){var $buttonSection=$('<div>',{class:'o_group_buttons',}).append($buttons);$th.append($buttonSection);}}
return $('<tr>').addClass('o_group_header').toggleClass('o_group_open',group.isOpen).toggleClass('o_group_has_content',group.count>0).data('group',group).append(cells);},_renderGroup:function(group,groupLevel){var self=this;if(group.groupedBy.length){return this._renderGroups(group.data,groupLevel+1);}else{var $records=_.map(group.data,function(record){return self._renderRow(record);});return[$('<tbody>').append($records)];}},_renderGroupPager:function(group,target){const currentMinimum=group.offset+1;const limit=group.limit;const size=group.count;if(!this._shouldRenderPager(currentMinimum,limit,size)){return;}
const pager=new ComponentWrapper(this,Pager,{currentMinimum,limit,size});const pagerMounting=pager.mount(target).then(()=>{pager.el.addEventListener('pager-changed',ev=>this._onPagerChanged(ev,group));pager.el.addEventListener('click',ev=>ev.stopPropagation());});this.defs.push(pagerMounting);this.pagers.push(pager);},_renderGroups:function(data,groupLevel){var self=this;groupLevel=groupLevel||0;var result=[];var $tbody=$('<tbody>');_.each(data,function(group){if(!$tbody){$tbody=$('<tbody>');}
$tbody.append(self._renderGroupRow(group,groupLevel));if(group.data.length){result.push($tbody);result=result.concat(self._renderGroup(group,groupLevel));$tbody=null;}});if($tbody){result.push($tbody);}
return result;},_renderHeader:function(){var $tr=$('<tr>').append(_.map(this.columns,this._renderHeaderCell.bind(this)));if(this.hasSelectors){$tr.prepend(this._renderSelector('th'));}
return $('<thead>').append($tr);},_renderHeaderCell:function(node){const{icon,name,string}=node.attrs;var order=this.state.orderedBy;var isNodeSorted=order[0]&&order[0].name===name;var field=this.state.fields[name];var $th=$('<th>');if(name){$th.attr('data-name',name);}else if(string){$th.attr('data-string',string);}else if(icon){$th.attr('data-icon',icon);}
if(node.attrs.editOnly){$th.addClass('oe_edit_only');}
if(node.attrs.readOnly){$th.addClass('oe_read_only');}
if(node.tag==='button_group'){$th.addClass('o_list_button');}
if(!field||node.attrs.nolabel==='1'){return $th;}
var description=string||field.string;if(node.attrs.widget){$th.addClass(' o_'+node.attrs.widget+'_cell');const FieldWidget=this.state.fieldsInfo.list[name].Widget;if(FieldWidget.prototype.noLabel){description='';}else if(FieldWidget.prototype.label){description=FieldWidget.prototype.label;}}
$th.text(description).attr('tabindex',-1).toggleClass('o-sort-down',isNodeSorted?!order[0].asc:false).toggleClass('o-sort-up',isNodeSorted?order[0].asc:false).addClass((field.sortable||this.state.fieldsInfo.list[name].options.allow_order||false)&&'o_column_sortable');if(isNodeSorted){$th.attr('aria-sort',order[0].asc?'ascending':'descending');}
if(field.type==='float'||field.type==='integer'||field.type==='monetary'){$th.addClass('o_list_number_th');}
if(config.isDebug()){var fieldDescr={field:field,name:name,string:description||name,record:this.state,attrs:_.extend({},node.attrs,this.state.fieldsInfo.list[name]),};this._addFieldTooltip(fieldDescr,$th);}else{$th.attr('title',description);}
return $th;},_renderRow:function(record){var self=this;var $cells=this.columns.map(function(node,index){return self._renderBodyCell(record,node,index,{mode:'readonly'});});var $tr=$('<tr/>',{class:'o_data_row'}).attr('data-id',record.id).append($cells);if(this.hasSelectors){$tr.prepend(this._renderSelector('td',!record.res_id));}
this._setDecorationClasses($tr,this.rowDecorations,record);return $tr;},_renderRows:function(){return this.state.data.map(this._renderRow.bind(this));},_renderOptionalColumnsDropdown:function(){var self=this;var $optionalColumnsDropdown=$('<div>',{class:'o_optional_columns text-center dropdown',});var $a=$("<a>",{'class':"dropdown-toggle text-dark o-no-caret",'href':"#",'role':"button",'data-toggle':"dropdown",'data-display':"static",'aria-expanded':false,});$a.appendTo($optionalColumnsDropdown);var direction=_t.database.parameters.direction;var dropdownMenuClass=direction==='rtl'?'dropdown-menu-left':'dropdown-menu-right';var $dropdown=$("<div>",{class:'dropdown-menu o_optional_columns_dropdown '+dropdownMenuClass,role:'menu',});this.optionalColumns.forEach(function(col){var txt=(col.attrs.string||self.state.fields[col.attrs.name].string)+
(config.isDebug()?(' ('+col.attrs.name+')'):'');var $checkbox=dom.renderCheckbox({text:txt,prop:{name:col.attrs.name,checked:_.contains(self.optionalColumnsEnabled,col.attrs.name),}});$dropdown.append($("<div>",{class:"dropdown-item",}).append($checkbox));});$dropdown.appendTo($optionalColumnsDropdown);return $optionalColumnsDropdown;},_renderSelector:function(tag,disableInput){var $content=dom.renderCheckbox();if(disableInput){$content.find("input[type='checkbox']").prop('disabled',disableInput);}
return $('<'+tag+'>').addClass('o_list_record_selector').append($content);},async _renderView(){const oldPagers=this.pagers;let prom;let tableWrapper;if(this.state.count>0||!this.noContentHelp){this.pagers=[];const orderedBy=this.state.orderedBy;this.hasHandle=orderedBy.length===0||orderedBy[0].name===this.handleField;this._computeAggregates();const $table=$('<table class="o_list_table table table-sm table-hover table-striped"/>');$table.toggleClass('o_list_table_grouped',this.isGrouped);$table.toggleClass('o_list_table_ungrouped',!this.isGrouped);const defs=[];this.defs=defs;if(this.isGrouped){$table.append(this._renderHeader());$table.append(this._renderGroups(this.state.data));$table.append(this._renderFooter());}else{$table.append(this._renderHeader());$table.append(this._renderBody());$table.append(this._renderFooter());}
tableWrapper=Object.assign(document.createElement('div'),{className:'table-responsive',});tableWrapper.appendChild($table[0]);delete this.defs;prom=Promise.all(defs);}
await Promise.all([this._super.apply(this,arguments),prom]);this.el.innerHTML="";this.el.classList.remove('o_list_optional_columns');oldPagers.forEach(pager=>pager.destroy());if(tableWrapper){this.el.appendChild(tableWrapper);if(document.body.contains(this.el)){this.pagers.forEach(pager=>pager.on_attach_callback());}
if(this.optionalColumns.length){this.el.classList.add('o_list_optional_columns');this.$('table').append($('<i class="o_optional_columns_dropdown_toggle fa fa-ellipsis-v"/>'));this.$('table').append(this._renderOptionalColumnsDropdown());}
if(this.selection.length){const $checked_rows=this.$('tr').filter((i,el)=>this.selection.includes(el.dataset.id));$checked_rows.find('.o_list_record_selector input').prop('checked',true);if($checked_rows.length===this.$('.o_data_row').length){this.$('thead .o_list_record_selector input').prop('checked',true);}}}
if(!this._hasContent()&&!!this.noContentHelp){this._renderNoContentHelper();}},_setDecorationClasses:function($el,decorations,record){for(const[cssClass,expr]of Object.entries(decorations)){$el.toggleClass(cssClass,py.PY_isTrue(py.evaluate(expr,record.evalContext)));}},_shouldRenderPager:function(currentMinimum,limit,size){if(!limit||!size){return false;}
const maximum=Math.min(currentMinimum+limit-1,size);const singlePage=(1===currentMinimum)&&(maximum===size);return!singlePage;},_updateFooter:function(){this._computeAggregates();this.$('tfoot').replaceWith(this._renderFooter());},_updateSelection:function(){this.selection=[];var self=this;var $inputs=this.$('tbody .o_list_record_selector input:visible:not(:disabled)');var allChecked=$inputs.length>0;$inputs.each(function(index,input){if(input.checked){self.selection.push($(input).closest('tr').data('id'));}else{allChecked=false;}});this.$('thead .o_list_record_selector input').prop('checked',allChecked);this.trigger_up('selection_changed',{allChecked,selection:this.selection});this._updateFooter();},_onGroupButtonClicked:function(record,node,ev){ev.stopPropagation();if(node.attrs.type==='edit'){this.trigger_up('group_edit_button_clicked',{record:record,});}else{this.trigger_up('button_clicked',{attrs:node.attrs,record:record,});}},_onGroupButtonKeydown:function(ev){if(ev.keyCode===$.ui.keyCode.ENTER){ev.stopPropagation();}},_onToggleOptionalColumn:function(ev){var self=this;ev.stopPropagation();ev.preventDefault();var input=ev.currentTarget.querySelector('input');var fieldIndex=this.optionalColumnsEnabled.indexOf(input.name);if(fieldIndex>=0){this.optionalColumnsEnabled.splice(fieldIndex,1);}else{this.optionalColumnsEnabled.push(input.name);}
this.trigger_up('save_optional_fields',{keyParts:this._getOptionalColumnsStorageKeyParts(),optionalColumnsEnabled:this.optionalColumnsEnabled,});this._processColumns(this.columnInvisibleFields);this._render().then(function(){self._onToggleOptionalColumnDropdown(ev);});},_onToggleOptionalColumnDropdown:function(ev){ev.stopPropagation();this.$('.o_optional_columns .dropdown-toggle').dropdown('toggle');},_onKeyDown:function(ev){var $cell=$(ev.currentTarget);var $tr;var $futureCell;var colIndex;if(this.state.isSample){return;}
switch(ev.keyCode){case $.ui.keyCode.LEFT:ev.preventDefault();$tr=$cell.closest('tr');$tr.closest('tbody').addClass('o_keyboard_navigation');if($tr.hasClass('o_group_header')&&$tr.hasClass('o_group_open')){this._onToggleGroup(ev);}else{$futureCell=$cell.prev();}
break;case $.ui.keyCode.RIGHT:ev.preventDefault();$tr=$cell.closest('tr');$tr.closest('tbody').addClass('o_keyboard_navigation');if($tr.hasClass('o_group_header')&&!$tr.hasClass('o_group_open')){this._onToggleGroup(ev);}else{$futureCell=$cell.next();}
break;case $.ui.keyCode.UP:ev.preventDefault();$cell.closest('tbody').addClass('o_keyboard_navigation');colIndex=this.currentColIndex||$cell.index();$futureCell=this._findConnectedCell($cell,'prev',colIndex);if(!$futureCell){this.trigger_up('navigation_move',{direction:'up'});}
break;case $.ui.keyCode.DOWN:ev.preventDefault();$cell.closest('tbody').addClass('o_keyboard_navigation');colIndex=this.currentColIndex||$cell.index();$futureCell=this._findConnectedCell($cell,'next',colIndex);break;case $.ui.keyCode.ENTER:ev.preventDefault();$tr=$cell.closest('tr');if($tr.hasClass('o_group_header')){this._onToggleGroup(ev);}else{var id=$tr.data('id');if(id){this.trigger_up('open_record',{id:id,target:ev.target});}}
break;}
if($futureCell){var isInGroupHeader=$futureCell.closest('tr').hasClass('o_group_header');var $activables=!isInGroupHeader&&$futureCell.find(':focusable');if($activables.length){$activables[0].focus();}else{$futureCell.focus();}}},_onMouseDown:function(){$('.o_keyboard_navigation').removeClass('o_keyboard_navigation');},_onPagerChanged:async function(ev,group){ev.stopPropagation();const{currentMinimum,limit}=ev.detail;this.trigger_up('load',{id:group.id,limit:limit,offset:currentMinimum-1,on_success:reloadedGroup=>{Object.assign(group,reloadedGroup);this._render();},});},_onRowClicked:function(ev){if(!ev.target.closest('.o_list_record_selector')&&!$(ev.target).prop('special_click')){var id=$(ev.currentTarget).data('id');if(id){this.trigger_up('open_record',{id:id,target:ev.target});}}},_onSelectRecord:function(ev){ev.stopPropagation();this._updateSelection();},_onSortColumn:function(ev){var name=$(ev.currentTarget).data('name');this.trigger_up('toggle_column_order',{id:this.state.id,name:name});},_onToggleCheckbox:function(ev){const $recordSelector=$(ev.target).find('input[type=checkbox]:not(":disabled")');$recordSelector.prop('checked',!$recordSelector.prop("checked"));$recordSelector.change();},_onToggleGroup:function(ev){ev.preventDefault();var group=$(ev.currentTarget).closest('tr').data('group');if(group.count){this.trigger_up('toggle_group',{group:group,onSuccess:()=>{this._updateSelection();if(document.activeElement.tagName==='BODY'){var groupHeaders=$('tr.o_group_header:data("group")');var header=groupHeaders.filter(function(){return $(this).data('group').id===group.id;});header.find('.o_group_name').focus();}},});}},_onToggleSelection:function(ev){var checked=$(ev.currentTarget).prop('checked')||false;this.$('tbody .o_list_record_selector input:not(":disabled")').prop('checked',checked);this._updateSelection();},});return ListRenderer;});;

/* /web/static/src/js/views/list/list_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.ListView',function(require){"use strict";var BasicView=require('web.BasicView');var core=require('web.core');var ListModel=require('web.ListModel');var ListRenderer=require('web.ListRenderer');var ListController=require('web.ListController');var pyUtils=require('web.py_utils');var _lt=core._lt;var ListView=BasicView.extend({accesskey:"l",display_name:_lt('List'),icon:'fa-list-ul',config:_.extend({},BasicView.prototype.config,{Model:ListModel,Renderer:ListRenderer,Controller:ListController,}),viewType:'list',init:function(viewInfo,params){var self=this;this._super.apply(this,arguments);var selectedRecords=[];var pyevalContext=py.dict.fromJSON(_.pick(params.context,function(value,key,object){return!_.isUndefined(value)})||{});var expandGroups=!!JSON.parse(pyUtils.py_eval(this.arch.attrs.expand||"0",{'context':pyevalContext}));this.groupbys={};this.headerButtons=[];this.arch.children.forEach(function(child){if(child.tag==='groupby'){self._extractGroup(child);}
if(child.tag==='header'){self._extractHeaderButtons(child);}});let editable=false;if((!this.arch.attrs.edit||!!JSON.parse(this.arch.attrs.edit))&&!params.readonly){editable=this.arch.attrs.editable;}
this.controllerParams.activeActions.export_xlsx=this.arch.attrs.export_xlsx?!!JSON.parse(this.arch.attrs.export_xlsx):true;this.controllerParams.editable=editable;this.controllerParams.hasActionMenus=params.hasActionMenus;this.controllerParams.headerButtons=this.headerButtons;this.controllerParams.toolbarActions=viewInfo.toolbar;this.controllerParams.mode='readonly';this.controllerParams.selectedRecords=selectedRecords;this.rendererParams.arch=this.arch;this.rendererParams.groupbys=this.groupbys;this.rendererParams.hasSelectors='hasSelectors'in params?params.hasSelectors:true;this.rendererParams.editable=editable;this.rendererParams.selectedRecords=selectedRecords;this.rendererParams.addCreateLine=false;this.rendererParams.addCreateLineInGroups=editable&&this.controllerParams.activeActions.create;this.rendererParams.isMultiEditable=this.arch.attrs.multi_edit&&!!JSON.parse(this.arch.attrs.multi_edit);this.modelParams.groupbys=this.groupbys;this.loadParams.limit=this.loadParams.limit||80;this.loadParams.openGroupByDefault=expandGroups;this.loadParams.type='list';var groupsLimit=parseInt(this.arch.attrs.groups_limit,10);this.loadParams.groupsLimit=groupsLimit||(expandGroups?10:80);},_extractGroup:function(node){var innerView=this.fields[node.attrs.name].views.groupby;this.groupbys[node.attrs.name]=this._processFieldsView(innerView,'groupby');},_extractHeaderButtons(node){node.children.forEach(child=>{if(child.tag==='button'&&!child.attrs.modifiers.invisible){this.headerButtons.push(child);}});},_extractParamsFromAction:function(action){var params=this._super.apply(this,arguments);var inDialog=action.target==='new';var inline=action.target==='inline';params.hasActionMenus=!inDialog&&!inline;return params;},_updateMVCParams:function(){this._super.apply(this,arguments);this.controllerParams.noLeaf=!!this.loadParams.context.group_by_no_leaf;},});return ListView;});;

/* /web/static/src/js/views/list/list_controller.js defined in bundle 'web.assets_backend' */
odoo.define('web.ListController',function(require){"use strict";var core=require('web.core');var BasicController=require('web.BasicController');var DataExport=require('web.DataExport');var Dialog=require('web.Dialog');var ListConfirmDialog=require('web.ListConfirmDialog');var session=require('web.session');const viewUtils=require('web.viewUtils');var _t=core._t;var qweb=core.qweb;var ListController=BasicController.extend({buttons_template:'ListView.buttons',events:_.extend({},BasicController.prototype.events,{'click .o_list_export_xlsx':'_onDirectExportData','click .o_list_select_domain':'_onSelectDomain',}),custom_events:_.extend({},BasicController.prototype.custom_events,{activate_next_widget:'_onActivateNextWidget',add_record:'_onAddRecord',button_clicked:'_onButtonClicked',group_edit_button_clicked:'_onEditGroupClicked',edit_line:'_onEditLine',save_line:'_onSaveLine',selection_changed:'_onSelectionChanged',toggle_column_order:'_onToggleColumnOrder',toggle_group:'_onToggleGroup',}),init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.hasActionMenus=params.hasActionMenus;this.headerButtons=params.headerButtons||[];this.toolbarActions=params.toolbarActions||{};this.editable=params.editable;this.noLeaf=params.noLeaf;this.selectedRecords=params.selectedRecords||[];this.multipleRecordsSavingPromise=null;this.fieldChangedPrevented=false;this.isPageSelected=false;this.isDomainSelected=false;this.isExportEnable=false;},willStart(){const sup=this._super(...arguments);const acl=session.user_has_group('base.group_allow_export').then(hasGroup=>{this.isExportEnable=hasGroup;});return Promise.all([sup,acl]);},getOwnedQueryParams:function(){var state=this._super.apply(this,arguments);var orderedBy=this.model.get(this.handle,{raw:true}).orderedBy||[];return _.extend({},state,{orderedBy:orderedBy});},getSelectedIds:function(){return _.map(this.getSelectedRecords(),function(record){return record.res_id;});},getSelectedRecords:function(){var self=this;return _.map(this.selectedRecords,function(db_id){return self.model.get(db_id,{raw:true});});},renderButtons:function($node){if(this.noLeaf||!this.hasButtons){this.hasButtons=false;this.$buttons=$('<div>');}else{this.$buttons=$(qweb.render(this.buttons_template,{widget:this}));this.$buttons.on('click','.o_list_button_add',this._onCreateRecord.bind(this));this._assignCreateKeyboardBehavior(this.$buttons.find('.o_list_button_add'));this.$buttons.find('.o_list_button_add').tooltip({delay:{show:200,hide:0},title:function(){return qweb.render('CreateButton.tooltip');},trigger:'manual',});this.$buttons.on('mousedown','.o_list_button_discard',this._onDiscardMousedown.bind(this));this.$buttons.on('click','.o_list_button_discard',this._onDiscard.bind(this));}
if($node){this.$buttons.appendTo($node);}},_renderHeaderButtons(){if(this.$headerButtons){this.$headerButtons.remove();this.$headerButtons=null;}
if(!this.headerButtons.length||!this.selectedRecords.length){return;}
const btnClasses='btn-primary btn-secondary btn-link btn-success btn-info btn-warning btn-danger'.split(' ');let $elms=$();this.headerButtons.forEach(node=>{const $btn=viewUtils.renderButtonFromNode(node);$btn.addClass('btn');if(!btnClasses.some(cls=>$btn.hasClass(cls))){$btn.addClass('btn-secondary');}
$btn.on("click",this._onHeaderButtonClicked.bind(this,node));$elms=$elms.add($btn);});this.$headerButtons=$elms;this.$headerButtons.appendTo(this.$buttons);},update:function(params,options){var self=this;let res_ids;if(options&&options.keepSelection){res_ids=this.model.get(this.handle).res_ids;this.selectedRecords=_.filter(this.selectedRecords,function(id){return _.contains(res_ids,self.model.get(id).res_id);});}else{this.selectedRecords=[];}
if(this.selectedRecords.length===0||this.selectedRecords.length<res_ids.length){this.isDomainSelected=false;this.isPageSelected=false;}
params.selectedRecords=this.selectedRecords;return this._super.apply(this,arguments);},updateButtons:function(mode){if(this.hasButtons){this.$buttons.toggleClass('o-editing',mode==='edit');const state=this.model.get(this.handle,{raw:true});if(state.count){this.$buttons.find('.o_list_export_xlsx').show();}else{this.$buttons.find('.o_list_export_xlsx').hide();}}
this._updateSelectionBox();},_abandonRecord:function(recordID){this._super.apply(this,arguments);if((recordID||this.handle)!==this.handle){var state=this.model.get(this.handle);this.renderer.removeLine(state,recordID);this._updatePaging(state);}},_addRecord:function(dataPointId){var self=this;this._disableButtons();return this._removeSampleData(()=>{return this.renderer.unselectRow().then(function(){return self.model.addDefaultRecord(dataPointId,{position:self.editable,});}).then(function(recordID){var state=self.model.get(self.handle);self._updateRendererState(state,{keepWidths:true}).then(function(){self.renderer.editRecord(recordID);}).then(()=>{self._updatePaging(state);});}).then(this._enableButtons.bind(this)).guardedCatch(this._enableButtons.bind(this));});},_assignCreateKeyboardBehavior:function($createButton){var self=this;$createButton.on('keydown',function(e){$createButton.tooltip('hide');switch(e.which){case $.ui.keyCode.ENTER:e.preventDefault();self._onCreateRecord.apply(self);break;case $.ui.keyCode.DOWN:e.preventDefault();self._giveFocus();break;case $.ui.keyCode.TAB:if(!e.shiftKey&&e.target.classList.contains("btn-primary")&&!self.model.isInSampleMode()){e.preventDefault();$createButton.tooltip('show');}
break;}});},_confirmSave:function(id){var state=this.model.get(this.handle);return this._updateRendererState(state,{noRender:true}).then(this._setMode.bind(this,'readonly',id));},_deleteRecordsInCurrentDomain:function(){const doIt=async()=>{const state=this.model.get(this.handle,{raw:true});const resIds=await this._domainToResIds(state.getDomain(),session.active_ids_limit);await this._rpc({model:this.modelName,method:'unlink',args:[resIds],context:state.getContext(),});if(resIds.length===session.active_ids_limit){const msg=_.str.sprintf(_t("Only the first %d records have been deleted (out of %d selected)"),resIds.length,state.count);this.do_notify(false,msg);}
this.reload();};if(this.confirmOnDelete){Dialog.confirm(this,_t("Are you sure you want to delete these records ?"),{confirm_callback:doIt,});}else{doIt();}},_discardChanges:function(recordID){if((recordID||this.handle)===this.handle){recordID=this.renderer.getEditableRecordID();if(recordID===null){return Promise.resolve();}}
var self=this;return this._super(recordID).then(function(){self.updateButtons('readonly');});},_domainToResIds:function(domain,limit){return this._rpc({model:this.modelName,method:'search',args:[domain],kwargs:{limit:limit,},});},_getExportDialogWidget(){let state=this.model.get(this.handle);let defaultExportFields=this.renderer.columns.filter(field=>field.tag==='field').map(field=>field.attrs.name);let groupedBy=this.renderer.state.groupedBy;const domain=this.isDomainSelected&&state.getDomain();return new DataExport(this,state,defaultExportFields,groupedBy,domain,this.getSelectedIds());},_getPagingInfo:function(state){if(!state.count){return null;}
return this._super(...arguments);},_getActionMenuItems:function(state){if(!this.hasActionMenus||!this.selectedRecords.length){return null;}
const props=this._super(...arguments);const otherActionItems=[];if(this.isExportEnable){otherActionItems.push({description:_t("Export"),callback:()=>this._onExportData()});}
if(this.archiveEnabled){otherActionItems.push({description:_t("Archive"),callback:()=>{Dialog.confirm(this,_t("Are you sure that you want to archive all the selected records?"),{confirm_callback:()=>this._toggleArchiveState(true),});}},{description:_t("Unarchive"),callback:()=>this._toggleArchiveState(false)});}
if(this.activeActions.delete){otherActionItems.push({description:_t("Delete"),callback:()=>this._onDeleteSelectedRecords()});}
return Object.assign(props,{items:Object.assign({},this.toolbarActions,{other:otherActionItems}),context:state.getContext(),domain:state.getDomain(),isDomainSelected:this.isDomainSelected,});},_saveMultipleRecords:function(recordId,node,changes){var fieldName=Object.keys(changes)[0];var value=Object.values(changes)[0];var recordIds=_.union([recordId],this.selectedRecords);var validRecordIds=recordIds.reduce((result,nextRecordId)=>{var record=this.model.get(nextRecordId);var modifiers=this.renderer._registerModifiers(node,record);if(!modifiers.readonly&&(!modifiers.required||value)){result.push(nextRecordId);}
return result;},[]);return new Promise((resolve,reject)=>{const saveRecords=()=>{this.model.saveRecords(this.handle,recordId,validRecordIds,fieldName).then(async()=>{this.updateButtons('readonly');const state=this.model.get(this.handle);this.selectedRecords=[];await this._updateRendererState(state,{keepWidths:true,selectedRecords:[],});this._updateSelectionBox();this.renderer.focusCell(recordId,node);resolve(!Object.keys(changes).length);}).guardedCatch(discardAndReject);};const discardAndReject=()=>{this.model.discardChanges(recordId);this._confirmSave(recordId).then(()=>{this.renderer.focusCell(recordId,node);reject();});};if(validRecordIds.length>0){if(recordIds.length===1){return saveRecords();}
const dialogOptions={confirm_callback:saveRecords,cancel_callback:discardAndReject,};const record=this.model.get(recordId);const dialogChanges={isDomainSelected:this.isDomainSelected,fieldLabel:node.attrs.string||record.fields[fieldName].string,fieldName:node.attrs.name,nbRecords:recordIds.length,nbValidRecords:validRecordIds.length,};new ListConfirmDialog(this,record,dialogChanges,dialogOptions).open({shouldFocusButtons:true});}else{Dialog.alert(this,_t("No valid record to save"),{confirm_callback:discardAndReject,});}});},_saveRecord:function(recordId){var record=this.model.get(recordId,{raw:true});if(record.isDirty()&&this.renderer.isInMultipleRecordEdition(recordId)){const prom=this.multipleRecordsSavingPromise||Promise.reject();this.multipleRecordsSavingPromise=null;return prom;}
return this._super.apply(this,arguments);},_setMode:function(mode,recordID){if((recordID||this.handle)!==this.handle){this.mode=mode;this.updateButtons(mode);return this.renderer.setRowMode(recordID,mode);}else{return this._super.apply(this,arguments);}},_shouldBounceOnClick(){const state=this.model.get(this.handle,{raw:true});return!state.count||state.isSample;},_toggleArchiveState:async function(archive){let resIds;let displayNotif=false;const state=this.model.get(this.handle,{raw:true});if(this.isDomainSelected){resIds=await this._domainToResIds(state.getDomain(),session.active_ids_limit);displayNotif=(resIds.length===session.active_ids_limit);}else{resIds=this.model.localIdsToResIds(this.selectedRecords);}
await this._archive(resIds,archive);if(displayNotif){const msg=_.str.sprintf(_t("Of the %d records selected, only the first %d have been archived/unarchived."),state.count,resIds.length);this.do_notify(_t('Warning'),msg);}},_toggleCreateButton:function(){if(this.hasButtons){var state=this.model.get(this.handle);var createHidden=this.renderer.isEditable()&&state.groupedBy.length&&state.data.length;this.$buttons.find('.o_list_button_add').toggleClass('o_hidden',!!createHidden);}},_update:async function(){await this._super(...arguments);this._toggleCreateButton();this.updateButtons('readonly');},_updateSelectionBox(){if(this.$selectionBox){this.$selectionBox.remove();this.$selectionBox=null;}
if(this.selectedRecords.length){const state=this.model.get(this.handle,{raw:true});this.$selectionBox=$(qweb.render('ListView.selection',{isDomainSelected:this.isDomainSelected,isPageSelected:this.isPageSelected,nbSelected:this.selectedRecords.length,nbTotal:state.count,}));this.$selectionBox.appendTo(this.$buttons);}
this._renderHeaderButtons();},_onActivateNextWidget:function(ev){ev.stopPropagation();this.renderer.editFirstRecord(ev);},_onAddRecord:function(ev){ev.stopPropagation();var dataPointId=ev.data.groupId||this.handle;if(this.activeActions.create){this._addRecord(dataPointId);}else if(ev.data.onFail){ev.data.onFail();}},_onButtonClicked:function(ev){ev.stopPropagation();this._callButtonAction(ev.data.attrs,ev.data.record);},_onCreateRecord:function(ev){if(ev){ev.stopPropagation();}
var state=this.model.get(this.handle,{raw:true});if(this.editable&&!state.groupedBy.length){this._addRecord(this.handle);}else{this.trigger_up('switch_view',{view_type:'form',res_id:undefined});}},_onDeleteSelectedRecords:async function(){if(this.isDomainSelected){this._deleteRecordsInCurrentDomain();}else{this._deleteRecords(this.selectedRecords);}},_onDiscard:function(ev){ev.stopPropagation();this._discardChanges();},_onDiscardMousedown:function(ev){var self=this;this.fieldChangedPrevented=true;window.addEventListener('mouseup',function(mouseupEvent){var preventedEvent=self.fieldChangedPrevented;self.fieldChangedPrevented=false;if(ev.target!==mouseupEvent.target&&preventedEvent.constructor.name==='OdooEvent'){self._onFieldChanged(preventedEvent);}},{capture:true,once:true});},_onEditLine:function(ev){var self=this;ev.stopPropagation();this.trigger_up('mutexify',{action:function(){self._setMode('edit',ev.data.recordId).then(ev.data.onSuccess);},});},_onExportData:function(){this._getExportDialogWidget().open();},_onDirectExportData(){return this._rpc({model:'ir.exports',method:'search_read',args:[[],['id']],limit:1,}).then(()=>this._getExportDialogWidget().export())},_onEditGroupClicked:function(ev){ev.stopPropagation();this.do_action({context:{create:false},type:'ir.actions.act_window',views:[[false,'form']],res_model:ev.data.record.model,res_id:ev.data.record.res_id,flags:{mode:'edit'},});},_onFieldChanged:function(ev){ev.stopPropagation();const recordId=ev.data.dataPointID;if(this.fieldChangedPrevented){this.fieldChangedPrevented=ev;}else if(this.renderer.isInMultipleRecordEdition(recordId)){const saveMulti=()=>{const target=ev.data.__originalComponent||ev.target;this.multipleRecordsSavingPromise=this._saveMultipleRecords(ev.data.dataPointID,target.__node,ev.data.changes);};ev.data.onSuccess=saveMulti;ev.data.onFailure=saveMulti;ev.data.notifyChange=false;}
this._super.apply(this,arguments);},async _onHeaderButtonClicked(node){this._disableButtons();const state=this.model.get(this.handle);try{let resIds;if(this.isDomainSelected){const limit=session.active_ids_limit;resIds=await this._domainToResIds(state.getDomain(),limit);}else{resIds=this.getSelectedIds();}
const actionData=Object.assign({},node.attrs,{context:state.getContext({additionalContext:node.attrs.context}),});Object.assign(actionData.context,{active_domain:state.getDomain(),active_id:resIds[0],active_ids:resIds,active_model:state.model,});const recordData={context:state.getContext(),model:state.model,resIDs:resIds,};await this._executeButtonAction(actionData,recordData);}finally{this._enableButtons();}},_onSaveLine:function(ev){this.saveRecord(ev.data.recordID).then(ev.data.onSuccess).guardedCatch(ev.data.onFailure);},_onSelectDomain:function(ev){ev.preventDefault();this.isDomainSelected=true;this._updateSelectionBox();this._updateControlPanel();},_onSelectionChanged:function(ev){this.selectedRecords=ev.data.selection;this.isPageSelected=ev.data.allChecked;this.isDomainSelected=false;this.$('.o_list_export_xlsx').toggle(!this.selectedRecords.length);this._updateSelectionBox();this._updateControlPanel();},_onSetDirty:function(ev){var recordId=ev.data.dataPointID;if(this.renderer.isInMultipleRecordEdition(recordId)){ev.stopPropagation();Dialog.alert(this,_t("No valid record to save"),{confirm_callback:async()=>{this.model.discardChanges(recordId);await this._confirmSave(recordId);this.renderer.focusCell(recordId,ev.target.__node);},});}else{this._super.apply(this,arguments);}},_onToggleColumnOrder:function(ev){ev.stopPropagation();var state=this.model.get(this.handle);if(!state.groupedBy){this._updatePaging(state,{currentMinimum:1});}
var self=this;this.model.setSort(state.id,ev.data.name).then(function(){self.update({});});},_onToggleGroup:function(ev){ev.stopPropagation();var self=this;this.model.toggleGroup(ev.data.group.id).then(function(){self.update({},{keepSelection:true,reload:false}).then(function(){if(ev.data.onSuccess){ev.data.onSuccess();}});});},});return ListController;});;

/* /web/static/src/js/views/list/list_confirm_dialog.js defined in bundle 'web.assets_backend' */
odoo.define('web.ListConfirmDialog',function(require){"use strict";const core=require('web.core');const Dialog=require('web.Dialog');const FieldWrapper=require('web.FieldWrapper');const{WidgetAdapterMixin}=require('web.OwlCompatibility');const utils=require('web.utils');const _t=core._t;const qweb=core.qweb;const ListConfirmDialog=Dialog.extend(WidgetAdapterMixin,{init:function(parent,record,changes,options){options=Object.assign({},options,{$content:$(qweb.render('ListView.confirmModal',{changes})),buttons:options.buttons||[{text:_t("Ok"),classes:'btn-primary',close:true,click:options.confirm_callback,},{text:_t("Cancel"),close:true,click:options.cancel_callback,}],onForceClose:options.cancel_callback,size:options.size||'medium',title:options.title||_t("Confirmation"),});this._super(parent,options);const Widget=record.fieldsInfo.list[changes.fieldName].Widget;const widgetOptions={mode:'readonly',viewType:'list',noOpen:true,};this.isLegacyWidget=!utils.isComponent(Widget);if(this.isLegacyWidget){this.fieldWidget=new Widget(this,changes.fieldName,record,widgetOptions);}else{this.fieldWidget=new FieldWrapper(this,Widget,{fieldName:changes.fieldName,record,options:widgetOptions,});}},willStart:function(){let widgetProm;if(this.isLegacyWidget){widgetProm=this.fieldWidget._widgetRenderAndInsert(function(){});}else{widgetProm=this.fieldWidget.mount(document.createDocumentFragment());}
return Promise.all([widgetProm,this._super.apply(this,arguments)]);},start:function(){this.$content.find('.o_changes_widget').replaceWith(this.fieldWidget.$el);this.fieldWidget.el.style.pointerEvents='none';return this._super.apply(this,arguments);},destroy:function(){WidgetAdapterMixin.destroy.call(this);this._super();},});return ListConfirmDialog;});;

/* /web/static/src/js/views/pivot/pivot_model.js defined in bundle 'web.assets_backend' */
odoo.define('web.PivotModel',function(require){"use strict";var AbstractModel=require('web.AbstractModel');var concurrency=require('web.concurrency');var core=require('web.core');var dataComparisonUtils=require('web.dataComparisonUtils');const Domain=require('web.Domain');var mathUtils=require('web.mathUtils');var session=require('web.session');var _t=core._t;var cartesian=mathUtils.cartesian;var computeVariation=dataComparisonUtils.computeVariation;var sections=mathUtils.sections;var PivotModel=AbstractModel.extend({init:function(){this._super.apply(this,arguments);this.numbering={};this.data=null;this._loadDataDropPrevious=new concurrency.DropPrevious();},addGroupBy:function(groupBy,type){if(type==='row'){this.data.expandedRowGroupBys.push(groupBy);}else{this.data.expandedColGroupBys.push(groupBy);}},closeGroup:function(groupId,type){var groupBys;var expandedGroupBys;let keyPart;var group;var tree;if(type==='row'){groupBys=this.data.rowGroupBys;expandedGroupBys=this.data.expandedRowGroupBys;tree=this.rowGroupTree;group=this._findGroup(this.rowGroupTree,groupId[0]);keyPart=0;}else{groupBys=this.data.colGroupBys;expandedGroupBys=this.data.expandedColGroupBys;tree=this.colGroupTree;group=this._findGroup(this.colGroupTree,groupId[1]);keyPart=1;}
const groupIdPart=groupId[keyPart];const range=groupIdPart.map((_,index)=>index);function keep(key){const idPart=JSON.parse(key)[keyPart];return range.some(index=>groupIdPart[index]!==idPart[index])||idPart.length===groupIdPart.length;}
function omitKeys(object){const newObject={};for(const key in object){if(keep(key)){newObject[key]=object[key];}}
return newObject;}
this.measurements=omitKeys(this.measurements);this.counts=omitKeys(this.counts);this.groupDomains=omitKeys(this.groupDomains);group.directSubTrees.clear();delete group.sortedKeys;var newGroupBysLength=this._getTreeHeight(tree)-1;if(newGroupBysLength<=groupBys.length){expandedGroupBys.splice(0);groupBys.splice(newGroupBysLength);}else{expandedGroupBys.splice(newGroupBysLength-groupBys.length);}},expandAll:function(){return this._loadData();},expandGroup:async function(group,groupBy){var leftDivisors;var rightDivisors;if(group.type==='row'){leftDivisors=[[groupBy]];rightDivisors=sections(this._getGroupBys().colGroupBys);}else{leftDivisors=sections(this._getGroupBys().rowGroupBys);rightDivisors=[[groupBy]];}
var divisors=cartesian(leftDivisors,rightDivisors);delete group.type;return this._subdivideGroup(group,divisors);},exportData:function(){var measureCount=this.data.measures.length;var originCount=this.data.origins.length;var table=this._getTable();var headers=table.headers;var colGroupHeaderRows;var measureRow=[];var originRow=[];function processHeader(header){var inTotalColumn=header.groupId[1].length===0;return{title:header.title,width:header.width,height:header.height,is_bold:!!header.measure&&inTotalColumn};}
if(originCount>1){colGroupHeaderRows=headers.slice(0,headers.length-2);measureRow=headers[headers.length-2].map(processHeader);originRow=headers[headers.length-1].map(processHeader);}else{colGroupHeaderRows=headers.slice(0,headers.length-1);measureRow=headers[headers.length-1].map(processHeader);}
colGroupHeaderRows[0].splice(0,1);colGroupHeaderRows=colGroupHeaderRows.map(function(headerRow){return headerRow.map(processHeader);});var tableRows=table.rows.map(function(row){return{title:row.title,indent:row.indent,values:row.subGroupMeasurements.map(function(measurement){var value=measurement.value;if(value===undefined){value="";}else if(measurement.originIndexes.length>1){value=value*100;}
return{is_bold:measurement.isBold,value:value,};}),};});return{col_group_headers:colGroupHeaderRows,measure_headers:measureRow,origin_headers:originRow,rows:tableRows,measure_count:measureCount,origin_count:originCount,};},flip:function(){var temp=this.rowGroupTree;this.rowGroupTree=this.colGroupTree;this.colGroupTree=temp;temp=this.data.rowGroupBys;this.data.groupedBy=this.data.colGroupBys;this.data.rowGroupBys=this.data.colGroupBys;this.data.colGroupBys=temp;temp=this.data.expandedColGroupBys;this.data.expandedColGroupBys=this.data.expandedRowGroupBys;this.data.expandedRowGroupBys=temp;function twistKey(key){return JSON.stringify(JSON.parse(key).reverse());}
function twist(object){var newObject={};Object.keys(object).forEach(function(key){var value=object[key];newObject[twistKey(key)]=value;});return newObject;}
this.measurements=twist(this.measurements);this.counts=twist(this.counts);this.groupDomains=twist(this.groupDomains);},__get:function(options){options=options||{};var raw=options.raw||false;var groupBys=this._getGroupBys();var state={colGroupBys:groupBys.colGroupBys,context:this.data.context,domain:this.data.domain,fields:this.fields,hasData:this._hasData(),isSample:this.isSampleModel,measures:this.data.measures,origins:this.data.origins,rowGroupBys:groupBys.rowGroupBys,selectionGroupBys:this._getSelectionGroupBy(groupBys),modelName:this.modelName};if(!raw&&state.hasData){state.table=this._getTable();state.tree=this.rowGroupTree;}
return state;},getTableWidth:function(){var leafCounts=this._getLeafCounts(this.colGroupTree);return leafCounts[JSON.stringify(this.colGroupTree.root.values)]+2;},__load:function(params){this.initialDomain=params.domain;this.initialRowGroupBys=params.context.pivot_row_groupby||params.rowGroupBys;this.defaultGroupedBy=params.groupedBy;this.fields=params.fields;this.modelName=params.modelName;this.groupableFields=params.groupableFields;const measures=this._processMeasures(params.context.pivot_measures)||params.measures.map(m=>m);this.data={expandedRowGroupBys:[],expandedColGroupBys:[],domain:this.initialDomain,context:_.extend({},session.user_context,params.context),groupedBy:params.context.pivot_row_groupby||params.groupedBy,colGroupBys:params.context.pivot_column_groupby||params.colGroupBys,measures,timeRanges:params.timeRanges,};this._computeDerivedParams();this.data.rowGroupBys=!_.isEmpty(this.data.groupedBy)?this.data.groupedBy:this.initialRowGroupBys;var defaultOrder=params.default_order&&params.default_order.split(' ');if(defaultOrder){this.data.sortedColumn={groupId:[[],[]],measure:defaultOrder[0],order:defaultOrder[1]?defaultOrder[1]:'asc',};}
return this._loadData();},__reload:function(handle,params){var self=this;var oldColGroupBys=this.data.colGroupBys;var oldRowGroupBys=this.data.rowGroupBys;if('context'in params){this.data.context=params.context;this.data.colGroupBys=params.context.pivot_column_groupby||this.data.colGroupBys;this.data.groupedBy=params.context.pivot_row_groupby||this.data.groupedBy;this.data.measures=this._processMeasures(params.context.pivot_measures)||this.data.measures;this.defaultGroupedBy=this.data.groupedBy.length?this.data.groupedBy:this.defaultGroupedBy;}
if('domain'in params){this.data.domain=params.domain;this.initialDomain=params.domain;}else{this.data.domain=this.initialDomain;}
if('groupBy'in params){this.data.groupedBy=params.groupBy.length?params.groupBy:this.defaultGroupedBy;}
if('timeRanges'in params){this.data.timeRanges=params.timeRanges;}
this._computeDerivedParams();this.data.rowGroupBys=!_.isEmpty(this.data.groupedBy)?this.data.groupedBy:this.initialRowGroupBys;if(!_.isEqual(oldRowGroupBys,self.data.rowGroupBys)){this.data.expandedRowGroupBys=[];}
if(!_.isEqual(oldColGroupBys,self.data.colGroupBys)){this.data.expandedColGroupBys=[];}
if('measure'in params){return this._toggleMeasure(params.measure);}
if(!this._hasData()){return this._loadData();}
var oldRowGroupTree=this.rowGroupTree;var oldColGroupTree=this.colGroupTree;return this._loadData().then(function(){if(_.isEqual(oldRowGroupBys,self.data.rowGroupBys)){self._pruneTree(self.rowGroupTree,oldRowGroupTree);}
if(_.isEqual(oldColGroupBys,self.data.colGroupBys)){self._pruneTree(self.colGroupTree,oldColGroupTree);}});},sortRows:function(sortedColumn){var self=this;var colGroupValues=sortedColumn.groupId[1];sortedColumn.originIndexes=sortedColumn.originIndexes||[0];this.data.sortedColumn=sortedColumn;var sortFunction=function(tree){return function(subTreeKey){var subTree=tree.directSubTrees.get(subTreeKey);var groupIntersectionId=[subTree.root.values,colGroupValues];var value=self._getCellValue(groupIntersectionId,sortedColumn.measure,sortedColumn.originIndexes)||0;return sortedColumn.order==='asc'?value:-value;};};this._sortTree(sortFunction,this.rowGroupTree);},_addGroup:function(groupTree,labels,values){var tree=groupTree;values.slice(0,values.length-1).forEach(function(value){tree=tree.directSubTrees.get(value);});tree.directSubTrees.set(values[values.length-1],{root:{labels:labels,values:values,},directSubTrees:new Map(),});},_computeRowGroupBys:function(){return!_.isEmpty(this.data.groupedBy)?this.data.groupedBy:this.initialRowGroupBys;},_findGroup:function(groupTree,values){var tree=groupTree;values.slice(0,values.length).forEach(function(value){tree=tree.directSubTrees.get(value);});return tree;},_getCellValue:function(groupId,measure,originIndexes){var self=this;var key=JSON.stringify(groupId);if(!self.measurements[key]){return;}
var values=originIndexes.map(function(originIndex){return self.measurements[key][originIndex][measure];});if(originIndexes.length>1){return computeVariation(values[1],values[0]);}else{return values[0];}},_getGroupBys:function(){return{colGroupBys:this.data.colGroupBys.concat(this.data.expandedColGroupBys),rowGroupBys:this.data.rowGroupBys.concat(this.data.expandedRowGroupBys),};},_getGroupDomain:function(group){var key=JSON.stringify([group.rowValues,group.colValues]);return this.groupDomains[key][group.originIndex];},_getGroupLabels:function(group,groupBys){var self=this;return groupBys.map(function(groupBy){return self._sanitizeLabel(group[groupBy],groupBy);});},_getGroupSubdivision:function(group,rowGroupBy,colGroupBy){var groupDomain=this._getGroupDomain(group);var measureSpecs=this._getMeasureSpecs();var groupBy=rowGroupBy.concat(colGroupBy);return this._rpc({model:this.modelName,method:'read_group',context:this.data.context,domain:groupDomain,fields:measureSpecs,groupBy:groupBy,lazy:false,}).then(function(subGroups){return{group:group,subGroups:subGroups,rowGroupBy:rowGroupBy,colGroupBy:colGroupBy};});},_getGroupValues:function(group,groupBys){var self=this;return groupBys.map(function(groupBy){return self._sanitizeValue(group[groupBy]);});},_getLeafCounts:function(tree){var self=this;var leafCounts={};var leafCount;if(!tree.directSubTrees.size){leafCount=1;}else{leafCount=[...tree.directSubTrees.values()].reduce(function(acc,subTree){var subLeafCounts=self._getLeafCounts(subTree);_.extend(leafCounts,subLeafCounts);return acc+leafCounts[JSON.stringify(subTree.root.values)];},0);}
leafCounts[JSON.stringify(tree.root.values)]=leafCount;return leafCounts;},_getMeasurements:function(group){var self=this;return this.data.measures.reduce(function(measurements,fieldName){var measurement=group[fieldName];if(measurement instanceof Array){measurement=1;}
if(self.fields[fieldName].type==='boolean'&&measurement instanceof Boolean){measurement=measurement?1:0;}
if(self.data.origins.length>1&&!measurement){measurement=0;}
measurements[fieldName]=measurement;return measurements;},{});},_getMeasuresRow:function(columns){var self=this;var sortedColumn=this.data.sortedColumn||{};var measureRow=[];columns.forEach(function(column){self.data.measures.forEach(function(measure){var measureCell={groupId:column.groupId,height:1,measure:measure,title:self.fields[measure].string,width:2*self.data.origins.length-1,};if(sortedColumn.measure===measure&&_.isEqual(sortedColumn.groupId,column.groupId)){measureCell.order=sortedColumn.order;}
measureRow.push(measureCell);});});return measureRow;},_getMeasureSpecs:function(){var self=this;return this.data.measures.reduce(function(acc,measure){if(measure==='__count'){acc.push(measure);return acc;}
var type=self.fields[measure].type;var groupOperator=self.fields[measure].group_operator;if(type==='many2one'){groupOperator='count_distinct';}
if(groupOperator===undefined){throw new Error("No aggregate function has been provided for the measure '"+measure+"'");}
acc.push(measure+':'+groupOperator);return acc;},[]);},_getNumberedLabel:function(label,fieldName){var id=label[0];var name=label[1];this.numbering[fieldName]=this.numbering[fieldName]||{};this.numbering[fieldName][name]=this.numbering[fieldName][name]||{};var numbers=this.numbering[fieldName][name];numbers[id]=numbers[id]||_.size(numbers)+1;return name+(numbers[id]>1?"  ("+numbers[id]+")":"");},_getOriginsRow:function(columns){var self=this;var sortedColumn=this.data.sortedColumn||{};var originRow=[];columns.forEach(function(column){var groupId=column.groupId;var measure=column.measure;var isSorted=sortedColumn.measure===measure&&_.isEqual(sortedColumn.groupId,groupId);var isSortedByOrigin=isSorted&&!sortedColumn.originIndexes[1];var isSortedByVariation=isSorted&&sortedColumn.originIndexes[1];self.data.origins.forEach(function(origin,originIndex){var originCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex],title:origin,width:1,};if(isSortedByOrigin&&sortedColumn.originIndexes[0]===originIndex){originCell.order=sortedColumn.order;}
originRow.push(originCell);if(originIndex>0){var variationCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex-1,originIndex],title:_t('Variation'),width:1,};if(isSortedByVariation&&sortedColumn.originIndexes[1]===originIndex){variationCell.order=sortedColumn.order;}
originRow.push(variationCell);}});});return originRow;},_getSelectionGroupBy:function(groupBys){let groupedFieldNames=groupBys.rowGroupBys.concat(groupBys.colGroupBys).map(function(g){return g.split(':')[0];});var fields=Object.keys(this.groupableFields).map((fieldName,index)=>{return{name:fieldName,field:this.groupableFields[fieldName],active:groupedFieldNames.includes(fieldName)}}).sort((left,right)=>left.field.string<right.field.string?-1:1);return fields;},_getTable:function(){var headers=this._getTableHeaders();return{headers:headers,rows:this._getTableRows(this.rowGroupTree,headers[headers.length-1]),};},_getTableHeaders:function(){var colGroupBys=this._getGroupBys().colGroupBys;var height=colGroupBys.length+1;var measureCount=this.data.measures.length;var originCount=this.data.origins.length;var leafCounts=this._getLeafCounts(this.colGroupTree);var headers=[];var measureColumns=[];var colGroupRows=(new Array(height)).fill(0).map(function(){return[];});colGroupRows[0].push({height:height+1+(originCount>1?1:0),title:"",width:1,});function generateTreeHeaders(tree,fields){var group=tree.root;var rowIndex=group.values.length;var row=colGroupRows[rowIndex];var groupId=[[],group.values];var isLeaf=!tree.directSubTrees.size;var leafCount=leafCounts[JSON.stringify(tree.root.values)];var cell={groupId:groupId,height:isLeaf?(colGroupBys.length+1-rowIndex):1,isLeaf:isLeaf,label:rowIndex===0?undefined:fields[colGroupBys[rowIndex-1].split(':')[0]].string,title:group.labels[group.labels.length-1]||_t('Total'),width:leafCount*measureCount*(2*originCount-1),};row.push(cell);if(isLeaf){measureColumns.push(cell);}
[...tree.directSubTrees.values()].forEach(function(subTree){generateTreeHeaders(subTree,fields);});}
generateTreeHeaders(this.colGroupTree,this.fields);if(leafCounts[JSON.stringify(this.colGroupTree.root.values)]>1){var groupId=[[],[]];var totalTopRightCell={groupId:groupId,height:height,title:"",width:measureCount*(2*originCount-1),};colGroupRows[0].push(totalTopRightCell);measureColumns.push(totalTopRightCell);}
headers=headers.concat(colGroupRows);var measuresRow=this._getMeasuresRow(measureColumns);headers.push(measuresRow);if(originCount>1){headers.push(this._getOriginsRow(measuresRow));}
return headers;},_getTableRows:function(tree,columns){var self=this;var rows=[];var group=tree.root;var rowGroupId=[group.values,[]];var title=group.labels[group.labels.length-1]||_t('Total');var indent=group.labels.length;var isLeaf=!tree.directSubTrees.size;var rowGroupBys=this._getGroupBys().rowGroupBys;var subGroupMeasurements=columns.map(function(column){var colGroupId=column.groupId;var groupIntersectionId=[rowGroupId[0],colGroupId[1]];var measure=column.measure;var originIndexes=column.originIndexes||[0];var value=self._getCellValue(groupIntersectionId,measure,originIndexes);var measurement={groupId:groupIntersectionId,originIndexes:originIndexes,measure:measure,value:value,isBold:!groupIntersectionId[0].length||!groupIntersectionId[1].length,};return measurement;});rows.push({title:title,label:indent===0?undefined:this.fields[rowGroupBys[indent-1].split(':')[0]].string,groupId:rowGroupId,indent:indent,isLeaf:isLeaf,subGroupMeasurements:subGroupMeasurements});var subTreeKeys=tree.sortedKeys||[...tree.directSubTrees.keys()];subTreeKeys.forEach(function(subTreeKey){var subTree=tree.directSubTrees.get(subTreeKey);rows=rows.concat(self._getTableRows(subTree,columns));});return rows;},_getTreeHeight:function(tree){var subTreeHeights=[...tree.directSubTrees.values()].map(this._getTreeHeight.bind(this));return Math.max(0,Math.max.apply(null,subTreeHeights))+1;},_hasData:function(){return(this.counts[JSON.stringify([[],[]])]||[]).some(function(count){return count>0;});},_isEmpty(){return!this._hasData();},_loadData:function(){var self=this;this.rowGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};this.colGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};this.measurements={};this.counts={};var key=JSON.stringify([[],[]]);this.groupDomains={};this.groupDomains[key]=this.data.domains.slice(0);var group={rowValues:[],colValues:[]};var groupBys=this._getGroupBys();var leftDivisors=sections(groupBys.rowGroupBys);var rightDivisors=sections(groupBys.colGroupBys);var divisors=cartesian(leftDivisors,rightDivisors);return this._subdivideGroup(group,divisors.slice(0,1)).then(function(){return self._subdivideGroup(group,divisors.slice(1));});},_prepareData:function(group,groupSubdivisions){var self=this;var groupRowValues=group.rowValues;var groupRowLabels=[];var rowSubTree=this.rowGroupTree;var root;if(groupRowValues.length){rowSubTree=this._findGroup(this.rowGroupTree,groupRowValues);root=rowSubTree.root;groupRowLabels=root.labels;}
var groupColValues=group.colValues;var groupColLabels=[];if(groupColValues.length){root=this._findGroup(this.colGroupTree,groupColValues).root;groupColLabels=root.labels;}
groupSubdivisions.forEach(function(groupSubdivision){groupSubdivision.subGroups.forEach(function(subGroup){var rowValues=groupRowValues.concat(self._getGroupValues(subGroup,groupSubdivision.rowGroupBy));var rowLabels=groupRowLabels.concat(self._getGroupLabels(subGroup,groupSubdivision.rowGroupBy));var colValues=groupColValues.concat(self._getGroupValues(subGroup,groupSubdivision.colGroupBy));var colLabels=groupColLabels.concat(self._getGroupLabels(subGroup,groupSubdivision.colGroupBy));if(!colValues.length&&rowValues.length){self._addGroup(self.rowGroupTree,rowLabels,rowValues);}
if(colValues.length&&!rowValues.length){self._addGroup(self.colGroupTree,colLabels,colValues);}
var key=JSON.stringify([rowValues,colValues]);var originIndex=groupSubdivision.group.originIndex;if(!(key in self.measurements)){self.measurements[key]=self.data.origins.map(function(){return self._getMeasurements({});});}
self.measurements[key][originIndex]=self._getMeasurements(subGroup);if(!(key in self.counts)){self.counts[key]=self.data.origins.map(function(){return 0;});}
self.counts[key][originIndex]=subGroup.__count;if(!(key in self.groupDomains)){self.groupDomains[key]=self.data.origins.map(function(){return Domain.FALSE_DOMAIN;});}
if(subGroup.__domain){self.groupDomains[key][originIndex]=subGroup.__domain;}});});if(this.data.sortedColumn){this.sortRows(this.data.sortedColumn,rowSubTree);}},_processMeasures:function(measures){if(measures){return _.map(measures,function(measure){return measure==='__count__'?'__count':measure;});}},_computeDerivedParams:function(){const{range,rangeDescription,comparisonRange,comparisonRangeDescription}=this.data.timeRanges;if(range){this.data.domains=[this.data.domain.concat(comparisonRange),this.data.domain.concat(range)];this.data.origins=[comparisonRangeDescription,rangeDescription];}else{this.data.domains=[this.data.domain];this.data.origins=[""];}},_pruneTree:function(tree,oldTree){if(!oldTree.directSubTrees.size){tree.directSubTrees.clear();delete tree.sortedKeys;return;}
var self=this;[...tree.directSubTrees.keys()].forEach(function(subTreeKey){var subTree=tree.directSubTrees.get(subTreeKey);if(!oldTree.directSubTrees.has(subTreeKey)){subTree.directSubTrees.clear();delete subTreeKey.sortedKeys;}else{var oldSubTree=oldTree.directSubTrees.get(subTreeKey);self._pruneTree(subTree,oldSubTree);}});},_toggleMeasure:function(fieldName){var index=this.data.measures.indexOf(fieldName);if(index!==-1){this.data.measures.splice(index,1);return Promise.resolve();}else{this.data.measures.push(fieldName);}
return this._loadData();},_sanitizeLabel:function(value,groupBy){var fieldName=groupBy.split(':')[0];if(value===false){return _t("Undefined");}
if(value instanceof Array){return this._getNumberedLabel(value,fieldName);}
if(fieldName&&this.fields[fieldName]&&(this.fields[fieldName].type==='selection')){var selected=_.where(this.fields[fieldName].selection,{0:value})[0];return selected?selected[1]:value;}
return value;},_sanitizeValue:function(value){if(value instanceof Array){return value[0];}
return value;},_subdivideGroup:function(group,divisors){var self=this;var key=JSON.stringify([group.rowValues,group.colValues]);var proms=this.data.origins.reduce(function(acc,origin,originIndex){if(!self.counts[key]||self.counts[key][originIndex]>0){var subGroup={rowValues:group.rowValues,colValues:group.colValues,originIndex:originIndex};divisors.forEach(function(divisor){acc.push(self._getGroupSubdivision(subGroup,divisor[0],divisor[1]));});}
return acc;},[]);return this._loadDataDropPrevious.add(Promise.all(proms)).then(function(groupSubdivisions){if(groupSubdivisions.length){self._prepareData(group,groupSubdivisions);}});},_sortTree:function(sortFunction,tree){var self=this;tree.sortedKeys=_.sortBy([...tree.directSubTrees.keys()],sortFunction(tree));[...tree.directSubTrees.values()].forEach(function(subTree){self._sortTree(sortFunction,subTree);});},});return PivotModel;});;

/* /web/static/src/js/views/pivot/pivot_controller.js defined in bundle 'web.assets_backend' */
odoo.define('web.PivotController',function(require){"use strict";const AbstractController=require('web.AbstractController');const core=require('web.core');const framework=require('web.framework');const session=require('web.session');const _t=core._t;const QWeb=core.qweb;const PivotController=AbstractController.extend({custom_events:Object.assign({},AbstractController.prototype.custom_events,{closed_header_click:'_onClosedHeaderClicked',open_view:'_onOpenView',opened_header_click:'_onOpenedHeaderClicked',sort_rows:'_onSortRows',groupby_menu_selection:'_onGroupByMenuSelection',}),init:function(parent,model,renderer,params){this._super(...arguments);this.disableLinking=params.disableLinking;this.measures=params.measures;this.title=params.title;this.views=params.views;this.groupSelected=null;},destroy:function(){if(this.$buttons){this.$buttons.find('button').off();}
return this._super(...arguments);},getOwnedQueryParams:function(){const state=this.model.get({raw:true});return{context:{pivot_measures:state.measures,pivot_column_groupby:state.colGroupBys,pivot_row_groupby:state.rowGroupBys,}};},renderButtons:function($node){const context=this._getRenderButtonContext();this.$buttons=$(QWeb.render('PivotView.buttons',context));this.$buttons.click(this._onButtonClick.bind(this));this.$buttons.find('button').tooltip();if($node){this.$buttons.appendTo($node);}},updateButtons:function(){if(!this.$buttons){return;}
const state=this.model.get({raw:true});Object.entries(this.measures).forEach(elt=>{const name=elt[0];const isSelected=state.measures.includes(name);this.$buttons.find('.dropdown-item[data-field="'+name+'"]').toggleClass('selected',isSelected);});const noDataDisplayed=!state.hasData||!state.measures.length;this.$buttons.find('.o_pivot_flip_button').prop('disabled',noDataDisplayed);this.$buttons.find('.o_pivot_expand_button').prop('disabled',noDataDisplayed);this.$buttons.find('.o_pivot_download').prop('disabled',noDataDisplayed);},_downloadTable:function(){if(this.model.getTableWidth()>16384){this.call('crash_manager','show_message',_t("For Excel compatibility, data cannot be exported if there are more than 16384 columns.\n\nTip: try to flip axis, filter further or reduce the number of measures."));framework.unblockUI();return;}
const table=this.model.exportData();table.title=this.title;session.get_file({url:'/web/pivot/export_xlsx',data:{data:JSON.stringify(table)},complete:framework.unblockUI,error:(error)=>this.call('crash_manager','rpc_error',error),});},_onButtonClick:async function(ev){const $target=$(ev.target);if($target.hasClass('o_pivot_flip_button')){this.model.flip();this.update({},{reload:false});}
if($target.hasClass('o_pivot_expand_button')){await this.model.expandAll();this.update({},{reload:false});}
if(ev.target.closest('.o_pivot_measures_list')){ev.preventDefault();ev.stopPropagation();const field=ev.target.dataset.field;if(field){this.update({measure:field});}}
if($target.hasClass('o_pivot_download')){this._downloadTable();}
await this._addIncludedButtons(ev);},_addIncludedButtons:async function(ev){},_getRenderButtonContext:function(){return{measures:Object.entries(this.measures).filter(x=>x[0]!=='__count').sort((a,b)=>a[1].string.toLowerCase()>b[1].string.toLowerCase()?1:-1),};},_onCloseGroup:function(ev){this.model.closeGroup(ev.data.groupId,ev.data.type);this.update({},{reload:false});},_onOpenedHeaderClicked:function(ev){this.model.closeGroup(ev.data.cell.groupId,ev.data.type);this.update({},{reload:false});},_onClosedHeaderClicked:async function(ev){const cell=ev.data.cell;const groupId=cell.groupId;const type=ev.data.type;const group={rowValues:groupId[0],colValues:groupId[1],type:type};const state=this.model.get({raw:true});const groupValues=type==='row'?groupId[0]:groupId[1];const groupBys=type==='row'?state.rowGroupBys:state.colGroupBys;this.selectedGroup=group;if(groupValues.length<groupBys.length){const groupBy=groupBys[groupValues.length];await this.model.expandGroup(this.selectedGroup,groupBy);this.update({},{reload:false});}},_onGroupByMenuSelection:async function(ev){ev.stopPropagation();let groupBy=ev.data.field.name;const interval=ev.data.interval;if(interval){groupBy=groupBy+':'+interval;}
this.model.addGroupBy(groupBy,this.selectedGroup.type);await this.model.expandGroup(this.selectedGroup,groupBy);this.update({},{reload:false});},_onOpenView:function(ev){ev.stopPropagation();const cell=ev.data;if(cell.value===undefined||this.disableLinking){return;}
const context=Object.assign({},this.model.data.context);Object.keys(context).forEach(x=>{if(x==='group_by'||x.startsWith('search_default_')){delete context[x];}});const group={rowValues:cell.groupId[0],colValues:cell.groupId[1],originIndex:cell.originIndexes[0]};const domain=this.model._getGroupDomain(group);this.do_action({type:'ir.actions.act_window',name:this.title,res_model:this.modelName,views:this.views,view_mode:'list',target:'current',context:context,domain:domain,});},_onSortRows:function(ev){this.model.sortRows({groupId:ev.data.groupId,measure:ev.data.measure,order:(ev.data.order||'desc')==='asc'?'desc':'asc',originIndexes:ev.data.originIndexes,});this.update({},{reload:false});},});return PivotController;});;

/* /web/static/src/js/views/pivot/pivot_renderer.js defined in bundle 'web.assets_backend' */
odoo.define('web.PivotRenderer',function(require){"use strict";const OwlAbstractRenderer=require('web.AbstractRendererOwl');const field_utils=require('web.field_utils');const patchMixin=require('web.patchMixin');const{useExternalListener,useState,onMounted,onPatched}=owl.hooks;class PivotRenderer extends OwlAbstractRenderer{constructor(){super(...arguments);this.sampleDataTargets=['table'];this.state=useState({activeNodeHeader:{groupId:false,isXAxis:false,click:false},});onMounted(()=>this._updateTooltip());onPatched(()=>this._updateTooltip());if(!this.env.device.isMobile){useExternalListener(window,'click',this._resetState);}}
_getFormattedValue(cell){const type=this.props.widgets[cell.measure]||(this.props.fields[cell.measure].type==='many2one'?'integer':this.props.fields[cell.measure].type);const formatter=field_utils.format[type];return formatter(cell.value,this.props.fields[cell.measure]);}
_getFormattedVariation(cell){const value=cell.value;return isNaN(value)?'-':field_utils.format.percentage(value,this.props.fields[cell.measure]);}
_getPadding(cell){return 5+cell.indent*30;}
_isClicked(groupId,isXAxis){return _.isEqual(groupId,this.state.activeNodeHeader.groupId)&&this.state.activeNodeHeader.isXAxis===isXAxis;}
_resetState(){if(this.isHeaderClicked){this.isHeaderClicked=false;return;}
this.state.activeNodeHeader={groupId:false,isXAxis:false,click:false};}
_updateTooltip(){$(this.el).find('.o_pivot_header_cell_opened, .o_pivot_header_cell_closed').tooltip();}
_onClickMenuGroupBy(field,interval){this.trigger('groupby_menu_selection',{field,interval});}
_onHeaderClick(cell,type){const groupValues=cell.groupId[type==='col'?1:0];const groupByLength=type==='col'?this.props.colGroupBys.length:this.props.rowGroupBys.length;if(cell.isLeaf&&groupValues.length>=groupByLength){this.isHeaderClicked=true;this.state.activeNodeHeader={groupId:cell.groupId,isXAxis:type==='col',click:'leftClick'};}
this.trigger(cell.isLeaf?'closed_header_click':'opened_header_click',{cell,type});}
_onMouseEnter(ev){var index=[...ev.currentTarget.parentNode.children].indexOf(ev.currentTarget);if(ev.currentTarget.tagName==='TH'){index+=1;}
this.el.querySelectorAll('td:nth-child('+(index+1)+')').forEach(elt=>elt.classList.add('o_cell_hover'));}
_onMouseLeave(){this.el.querySelectorAll('.o_cell_hover').forEach(elt=>elt.classList.remove('o_cell_hover'));}}
PivotRenderer.template='web.PivotRenderer';return patchMixin(PivotRenderer);});;

/* /web/static/src/js/views/pivot/pivot_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.PivotView',function(require){"use strict";const AbstractView=require('web.AbstractView');const config=require('web.config');const core=require('web.core');const PivotModel=require('web.PivotModel');const PivotController=require('web.PivotController');const PivotRenderer=require('web.PivotRenderer');const RendererWrapper=require('web.RendererWrapper');const _t=core._t;const _lt=core._lt;const searchUtils=require('web.searchUtils');const GROUPABLE_TYPES=searchUtils.GROUPABLE_TYPES;const PivotView=AbstractView.extend({display_name:_lt('Pivot'),icon:'fa-table',config:Object.assign({},AbstractView.prototype.config,{Model:PivotModel,Controller:PivotController,Renderer:PivotRenderer,}),viewType:'pivot',searchMenuTypes:['filter','groupBy','comparison','favorite'],init:function(viewInfo,params){this._super.apply(this,arguments);const activeMeasures=[];const colGroupBys=[];const rowGroupBys=[];const measures={};const groupableFields={};const widgets={};const additionalMeasures=params.additionalMeasures||[];this.fields.__count={string:_t("Count"),type:"integer"};Object.keys(this.fields).forEach(name=>{const field=this.fields[name];if(name!=='id'&&field.store===true){if(['integer','float','monetary'].includes(field.type)||additionalMeasures.includes(name)){measures[name]=field;}
if(GROUPABLE_TYPES.includes(field.type)){groupableFields[name]=field;}}});measures.__count={string:_t("Count"),type:"integer"};this.arch.children.forEach(field=>{let name=field.attrs.name;if(field.attrs.invisible&&py.eval(field.attrs.invisible)){if(name in groupableFields){delete groupableFields[name];}
if(!additionalMeasures.includes(name)){delete measures[name];return;}}
if(field.attrs.interval){name+=':'+field.attrs.interval;}
if(field.attrs.widget){widgets[name]=field.attrs.widget;}
if(field.attrs.type==='measure'&&!(name in measures)){measures[name]=this.fields[name];}
if(field.attrs.string&&name in measures){measures[name].string=field.attrs.string;}
if(field.attrs.type==='measure'||'operator'in field.attrs){activeMeasures.push(name);measures[name]=this.fields[name];}
if(field.attrs.type==='col'){colGroupBys.push(name);}
if(field.attrs.type==='row'){rowGroupBys.push(name);}});if((!activeMeasures.length)||this.arch.attrs.display_quantity){activeMeasures.splice(0,0,'__count');}
this.loadParams.measures=activeMeasures;this.loadParams.colGroupBys=config.device.isMobile?[]:colGroupBys;this.loadParams.rowGroupBys=rowGroupBys;this.loadParams.fields=this.fields;this.loadParams.default_order=params.default_order||this.arch.attrs.default_order;this.loadParams.groupableFields=groupableFields;const disableLinking=!!(this.arch.attrs.disable_linking&&JSON.stringify(this.arch.attrs.disable_linking));this.rendererParams.widgets=widgets;this.rendererParams.disableLinking=disableLinking;this.controllerParams.disableLinking=disableLinking;this.controllerParams.title=params.title||this.arch.attrs.string||_t("Untitled");this.controllerParams.measures=measures;this.controllerParams.views=[_findView(params.actionViews,'list'),_findView(params.actionViews,'form'),];function _findView(views,viewType){const view=views.find(view=>{return view.type===viewType;});return[view?view.viewID:false,viewType];}},getRenderer(parent,state){state=Object.assign(state||{},this.rendererParams);return new RendererWrapper(parent,this.config.Renderer,state);},});return PivotView;});;

/* /web/static/src/js/views/calendar/calendar_controller.js defined in bundle 'web.assets_backend' */
odoo.define('web.CalendarController',function(require){"use strict";var AbstractController=require('web.AbstractController');var core=require('web.core');var Dialog=require('web.Dialog');var dialogs=require('web.view_dialogs');var QuickCreate=require('web.CalendarQuickCreate');var _t=core._t;var QWeb=core.qweb;function dateToServer(date){return date.clone().utc().locale('en').format('YYYY-MM-DD HH:mm:ss');}
var CalendarController=AbstractController.extend({custom_events:_.extend({},AbstractController.prototype.custom_events,{changeDate:'_onChangeDate',changeFilter:'_onChangeFilter',deleteRecord:'_onDeleteRecord',dropRecord:'_onDropRecord',next:'_onNext',openCreate:'_onOpenCreate',openEvent:'_onOpenEvent',prev:'_onPrev',quickCreate:'_onQuickCreate',updateRecord:'_onUpdateRecord',viewUpdated:'_onViewUpdated',}),events:_.extend({},AbstractController.prototype.events,{'click button.o_calendar_button_new':'_onButtonNew','click button.o_calendar_button_prev':'_onButtonNavigation','click button.o_calendar_button_today':'_onButtonNavigation','click button.o_calendar_button_next':'_onButtonNavigation','click button.o_calendar_button_day':'_onButtonScale','click button.o_calendar_button_week':'_onButtonScale','click button.o_calendar_button_month':'_onButtonScale','click button.o_calendar_button_year':'_onButtonScale',}),init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.current_start=null;this.displayName=params.displayName;this.quickAddPop=params.quickAddPop;this.disableQuickCreate=params.disableQuickCreate;this.eventOpenPopup=params.eventOpenPopup;this.showUnusualDays=params.showUnusualDays;this.formViewId=params.formViewId;this.readonlyFormViewId=params.readonlyFormViewId;this.mapping=params.mapping;this.context=params.context;this.previousOpen=null;this.quickCreating=false;this.scales=params.scales;},renderButtons:function($node){this.$buttons=$(QWeb.render('CalendarView.buttons',this._renderButtonsParameters()));this.$buttons.find('.o_calendar_button_'+this.mode).addClass('active');if($node){this.$buttons.appendTo($node);}else{this.$('.o_calendar_buttons').replaceWith(this.$buttons);}},_extractLastPartOfClassName(startClassName,classList){var result;classList.forEach(function(value){if(value&&value.indexOf(startClassName)===0){result=value.substring(startClassName.length);}});return result;},_move:function(to){this.model[to]();return this.reload();},_renderButtonsParameters(){return{scales:this.scales,};},_update:function(){var self=this;if(!this.showUnusualDays){return this._super.apply(this,arguments);}
return this._super.apply(this,arguments).then(function(){self._rpc({model:self.modelName,method:'get_unusual_days',args:[self.model.data.start_date.format('YYYY-MM-DD'),self.model.data.end_date.format('YYYY-MM-DD')],context:self.context,}).then(function(data){_.each(self.$el.find('td.fc-day'),function(td){var $td=$(td);if(data[$td.data('date')]){$td.addClass('o_calendar_disabled');}});});});},_updateRecord:function(record){var reload=this.reload.bind(this,{});return this.model.updateRecord(record).then(reload,reload);},_onButtonNew(){this.trigger_up('switch_view',{view_type:'form'});},_onButtonNavigation(jsEvent){const action=this._extractLastPartOfClassName('o_calendar_button_',jsEvent.currentTarget.classList);if(action){this._move(action);}},_onButtonScale(jsEvent){const scale=this._extractLastPartOfClassName('o_calendar_button_',jsEvent.currentTarget.classList);if(scale){this.model.setScale(scale);this.reload();}},_onChangeDate:function(event){var modelData=this.model.get();if(modelData.target_date.format('YYYY-MM-DD')===event.data.date.format('YYYY-MM-DD')){switch(modelData.scale){case'month':this.model.setScale('week');break;case'week':this.model.setScale('day');break;case'day':this.model.setScale('month');break;}}else if(modelData.target_date.week()===event.data.date.week()){this.model.setScale('day');}else{this.model.setScale('week');}
this.model.setDate(event.data.date);this.reload();},_onChangeFilter:function(event){if(this.model.changeFilter(event.data)&&!event.data.no_reload){this.reload();}},_onDeleteRecord:function(event){var self=this;Dialog.confirm(this,_t("Are you sure you want to delete this record ?"),{confirm_callback:function(){self.model.deleteRecords([event.data.id],self.modelName).then(function(){self.reload();});}});},_onDropRecord:function(event){this._updateRecord(_.extend({},event.data,{'drop':true,}));},_onNext:function(event){event.stopPropagation();this._move('next');},_onOpenCreate:function(event){var self=this;if(["year","month"].includes(this.model.get().scale)){event.data.allDay=true;}
var data=this.model.calendarEventToRecord(event.data);var context=_.extend({},this.context,event.options&&event.options.context);if(data.name){context.default_name=data.name;}
context['default_'+this.mapping.date_start]=data[this.mapping.date_start]||null;if(this.mapping.date_stop){context['default_'+this.mapping.date_stop]=data[this.mapping.date_stop]||null;}
if(this.mapping.date_delay){context['default_'+this.mapping.date_delay]=data[this.mapping.date_delay]||null;}
if(this.mapping.all_day){context['default_'+this.mapping.all_day]=data[this.mapping.all_day]||null;}
for(var k in context){if(context[k]&&context[k]._isAMomentObject){context[k]=dateToServer(context[k]);}}
var options=_.extend({},this.options,event.options,{context:context,title:_.str.sprintf(_t('Create: %s'),(this.displayName||this.renderer.arch.attrs.string))});if(this.quick!=null){this.quick.destroy();this.quick=null;}
if(!options.disableQuickCreate&&!event.data.disableQuickCreate&&this.quickAddPop){this.quick=new QuickCreate(this,true,options,data,event.data);this.quick.open();this.quick.opened(function(){self.quick.focus();});return;}
var title=_t("Create");if(this.renderer.arch.attrs.string){title+=': '+this.renderer.arch.attrs.string;}
if(this.eventOpenPopup){if(this.previousOpen){this.previousOpen.close();}
this.previousOpen=new dialogs.FormViewDialog(self,{res_model:this.modelName,context:context,title:title,view_id:this.formViewId||false,disable_multiple_selection:true,on_saved:function(){if(event.data.on_save){event.data.on_save();}
self.reload();},});this.previousOpen.open();}else{this.do_action({type:'ir.actions.act_window',res_model:this.modelName,views:[[this.formViewId||false,'form']],target:'current',context:context,});}},_onOpenEvent:function(event){var self=this;var id=event.data._id;id=id&&parseInt(id).toString()===id?parseInt(id):id;if(!this.eventOpenPopup){this._rpc({model:self.modelName,method:'get_formview_id',args:[[id]],context:event.context||self.context,}).then(function(viewId){self.do_action({type:'ir.actions.act_window',res_id:id,res_model:self.modelName,views:[[viewId||false,'form']],target:'current',context:event.context||self.context,});});return;}
var options={res_model:self.modelName,res_id:id||null,context:event.context||self.context,title:_t("Open: ")+event.data.title,on_saved:function(){if(event.data.on_save){event.data.on_save();}
self.reload();},};if(this.formViewId){options.view_id=parseInt(this.formViewId);}
new dialogs.FormViewDialog(this,options).open();},_onPrev:function(){event.stopPropagation();this._move('prev');},_onQuickCreate:function(event){var self=this;if(this.quickCreating){return;}
this.quickCreating=true;this.model.createRecord(event).then(function(){self.quick.destroy();self.quick=null;self.reload();self.quickCreating=false;}).guardedCatch(function(result){var errorEvent=result.event;errorEvent.preventDefault();event.data.options.disableQuickCreate=true;event.data.data.on_save=self.quick.destroy.bind(self.quick);self._onOpenCreate(event.data);self.quickCreating=false;});},_onUpdateRecord:function(event){this._updateRecord(event.data);},_onViewUpdated:function(event){this.mode=event.data.mode;if(this.$buttons){this.$buttons.find('.active').removeClass('active');this.$buttons.find('.o_calendar_button_'+this.mode).addClass('active');}
const title=`${this.displayName} (${event.data.title})`;return this.updateControlPanel({title});},});return CalendarController;});;

/* /web/static/src/js/views/calendar/calendar_model.js defined in bundle 'web.assets_backend' */
odoo.define('web.CalendarModel',function(require){"use strict";var AbstractModel=require('web.AbstractModel');var Context=require('web.Context');var core=require('web.core');var fieldUtils=require('web.field_utils');var session=require('web.session');var _t=core._t;function dateToServer(date){return date.clone().utc().locale('en').format('YYYY-MM-DD HH:mm:ss');}
return AbstractModel.extend({init:function(){this._super.apply(this,arguments);this.end_date=null;var week_start=_t.database.parameters.week_start;this.week_start=week_start!==undefined&&week_start!==false?week_start%7:moment().startOf('week').day();this.week_stop=this.week_start+6;},calendarEventToRecord:function(event){var data={'name':event.title};var start=event.start.clone();var end=event.end&&event.end.clone();if(!end||end.diff(start)<0){if(event.allDay){end=start.clone();}else{end=start.clone().add(2,'h');}}else if(event.allDay){end.add(-1,'days');}
var isDateEvent=this.fields[this.mapping.date_start].type==='date';if(event.allDay){if(!this.mapping.all_day&&!isDateEvent){if(event.r_start){start.hours(event.r_start.hours()).minutes(event.r_start.minutes()).seconds(event.r_start.seconds()).utc();end.hours(event.r_end.hours()).minutes(event.r_end.minutes()).seconds(event.r_end.seconds()).utc();}else{start.hours(7);end.hours(19);}
start.add(-this.getSession().getTZOffset(start),'minutes');end.add(-this.getSession().getTZOffset(end),'minutes');}}else{start.add(-this.getSession().getTZOffset(start),'minutes');end.add(-this.getSession().getTZOffset(end),'minutes');}
if(this.mapping.all_day){if(event.record){data[this.mapping.all_day]=(this.data.scale!=='month'&&event.allDay)||event.record[this.mapping.all_day]&&end.diff(start)<10||false;}else{data[this.mapping.all_day]=event.allDay;}}
data[this.mapping.date_start]=start;if(this.mapping.date_stop){data[this.mapping.date_stop]=end;}
if(this.mapping.date_delay){if(this.data.scale!=='month'||(this.data.scale==='month'&&!event.drop)){data[this.mapping.date_delay]=(end.diff(start)<=0?end.endOf('day').diff(start):end.diff(start))/1000/3600;}}
return data;},changeFilter:function(filter){var Filter=this.data.filters[filter.fieldName];if(filter.value==='all'){Filter.all=filter.active;}
var f=_.find(Filter.filters,function(f){return f.value===filter.value;});if(f){if(f.active!==filter.active){f.active=filter.active;}else{return false;}}else if(filter.active){Filter.filters.push({value:filter.value,active:true,});}
return true;},createRecord:function(event){var data=this.calendarEventToRecord(event.data.data);for(var k in data){if(data[k]&&data[k]._isAMomentObject){data[k]=dateToServer(data[k]);}}
return this._rpc({model:this.modelName,method:'create',args:[data],context:event.data.options.context,});},deleteRecords:function(ids,model){return this._rpc({model:model,method:'unlink',args:[ids],context:session.user_context,});},__get:function(){return _.extend({},this.data,{fields:this.fields});},__load:function(params){var self=this;this.modelName=params.modelName;this.fields=params.fields;this.fieldNames=params.fieldNames;this.fieldsInfo=params.fieldsInfo;this.mapping=params.mapping;this.mode=params.mode;this.scales=params.scales;this.scalesInfo=params.scalesInfo;this.editable=params.editable;this.creatable=params.creatable;this.eventLimit=params.eventLimit;this.fieldColor=params.fieldColor;if(!this.preloadPromise){this.preloadPromise=new Promise(function(resolve,reject){Promise.all([self._rpc({model:self.modelName,method:'check_access_rights',args:["write",false]}),self._rpc({model:self.modelName,method:'check_access_rights',args:["create",false]})]).then(function(result){var write=result[0];var create=result[1];self.write_right=write;self.create_right=create;resolve();}).guardedCatch(reject);});}
this.data={domain:params.domain,context:params.context,filters:params.filters,};this.setDate(params.initialDate);this.setScale(params.mode);_.each(this.data.filters,function(filter){if(filter.avatar_field&&!filter.avatar_model){filter.avatar_model=self.modelName;}});return this.preloadPromise.then(this._loadCalendar.bind(this));},next:function(){this.setDate(this.data.target_date.clone().add(1,this.data.scale));},prev:function(){this.setDate(this.data.target_date.clone().add(-1,this.data.scale));},__reload:function(handle,params){if(params.domain){this.data.domain=params.domain;}
if(params.context){this.data.context=params.context;}
return this._loadCalendar();},setDate:function(start){this.data.highlight_date=this.data.target_date=start.clone();this.data.start_date=this.data.end_date=start;switch(this.data.scale){case'year':{const yearStart=this.data.start_date.clone().startOf('year');let yearStartDay=this.week_start;if(yearStart.day()<yearStartDay){yearStartDay-=7;}
this.data.start_date=yearStart.day(yearStartDay).startOf('day');this.data.end_date=this.data.end_date.clone().endOf('year').day(this.week_stop).endOf('day');break;}
case'month':var monthStart=this.data.start_date.clone().startOf('month');var monthStartDay;if(monthStart.day()>=this.week_start){monthStartDay=this.week_start;}else{monthStartDay=this.week_start-7;}
this.data.start_date=monthStart.day(monthStartDay).startOf('day');this.data.end_date=this.data.start_date.clone().add(5,'week').day(this.week_stop).endOf('day');break;case'week':var weekStart=this.data.start_date.clone().startOf('week');var weekStartDay=this.week_start;if(this.data.start_date.day()<this.week_start){weekStartDay-=7;}
this.data.start_date=this.data.start_date.clone().day(weekStartDay).startOf('day');this.data.end_date=this.data.end_date.clone().day(weekStartDay+6).endOf('day');break;default:this.data.start_date=this.data.start_date.clone().startOf('day');this.data.end_date=this.data.end_date.clone().endOf('day');}
var manualUtcDateStart=this.data.start_date.clone().add(-this.getSession().getTZOffset(this.data.start_date),'minutes');var formattedUtcDateStart=manualUtcDateStart.format('YYYY-MM-DDTHH:mm:ss')+'Z';this.data.start_date=moment.utc(formattedUtcDateStart);var manualUtcDateEnd=this.data.end_date.clone().add(-this.getSession().getTZOffset(this.data.start_date),'minutes');var formattedUtcDateEnd=manualUtcDateEnd.format('YYYY-MM-DDTHH:mm:ss')+'Z';this.data.end_date=moment.utc(formattedUtcDateEnd);},setScale:function(scale){if(!_.contains(this.scales,scale)){scale="week";}
this.data.scale=scale;this.setDate(this.data.target_date);},today:function(){this.setDate(moment(new Date()));},updateRecord:function(record){var data=_.omit(this.calendarEventToRecord(record),'name');for(var k in data){if(data[k]&&data[k]._isAMomentObject){data[k]=dateToServer(data[k]);}}
var context=new Context(this.data.context,{from_ui:true});return this._rpc({model:this.modelName,method:'write',args:[[parseInt(record.id,10)],data],context:context});},_getFilterDomain:function(){var authorizedValues={};var avoidValues={};_.each(this.data.filters,function(filter){if(filter.all)return;_.each(filter.filters,function(f){if(filter.write_model){if(!authorizedValues[filter.fieldName])
authorizedValues[filter.fieldName]=[];if(f.active){authorizedValues[filter.fieldName].push(f.value);}}else{if(!f.active){if(!avoidValues[filter.fieldName])
avoidValues[filter.fieldName]=[];avoidValues[filter.fieldName].push(f.value);}}});});var domain=[];for(var field in authorizedValues){domain.push([field,'in',authorizedValues[field]]);}
for(var field in avoidValues){if(avoidValues[field].length>0){domain.push([field,'not in',avoidValues[field]]);}}
return domain;},_getFullCalendarOptions:function(){var format12Hour={hour:'numeric',minute:'2-digit',omitZeroMinute:true,meridiem:'short'};var format24Hour={hour:'numeric',minute:'2-digit',hour12:false,};return{defaultView:this.scalesInfo[this.mode||'week'],header:false,selectable:this.creatable&&this.create_right,selectMirror:true,editable:this.editable,droppable:true,navLinks:false,eventLimit:this.eventLimit,snapMinutes:15,longPressDelay:500,eventResizableFromStart:true,nowIndicator:true,weekNumbers:true,weekNumbersWithinDays:true,weekNumberCalculation:function(date){return moment(date).week();},weekLabel:_t("Week"),allDayText:_t("All day"),monthNames:moment.months(),monthNamesShort:moment.monthsShort(),dayNames:moment.weekdays(),dayNamesShort:moment.weekdaysShort(),firstDay:this.week_start,slotLabelFormat:_t.database.parameters.time_format.search("%H")!==-1?format24Hour:format12Hour,allDaySlot:this.mapping.all_day||this.fields[this.mapping.date_start].type==='date',};},_getRangeDomain:function(){var domain=[[this.mapping.date_start,'<=',dateToServer(this.data.end_date)]];if(this.mapping.date_stop){domain.push([this.mapping.date_stop,'>=',dateToServer(this.data.start_date)]);}else if(!this.mapping.date_delay){domain.push([this.mapping.date_start,'>=',dateToServer(this.data.start_date)]);}
return domain;},_loadCalendar:function(){var self=this;this.data.fc_options=this._getFullCalendarOptions();var defs=_.map(this.data.filters,this._loadFilter.bind(this));return Promise.all(defs).then(function(){return self._rpc({model:self.modelName,method:'search_read',context:self.data.context,fields:self.fieldNames,domain:self.data.domain.concat(self._getRangeDomain()).concat(self._getFilterDomain())}).then(function(events){self._parseServerData(events);self.data.data=_.map(events,self._recordToCalendarEvent.bind(self));return Promise.all([self._loadColors(self.data,self.data.data),self._loadRecordsToFilters(self.data,self.data.data)]);});});},_loadColors:function(element,events){if(this.fieldColor){var fieldName=this.fieldColor;_.each(events,function(event){var value=event.record[fieldName];event.color_index=_.isArray(value)?value[0]:value;});this.model_color=this.fields[fieldName].relation||element.model;}
return Promise.resolve();},_loadFilter:function(filter){if(!filter.write_model){return Promise.resolve();}
var field=this.fields[filter.fieldName];return this._rpc({model:filter.write_model,method:'search_read',domain:[["user_id","=",session.uid]],fields:[filter.write_field],}).then(function(res){var records=_.map(res,function(record){var _value=record[filter.write_field];var value=_.isArray(_value)?_value[0]:_value;var f=_.find(filter.filters,function(f){return f.value===value;});var formater=fieldUtils.format[_.contains(['many2many','one2many'],field.type)?'many2one':field.type];return{'id':record.id,'value':value,'label':formater(_value,field),'active':!f||f.active,};});records.sort(function(f1,f2){return _.string.naturalCmp(f2.label,f1.label);});if(field.relation==='res.partner'||field.relation==='res.users'){var value=field.relation==='res.partner'?session.partner_id:session.uid;var me=_.find(records,function(record){return record.value===value;});if(me){records.splice(records.indexOf(me),1);}else{var f=_.find(filter.filters,function(f){return f.value===value;});me={'value':value,'label':session.name+_t(" [Me]"),'active':!f||f.active,};}
records.unshift(me);}
records.push({'value':'all','label':field.relation==='res.partner'||field.relation==='res.users'?_t("Everybody's calendars"):_t("Everything"),'active':filter.all,});filter.filters=records;});},_loadRecordsToFilters:function(element,events){var self=this;var new_filters={};var to_read={};var defs=[];var color_filter={};_.each(this.data.filters,function(filter,fieldName){var field=self.fields[fieldName];new_filters[fieldName]=filter;if(filter.write_model){if(field.relation===self.model_color){_.each(filter.filters,function(f){f.color_index=f.value;});}
return;}
var fs=[];var undefined_fs=[];_.each(events,function(event){var data=event.record[fieldName];if(!_.contains(['many2many','one2many'],field.type)){data=[data];}else{to_read[field.relation]=(to_read[field.relation]||[]).concat(data);}
_.each(data,function(_value){var value=_.isArray(_value)?_value[0]:_value;var f={'color_index':self.model_color===(field.relation||element.model)?value:false,'value':value,'label':fieldUtils.format[field.type](_value,field)||_t("Undefined"),'avatar_model':field.relation||element.model,};value?fs.push(f):undefined_fs.push(f);});});_.each(_.union(fs,undefined_fs),function(f){var f1=_.findWhere(filter.filters,_.omit(f,'color_index'));if(f1){f1.display=true;}else{f.display=f.active=true;filter.filters.push(f);}});if(filter.color_model&&filter.field_color){var ids=filter.filters.reduce((acc,f)=>{if(!f.color_index&&f.value){acc.push(f.value);}
return acc;},[]);if(!color_filter[filter.color_model]){color_filter[filter.color_model]={};}
if(ids.length){defs.push(self._rpc({model:filter.color_model,method:'read',args:[_.uniq(ids),[filter.field_color]],}).then(function(res){_.each(res,function(c){color_filter[filter.color_model][c.id]=c[filter.field_color];});}));}}});_.each(to_read,function(ids,model){defs.push(self._rpc({model:model,method:'name_get',args:[_.uniq(ids)],}).then(function(res){to_read[model]=_.object(res);}));});return Promise.all(defs).then(function(){_.each(self.data.filters,function(filter){if(filter.write_model){return;}
if(filter.filters.length&&(filter.filters[0].avatar_model in to_read)){_.each(filter.filters,function(f){f.label=to_read[f.avatar_model][f.value];});}
if(filter.color_model&&filter.field_color){_.each(filter.filters,function(f){if(!f.color_index){f.color_index=color_filter[filter.color_model]&&color_filter[filter.color_model][f.value];}});}});});},_parseServerData:function(data){var self=this;_.each(data,function(event){_.each(self.fieldNames,function(fieldName){event[fieldName]=self._parseServerValue(self.fields[fieldName],event[fieldName]);});});},_recordToCalendarEvent:function(evt){var date_start;var date_stop;var date_delay=evt[this.mapping.date_delay]||1.0,all_day=this.fields[this.mapping.date_start].type==='date'||this.mapping.all_day&&evt[this.mapping.all_day]||false,the_title='',attendees=[];if(!all_day){date_start=evt[this.mapping.date_start].clone();date_stop=this.mapping.date_stop?evt[this.mapping.date_stop].clone():null;}else{date_start=evt[this.mapping.date_start].clone().startOf('day');date_stop=this.mapping.date_stop?evt[this.mapping.date_stop].clone().startOf('day'):null;}
if(!date_stop&&date_delay){date_stop=date_start.clone().add(date_delay,'hours');}
if(!all_day){date_start.add(this.getSession().getTZOffset(date_start),'minutes');date_stop.add(this.getSession().getTZOffset(date_stop),'minutes');}
if(this.mapping.all_day&&evt[this.mapping.all_day]){date_stop.add(1,'days');}
var r={'record':evt,'start':date_start.local(true).toDate(),'end':date_stop.local(true).toDate(),'r_start':date_start.clone().local(true).toDate(),'r_end':date_stop.clone().local(true).toDate(),'title':the_title,'allDay':all_day,'id':evt.id,'attendees':attendees,};if(!(this.mapping.all_day&&evt[this.mapping.all_day])&&this.data.scale==='month'&&this.fields[this.mapping.date_start].type!=='date'){r.showTime=true;}
return r;},});});;

/* /web/static/src/js/views/calendar/calendar_popover.js defined in bundle 'web.assets_backend' */
odoo.define('web.CalendarPopover',function(require){"use strict";var fieldRegistry=require('web.field_registry');const fieldRegistryOwl=require('web.field_registry_owl');const FieldWrapper=require('web.FieldWrapper');var StandaloneFieldManagerMixin=require('web.StandaloneFieldManagerMixin');var Widget=require('web.Widget');const{WidgetAdapterMixin}=require('web.OwlCompatibility');var CalendarPopover=Widget.extend(WidgetAdapterMixin,StandaloneFieldManagerMixin,{template:'CalendarView.event.popover',events:{'click .o_cw_popover_edit':'_onClickPopoverEdit','click .o_cw_popover_delete':'_onClickPopoverDelete',},init:function(parent,eventInfo){this._super.apply(this,arguments);StandaloneFieldManagerMixin.init.call(this);this.hideDate=eventInfo.hideDate;this.hideTime=eventInfo.hideTime;this.eventTime=eventInfo.eventTime;this.eventDate=eventInfo.eventDate;this.displayFields=eventInfo.displayFields;this.fields=eventInfo.fields;this.event=eventInfo.event;this.modelName=eventInfo.modelName;this._canDelete=eventInfo.canDelete;},willStart:function(){return Promise.all([this._super.apply(this,arguments),this._processFields()]);},start:function(){var self=this;_.each(this.$fieldsList,function($field){$field.appendTo(self.$('.o_cw_popover_fields_secondary'));});return this._super.apply(this,arguments);},destroy:function(){this._super.apply(this,arguments);WidgetAdapterMixin.destroy.call(this);},on_attach_callback:function(){WidgetAdapterMixin.on_attach_callback.call(this);},on_detach_callback:function(){WidgetAdapterMixin.on_detach_callback.call(this);},isEventDeletable(){return this._canDelete;;},isEventDetailsVisible(){return true;},isEventEditable(){return true;},_processFields:function(){var self=this;var fieldsToGenerate=[];var fields=_.keys(this.displayFields);for(var i=0;i<fields.length;i++){var fieldName=fields[i];var displayFieldInfo=self.displayFields[fieldName]||{attrs:{invisible:1}};var fieldInfo=self.fields[fieldName];var field={name:fieldName,string:displayFieldInfo.attrs.string||fieldInfo.string,value:self.event.extendedProps.record[fieldName],type:fieldInfo.type,};if(field.type==='selection'){field.selection=fieldInfo.selection;}
if(field.type==='monetary'){var currencyField=field.currency_field||'currency_id';if(!fields.includes(currencyField)&&_.has(self.event.record,currencyField)){fields.push(currencyField);}}
if(fieldInfo.relation){field.relation=fieldInfo.relation;}
if(displayFieldInfo.attrs.widget){field.widget=displayFieldInfo.attrs.widget;}else if(_.contains(['many2many','one2many'],field.type)){field.widget='many2many_tags';}
if(_.contains(['many2many','one2many'],field.type)){field.fields=[{name:'id',type:'integer',},{name:'display_name',type:'char',}];}
fieldsToGenerate.push(field);};this.$fieldsList=[];return this.model.makeRecord(this.modelName,fieldsToGenerate).then(function(recordID){var defs=[];var record=self.model.get(recordID);_.each(fieldsToGenerate,function(field){if(field.invisible)return;let isLegacy=true;let fieldWidget;let FieldClass=fieldRegistryOwl.getAny([field.widget,field.type]);if(FieldClass){isLegacy=false;fieldWidget=new FieldWrapper(this,FieldClass,{fieldName:field.name,record,options:self.displayFields[field.name],});}else{FieldClass=fieldRegistry.getAny([field.widget,field.type]);fieldWidget=new FieldClass(self,field.name,record,self.displayFields[field.name]);}
self._registerWidget(recordID,field.name,fieldWidget);var $field=$('<li>',{class:'list-group-item flex-shrink-0 d-flex flex-wrap'});var $fieldLabel=$('<strong>',{class:'mr-2',text:_.str.sprintf('%s : ',field.string)});$fieldLabel.appendTo($field);var $fieldContainer=$('<div>',{class:'flex-grow-1'});$fieldContainer.appendTo($field);let def;if(isLegacy){def=fieldWidget.appendTo($fieldContainer);}else{def=fieldWidget.mount($fieldContainer[0]);}
defs.push(def.then(function(){self.$fieldsList.push($field);}));});return Promise.all(defs);});},_onClickPopoverEdit:function(ev){ev.preventDefault();this.trigger_up('edit_event',{id:this.event.id,title:this.event.extendedProps.record.display_name,});},_onClickPopoverDelete:function(ev){ev.preventDefault();this.trigger_up('delete_event',{id:this.event.id});},});return CalendarPopover;});;

/* /web/static/src/js/views/calendar/calendar_quick_create.js defined in bundle 'web.assets_backend' */
odoo.define('web.CalendarQuickCreate',function(require){"use strict";var core=require('web.core');var Dialog=require('web.Dialog');var _t=core._t;var QWeb=core.qweb;var QuickCreate=Dialog.extend({events:_.extend({},Dialog.events,{'keyup input':'_onkeyup',}),init:function(parent,buttons,options,dataTemplate,dataCalendar){this._buttons=buttons||false;this.options=options;this.dataTemplate=dataTemplate||{};this.dataCalendar=dataCalendar;var self=this;this._super(parent,{title:options.title,size:'small',buttons:this._buttons?[{text:_t("Create"),classes:'btn-primary',click:function(){if(!self._quickAdd(dataCalendar)){self.focus();}}},{text:_t("Edit"),click:function(){dataCalendar.disableQuickCreate=true;dataCalendar.title=self.$('input').val().trim();dataCalendar.on_save=self.destroy.bind(self);self.trigger_up('openCreate',dataCalendar);}},{text:_t("Cancel"),close:true},]:[],$content:QWeb.render('CalendarView.quick_create',{widget:this})});},focus:function(){this.$('input').focus();},_quickAdd:function(dataCalendar){dataCalendar=$.extend({},this.dataTemplate,dataCalendar);var val=this.$('input').val().trim();if(!val){this.$('label, input').addClass('o_field_invalid');var warnings=_.str.sprintf('<ul><li>%s</li></ul>',_t("Summary"));this.do_warn(_t("Invalid fields:"),warnings);}
dataCalendar.title=val;return(val)?this.trigger_up('quickCreate',{data:dataCalendar,options:this.options}):false;},_onkeyup:function(event){if(this._flagEnter){return;}
if(event.keyCode===$.ui.keyCode.ENTER){this._flagEnter=true;if(!this._quickAdd(this.dataCalendar)){this._flagEnter=false;}}else if(event.keyCode===$.ui.keyCode.ESCAPE&&this._buttons){this.close();}},});return QuickCreate;});;

/* /web/static/src/js/views/calendar/calendar_renderer.js defined in bundle 'web.assets_backend' */
odoo.define('web.CalendarRenderer',function(require){"use strict";var AbstractRenderer=require('web.AbstractRenderer');var CalendarPopover=require('web.CalendarPopover');var core=require('web.core');var Dialog=require('web.Dialog');var field_utils=require('web.field_utils');var FieldManagerMixin=require('web.FieldManagerMixin');var relational_fields=require('web.relational_fields');var session=require('web.session');var Widget=require('web.Widget');const{createYearCalendarView}=require('/web/static/src/js/libs/fullcalendar.js');var _t=core._t;var qweb=core.qweb;var SidebarFilterM2O=relational_fields.FieldMany2One.extend({_getSearchBlacklist:function(){return this._super.apply(this,arguments).concat(this.filter_ids||[]);},});var SidebarFilter=Widget.extend(FieldManagerMixin,{template:'CalendarView.sidebar.filter',custom_events:_.extend({},FieldManagerMixin.custom_events,{field_changed:'_onFieldChanged',}),init:function(parent,options){this._super.apply(this,arguments);FieldManagerMixin.init.call(this);this.title=options.title;this.fields=options.fields;this.fieldName=options.fieldName;this.write_model=options.write_model;this.write_field=options.write_field;this.avatar_field=options.avatar_field;this.avatar_model=options.avatar_model;this.filters=options.filters;this.label=options.label;this.getColor=options.getColor;},willStart:function(){var self=this;var defs=[this._super.apply(this,arguments)];if(this.write_model||this.write_field){var def=this.model.makeRecord(this.write_model,[{name:this.write_field,relation:this.fields[this.fieldName].relation,type:'many2one',}]).then(function(recordID){self.many2one=new SidebarFilterM2O(self,self.write_field,self.model.get(recordID),{mode:'edit',attrs:{string:_t(self.fields[self.fieldName].string),placeholder:"+ "+_.str.sprintf(_t("Add %s"),self.title),can_create:false},});});defs.push(def);}
return Promise.all(defs);},start:function(){this._super();if(this.many2one){this.many2one.appendTo(this.$el);this.many2one.filter_ids=_.without(_.pluck(this.filters,'value'),'all');}
this.$el.on('click','.o_remove',this._onFilterRemove.bind(this));this.$el.on('click','.o_calendar_filter_items input',this._onFilterActive.bind(this));},_onFieldChanged:function(event){var self=this;event.stopPropagation();var createValues={'user_id':session.uid};var value=event.data.changes[this.write_field].id;createValues[this.write_field]=value;this._rpc({model:this.write_model,method:'create',args:[createValues],}).then(function(){self.trigger_up('changeFilter',{'fieldName':self.fieldName,'value':value,'active':true,});});},_onFilterActive:function(e){var $input=$(e.currentTarget);this.trigger_up('changeFilter',{'fieldName':this.fieldName,'value':$input.closest('.o_calendar_filter_item').data('value'),'active':$input.prop('checked'),});},_onFilterRemove:function(e){var self=this;var $filter=$(e.currentTarget).closest('.o_calendar_filter_item');Dialog.confirm(this,_t("Do you really want to delete this filter from favorites ?"),{confirm_callback:function(){self._rpc({model:self.write_model,method:'unlink',args:[[$filter.data('id')]],}).then(function(){self.trigger_up('changeFilter',{'fieldName':self.fieldName,'id':$filter.data('id'),'active':false,'value':$filter.data('value'),});});},});},});return AbstractRenderer.extend({template:"CalendarView",config:{CalendarPopover:CalendarPopover,},custom_events:_.extend({},AbstractRenderer.prototype.custom_events||{},{edit_event:'_onEditEvent',delete_event:'_onDeleteEvent',}),init:function(parent,state,params){this._super.apply(this,arguments);this.displayFields=params.displayFields;this.model=params.model;this.filters=[];this.color_map={};this.hideDate=params.hideDate;this.hideTime=params.hideTime;this.canDelete=params.canDelete;this.canCreate=params.canCreate;this.scalesInfo=params.scalesInfo;this._isInDOM=false;},start:function(){this._initSidebar();this._initCalendar();return this._super();},on_attach_callback:function(){this._super(...arguments);this._isInDOM=true;this.calendar.render();this._renderCalendar();window.addEventListener('click',this._onWindowClick.bind(this));},on_detach_callback:function(){this._super(...arguments);this._isInDOM=false;window.removeEventListener('click',this._onWindowClick);},destroy:function(){if(this.calendar){this.calendar.destroy();}
if(this.$small_calendar){this.$small_calendar.datepicker('destroy');$('#ui-datepicker-div:empty').remove();}
this._super.apply(this,arguments);},getAvatars:function(record,fieldName,imageField){var field=this.state.fields[fieldName];if(!record[fieldName]){return[];}
if(field.type==='one2many'||field.type==='many2many'){return _.map(record[fieldName],function(id){return'<img src="/web/image/'+field.relation+'/'+id+'/'+imageField+'" />';});}else if(field.type==='many2one'){return['<img src="/web/image/'+field.relation+'/'+record[fieldName][0]+'/'+imageField+'" />'];}else{var value=this._format(record,fieldName);var color=this.getColor(value);if(isNaN(color)){return['<span class="o_avatar_square" style="background-color:'+color+';"/>'];}
else{return['<span class="o_avatar_square o_calendar_color_'+color+'"/>'];}}},getColor:function(key){if(!key){return;}
if(this.color_map[key]){return this.color_map[key];}
if(typeof key==='string'&&key.match(/^((#[A-F0-9]{3})|(#[A-F0-9]{6})|((hsl|rgb)a?\(\s*(?:(\s*\d{1,3}%?\s*),?){3}(\s*,[0-9.]{1,4})?\))|)$/i)){return this.color_map[key]=key;}
if(typeof key==='number'&&!(key in this.color_map)){return this.color_map[key]=key;}
var index=(((_.keys(this.color_map).length+1)*5)%24)+1;this.color_map[key]=index;return index;},getLocalState:function(){var fcScroller=this.calendarElement.querySelector('.fc-scroller');return{scrollPosition:fcScroller.scrollTop,};},setLocalState:function(localState){if(localState.scrollPosition){var fcScroller=this.calendarElement.querySelector('.fc-scroller');fcScroller.scrollTop=localState.scrollPosition;}},_convertEventToFC3Event:function(fc4Event){var event=fc4Event;if(!moment.isMoment(fc4Event.start)){event={id:fc4Event.id,title:fc4Event.title,start:moment(fc4Event.start).utcOffset(0,true),end:fc4Event.end&&moment(fc4Event.end).utcOffset(0,true),allDay:fc4Event.allDay,color:fc4Event.color,};if(fc4Event.extendedProps){event=Object.assign({},event,{r_start:fc4Event.extendedProps.r_start&&moment(fc4Event.extendedProps.r_start).utcOffset(0,true),r_end:fc4Event.extendedProps.r_end&&moment(fc4Event.extendedProps.r_end).utcOffset(0,true),record:fc4Event.extendedProps.record,attendees:fc4Event.extendedProps.attendees,});}}
return event;},_eventRender:function(event){var qweb_context={event:event,record:event.extendedProps.record,color:this.getColor(event.extendedProps.color_index),showTime:!self.hideTime&&event.extendedProps.showTime,};this.qweb_context=qweb_context;if(_.isEmpty(qweb_context.record)){return'';}else{return qweb.render("calendar-box",qweb_context);}},_format:function(record,fieldName){var field=this.state.fields[fieldName];if(field.type==="one2many"||field.type==="many2many"){return field_utils.format[field.type]({data:record[fieldName]},field);}else{return field_utils.format[field.type](record[fieldName],field,{forceString:true});}},_getFullCalendarOptions:function(fcOptions){var self=this;const options=Object.assign({},this.state.fc_options,{plugins:['moment','interaction','dayGrid','timeGrid'],eventDrop:function(eventDropInfo){var event=self._convertEventToFC3Event(eventDropInfo.event);self.trigger_up('dropRecord',event);},eventResize:function(eventResizeInfo){self._unselectEvent();var event=self._convertEventToFC3Event(eventResizeInfo.event);self.trigger_up('updateRecord',event);},eventClick:function(eventClickInfo){eventClickInfo.jsEvent.preventDefault();eventClickInfo.jsEvent.stopPropagation();var eventData=eventClickInfo.event;self._unselectEvent();$(self.calendarElement).find(_.str.sprintf('[data-event-id=%s]',eventData.id)).addClass('o_cw_custom_highlight');self._renderEventPopover(eventData,$(eventClickInfo.el));},yearDateClick:function(info){self._unselectEvent();info.view.unselect();if(!info.events.length){if(info.selectable){const data={start:info.date,allDay:true,};if(self.state.context.default_name){data.title=self.state.context.default_name;}
self.trigger_up('openCreate',self._convertEventToFC3Event(data));}}else{self._renderYearEventPopover(info.date,info.events,$(info.dayEl));}},select:function(selectionInfo){if(self.$('.o_cw_popover').length){self._unselectEvent();}
var data={start:selectionInfo.start,end:selectionInfo.end,allDay:selectionInfo.allDay};if(self.state.context.default_name){data.title=self.state.context.default_name;}
self.trigger_up('openCreate',self._convertEventToFC3Event(data));if(self.state.scale==='year'){self.calendar.view.unselect();}else{self.calendar.unselect();}},eventRender:function(info){var event=info.event;var element=$(info.el);var view=info.view;element.attr('data-event-id',event.id);if(view.type==='dayGridYear'){const color=this.getColor(event.extendedProps.color_index);if(typeof color==='string'){element.css({backgroundColor:color,});}else if(typeof color==='number'){element.addClass(`o_calendar_color_${color}`);}else{element.addClass('o_calendar_color_1');}}else{var $render=$(self._eventRender(event));element.find('.fc-content').html($render.html());element.addClass($render.attr('class'));if(!element.find('.fc-bg').length){element.find('.fc-content').after($('<div/>',{class:'fc-bg'}));}
if(view.type==='dayGridMonth'&&event.extendedProps.record){var start=event.extendedProps.r_start||event.start;var end=event.extendedProps.r_end||event.end;var isSameDayEvent=moment(start).clone().add(1,'minute').isSame(moment(end).clone().subtract(1,'minute'),'day');if(!event.extendedProps.record.allday&&isSameDayEvent){element.addClass('o_cw_nobg');if(event.extendedProps.showTime&&!self.hideTime){const displayTime=moment(start).clone().format(self._getDbTimeFormat());element.find('.fc-content .fc-time').text(displayTime);}}}
element.on('dblclick',function(){self.trigger_up('edit_event',{id:event.id});});}},datesRender:function(info){const viewToMode=Object.fromEntries(Object.entries(self.scalesInfo).map(([k,v])=>[v,k]));self.trigger_up('viewUpdated',{mode:viewToMode[info.view.type],title:info.view.title,});},eventMouseEnter:function(mouseEnterInfo){$(self.calendarElement).find(_.str.sprintf('[data-event-id=%s]',mouseEnterInfo.event.id)).addClass('o_cw_custom_hover');},eventMouseLeave:function(mouseLeaveInfo){if(!mouseLeaveInfo.event.id){return;}
$(self.calendarElement).find(_.str.sprintf('[data-event-id=%s]',mouseLeaveInfo.event.id)).removeClass('o_cw_custom_hover');},eventDragStart:function(mouseDragInfo){$(self.calendarElement).find(_.str.sprintf('[data-event-id=%s]',mouseDragInfo.event.id)).addClass('o_cw_custom_hover');self._unselectEvent();},eventResizeStart:function(mouseResizeInfo){$(self.calendarElement).find(_.str.sprintf('[data-event-id=%s]',mouseResizeInfo.event.id)).addClass('o_cw_custom_hover');self._unselectEvent();},eventLimitClick:function(){self._unselectEvent();return'popover';},windowResize:function(){self._render();},views:{timeGridDay:{columnHeaderFormat:'LL'},timeGridWeek:{columnHeaderFormat:'ddd D'},dayGridMonth:{columnHeaderFormat:'dddd'}},height:'parent',unselectAuto:false,dir:_t.database.parameters.direction,events:(info,successCB)=>{successCB(self.state.data);},},fcOptions);options.plugins.push(createYearCalendarView(FullCalendar,options));return options;},_initCalendar:function(){this.calendarElement=this.$(".o_calendar_widget")[0];var locale=moment.locale();var fcOptions=this._getFullCalendarOptions({locale:locale,});this.calendar=new FullCalendar.Calendar(this.calendarElement,fcOptions);},_initCalendarMini:function(){var self=this;this.$small_calendar=this.$(".o_calendar_mini");this.$small_calendar.datepicker({'onSelect':function(datum,obj){self.trigger_up('changeDate',{date:moment(new Date(+obj.currentYear,+obj.currentMonth,+obj.currentDay))});},'showOtherMonths':true,'dayNamesMin':this.state.fc_options.dayNamesShort.map(x=>x[0]),'monthNames':this.state.fc_options.monthNamesShort,'firstDay':this.state.fc_options.firstDay,});},_initSidebar:function(){this.$sidebar=this.$('.o_calendar_sidebar');this.$sidebar_container=this.$(".o_calendar_sidebar_container");this._initCalendarMini();},_onPopoverShown:function($popoverElement,calendarPopover){var $popover=$($popoverElement.data('bs.popover').tip);$popover.find('.o_cw_popover_close').on('click',this._unselectEvent.bind(this));$popover.find('.o_cw_body').replaceWith(calendarPopover.$el);},async _renderView(){this.$('.o_calendar_view')[0].prepend(this.calendarElement);if(this._isInDOM){this._renderCalendar();}
this.$small_calendar.datepicker("setDate",this.state.highlight_date.toDate()).find('.o_selected_range').removeClass('o_color o_selected_range');var $a;switch(this.state.scale){case'year':$a=this.$small_calendar.find('td');break;case'month':$a=this.$small_calendar.find('td');break;case'week':$a=this.$small_calendar.find('tr:has(.ui-state-active)');break;case'day':$a=this.$small_calendar.find('a.ui-state-active');break;}
$a.addClass('o_selected_range');setTimeout(function(){$a.not('.ui-state-active').addClass('o_color');});await this._renderFilters();},_renderCalendar(){this.calendar.unselect();if(this.scalesInfo[this.state.scale]!==this.calendar.view.type){this.calendar.changeView(this.scalesInfo[this.state.scale]);}
if(this.target_date!==this.state.target_date.toString()){this.calendar.gotoDate(moment(this.state.target_date).toDate());this.target_date=this.state.target_date.toString();}else{this._renderEvents();}
this._unselectEvent();},_renderEvents:function(){this.calendar.refetchEvents();},_renderFilters:function(){this.$('.o_calendar_filter_item').popover('dispose');_.each(this.filters||(this.filters=[]),function(filter){filter.destroy();});if(this.state.fullWidth){return Promise.resolve();}
return this._renderFiltersOneByOne();},_renderFiltersOneByOne:function(filterIndex){filterIndex=filterIndex||0;var arrFilters=_.toArray(this.state.filters);var prom;if(filterIndex<arrFilters.length){var options=arrFilters[filterIndex];if(!_.find(options.filters,function(f){return f.display==null||f.display;})){return this._renderFiltersOneByOne(filterIndex+1);}
var self=this;options.getColor=this.getColor.bind(this);options.fields=this.state.fields;var sidebarFilter=new SidebarFilter(self,options);prom=sidebarFilter.appendTo(this.$sidebar).then(function(){if(options.avatar_field){_.each(options.filters,function(filter){if(!['all',false].includes(filter.value)){var selector=_.str.sprintf('.o_calendar_filter_item[data-value=%s]',filter.value);sidebarFilter.$el.find(selector).popover({animation:false,trigger:'hover',html:true,placement:'top',title:filter.label,delay:{show:300,hide:0},content:function(){return $('<img>',{src:_.str.sprintf('/web/image/%s/%s/%s',options.avatar_model,filter.value,options.avatar_field),class:'mx-auto',});},});}});}
return self._renderFiltersOneByOne(filterIndex+1);});this.filters.push(sidebarFilter);}
return Promise.resolve(prom);},_getDbTimeFormat:function(){return _t.database.parameters.time_format.search('%H')!==-1?'HH:mm':'hh:mm a';},_getFormattedDate:function(start,end,showDayName){const isSameDayEvent=start.clone().add(1,'minute').isSame(end.clone().subtract(1,'minute'),'day');if(!isSameDayEvent&&start.isSame(end,'month')){return start.clone().format('MMMM D')+'-'+end.clone().format('D, YYYY');}else{return isSameDayEvent?start.clone().format(showDayName?'dddd, LL':'LL'):start.clone().format('LL')+' - '+end.clone().format('LL');}},_getPopoverContext:function(eventData){var context={hideDate:this.hideDate,hideTime:this.hideTime,eventTime:{},eventDate:{},fields:this.state.fields,displayFields:this.displayFields,event:eventData,modelName:this.model,canDelete:this.canDelete,};var start=moment((eventData.extendedProps&&eventData.extendedProps.r_start)||eventData.start);var end=moment((eventData.extendedProps&&eventData.extendedProps.r_end)||eventData.end);var isSameDayEvent=start.clone().add(1,'minute').isSame(end.clone().subtract(1,'minute'),'day');if(!this.hideTime&&!eventData.extendedProps.record.allday&&isSameDayEvent){var dbTimeFormat=this._getDbTimeFormat();context.eventTime.time=start.clone().format(dbTimeFormat)+' - '+end.clone().format(dbTimeFormat);var durationHours=moment.duration(end.diff(start)).hours();var durationHoursKey=(durationHours===1)?'h':'hh';var durationMinutes=moment.duration(end.diff(start)).minutes();var durationMinutesKey=(durationMinutes===1)?'m':'mm';var localeData=moment.localeData();context.eventTime.duration=(durationHours>0?localeData.relativeTime(durationHours,true,durationHoursKey):'')
+(durationHours>0&&durationMinutes>0?', ':'')
+(durationMinutes>0?localeData.relativeTime(durationMinutes,true,durationMinutesKey):'');}
if(!this.hideDate){context.eventDate.date=this._getFormattedDate(start,end,true);if(eventData.extendedProps.record.allday&&isSameDayEvent){context.eventDate.duration=_t("All day");}else if(eventData.extendedProps.record.allday&&!isSameDayEvent){var daysLocaleData=moment.localeData();var days=moment.duration(end.diff(start)).days();context.eventDate.duration=daysLocaleData.relativeTime(days,true,'dd');}}
return context;},_getPopoverParams:function(eventData){return{animation:false,delay:{show:50,hide:100},trigger:'manual',html:true,title:eventData.extendedProps.record.display_name,template:qweb.render('CalendarView.event.popover.placeholder',{color:this.getColor(eventData.extendedProps.color_index)}),container:eventData.allDay?'.fc-view':'.fc-scroller',}},_renderEventPopover:function(eventData,$eventElement){var self=this;var calendarPopover=new self.config.CalendarPopover(self,self._getPopoverContext(eventData));calendarPopover.appendTo($('<div>')).then(()=>{$eventElement.popover(self._getPopoverParams(eventData)).on('shown.bs.popover',function(){self._onPopoverShown($(this),calendarPopover);}).popover('show');});},_renderYearEventPopover:function(date,events,$el){const groupKeys=[];const groupedEvents={};for(const event of events){const start=moment(event.extendedProps.r_start);const end=moment(event.extendedProps.r_end);const key=this._getFormattedDate(start,end,false);if(!(key in groupedEvents)){groupedEvents[key]=[];groupKeys.push({key:key,start:event.extendedProps.r_start,end:event.extendedProps.r_end,isSameDayEvent:start.clone().add(1,'minute').isSame(end.clone().subtract(1,'minute'),'day'),});}
groupedEvents[key].push(event);}
const popoverContent=qweb.render('CalendarView.yearEvent.popover',{groupedEvents,groupKeys:groupKeys.sort((a,b)=>{if(a.isSameDayEvent){return Number.MIN_SAFE_INTEGER;}else if(b.isSameDayEvent){return Number.MAX_SAFE_INTEGER;}else if(a.start.getTime()-b.start.getTime()===0){return a.end.getTime()-b.end.getTime();}
return a.start.getTime()-b.start.getTime();}).map(x=>x.key),canCreate:this.canCreate,});$el.popover({animation:false,delay:{show:50,hide:100},trigger:'manual',html:true,content:popoverContent,template:qweb.render('CalendarView.yearEvent.popover.placeholder'),container:'.fc-dayGridYear-view',}).on('shown.bs.popover',()=>{$('.o_cw_popover .o_cw_popover_close').on('click',()=>this._unselectEvent());$('.o_cw_popover .o_cw_popover_create').on('click',(e)=>{e.preventDefault();e.stopPropagation();this._unselectEvent();const data={start:date,allDay:true,};if(this.state.context.default_name){data.title=this.state.context.default_name;}
this.trigger_up('openCreate',this._convertEventToFC3Event(data));});$('.o_cw_popover .o_cw_popover_link').on('click',(e)=>{e.preventDefault();e.stopPropagation();this._unselectEvent();this.trigger_up('openEvent',{_id:parseInt(e.target.dataset.id,10),title:e.target.dataset.title,});});}).popover('show');},_scrollToScrollTime:function(){var scrollTime=this.calendar.getOption('scrollTime');this.calendar.scrollToTime(scrollTime);},_unselectEvent:function(){this.$('.fc-event').removeClass('o_cw_custom_highlight');this.$('.o_cw_popover').popover('dispose');},_onWindowClick:function(e){const popover=this.el.querySelector('.o_cw_popover');if(popover&&!popover.contains(e.target)){this._unselectEvent();}},_onEditEvent:function(event){this._unselectEvent();this.trigger_up('openEvent',{_id:event.data.id,title:event.data.title,});},_onDeleteEvent:function(event){this._unselectEvent();this.trigger_up('deleteRecord',{id:parseInt(event.data.id,10)});},});});;

/* /web/static/src/js/views/calendar/calendar_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.CalendarView',function(require){"use strict";var AbstractView=require('web.AbstractView');var CalendarModel=require('web.CalendarModel');var CalendarController=require('web.CalendarController');var CalendarRenderer=require('web.CalendarRenderer');var core=require('web.core');var pyUtils=require('web.py_utils');var utils=require('web.utils');var _lt=core._lt;var fieldsToGather=["date_start","date_delay","date_stop","all_day","recurrence_update"];const scalesInfo={day:'timeGridDay',week:'timeGridWeek',month:'dayGridMonth',year:'dayGridYear',};var CalendarView=AbstractView.extend({display_name:_lt('Calendar'),icon:'fa-calendar',jsLibs:['/web/static/lib/fullcalendar/core/main.js','/web/static/lib/fullcalendar/interaction/main.js','/web/static/lib/fullcalendar/moment/main.js','/web/static/lib/fullcalendar/daygrid/main.js','/web/static/lib/fullcalendar/timegrid/main.js','/web/static/lib/fullcalendar/list/main.js'],cssLibs:['/web/static/lib/fullcalendar/core/main.css','/web/static/lib/fullcalendar/daygrid/main.css','/web/static/lib/fullcalendar/timegrid/main.css','/web/static/lib/fullcalendar/list/main.css'],config:_.extend({},AbstractView.prototype.config,{Model:CalendarModel,Controller:CalendarController,Renderer:CalendarRenderer,}),viewType:'calendar',searchMenuTypes:['filter','favorite'],init:function(viewInfo,params){this._super.apply(this,arguments);var arch=this.arch;var fields=this.fields;var attrs=arch.attrs;if(!attrs.date_start){throw new Error(_lt("Calendar view has not defined 'date_start' attribute."));}
var mapping={};var fieldNames=fields.display_name?['display_name']:[];var displayFields={};_.each(fieldsToGather,function(field){if(arch.attrs[field]){var fieldName=attrs[field];mapping[field]=fieldName;fieldNames.push(fieldName);}});var filters={};var eventLimit=attrs.event_limit!==null&&(isNaN(+attrs.event_limit)?_.str.toBool(attrs.event_limit):+attrs.event_limit);var modelFilters=[];_.each(arch.children,function(child){if(child.tag!=='field')return;var fieldName=child.attrs.name;fieldNames.push(fieldName);if(!child.attrs.invisible||child.attrs.filters){child.attrs.options=child.attrs.options?pyUtils.py_eval(child.attrs.options):{};if(!child.attrs.invisible){displayFields[fieldName]={attrs:child.attrs};}
if(params.sidebar===false)return;if(child.attrs.avatar_field){filters[fieldName]=filters[fieldName]||{'title':fields[fieldName].string,'fieldName':fieldName,'filters':[],};filters[fieldName].avatar_field=child.attrs.avatar_field;filters[fieldName].avatar_model=fields[fieldName].relation;}
if(child.attrs.write_model){filters[fieldName]=filters[fieldName]||{'title':fields[fieldName].string,'fieldName':fieldName,'filters':[],};filters[fieldName].write_model=child.attrs.write_model;filters[fieldName].write_field=child.attrs.write_field;modelFilters.push(fields[fieldName].relation);}
if(child.attrs.filters){filters[fieldName]=filters[fieldName]||{'title':fields[fieldName].string,'fieldName':fieldName,'filters':[],};if(child.attrs.color){filters[fieldName].field_color=child.attrs.color;filters[fieldName].color_model=fields[fieldName].relation;}
if(!child.attrs.avatar_field&&fields[fieldName].relation){if(fields[fieldName].relation.includes(['res.users','res.partner','hr.employee'])){filters[fieldName].avatar_field='image_128';}
filters[fieldName].avatar_model=fields[fieldName].relation;}}}});if(attrs.color){var fieldName=attrs.color;fieldNames.push(fieldName);}
this.controllerParams.quickAddPop=(!('quick_add'in attrs)||utils.toBoolElse(attrs.quick_add+'',true));this.controllerParams.disableQuickCreate=params.disable_quick_create||!this.controllerParams.quickAddPop;this.controllerParams.formViewId=attrs.form_view_id?parseInt(attrs.form_view_id,10):false;if(!this.controllerParams.formViewId&&params.action){var formViewDescr=_.find(params.action.views,function(v){return v.type==='form';});if(formViewDescr){this.controllerParams.formViewId=formViewDescr.viewID;}}
let scales;const allowedScales=Object.keys(scalesInfo);if(arch.attrs.scales){scales=arch.attrs.scales.split(',').filter(x=>allowedScales.includes(x));}else{scales=allowedScales;}
this.controllerParams.eventOpenPopup=utils.toBoolElse(attrs.event_open_popup||'',false);this.controllerParams.showUnusualDays=utils.toBoolElse(attrs.show_unusual_days||'',false);this.controllerParams.mapping=mapping;this.controllerParams.context=params.context||{};this.controllerParams.displayName=params.action&&params.action.name;this.controllerParams.scales=scales;this.rendererParams.displayFields=displayFields;this.rendererParams.model=viewInfo.model;this.rendererParams.hideDate=utils.toBoolElse(attrs.hide_date||'',false);this.rendererParams.hideTime=utils.toBoolElse(attrs.hide_time||'',false);this.rendererParams.canDelete=this.controllerParams.activeActions.delete;this.rendererParams.canCreate=this.controllerParams.activeActions.create;this.rendererParams.scalesInfo=scalesInfo;this.loadParams.fieldNames=_.uniq(fieldNames);this.loadParams.mapping=mapping;this.loadParams.fields=fields;this.loadParams.fieldsInfo=viewInfo.fieldsInfo;this.loadParams.editable=!fields[mapping.date_start].readonly;this.loadParams.creatable=this.controllerParams.activeActions.create;this.loadParams.eventLimit=eventLimit;this.loadParams.fieldColor=attrs.color;this.loadParams.filters=filters;this.loadParams.mode=(params.context&&params.context.default_mode)||attrs.mode;this.loadParams.scales=scales;this.loadParams.initialDate=moment(params.initialDate||new Date());this.loadParams.scalesInfo=scalesInfo;},});return CalendarView;});;

/* /web/static/src/js/views/qweb/qweb_view.js defined in bundle 'web.assets_backend' */
odoo.define('web.qweb',function(require){"use strict";var core=require('web.core');var AbstractView=require('web.AbstractView');var AbstractModel=require('web.AbstractModel');var AbstractRenderer=require('web.AbstractRenderer');var AbstractController=require('web.AbstractController');var registry=require('web.view_registry');var _lt=core._lt;var Model=AbstractModel.extend({init:function(){this._super.apply(this,arguments);this._state={viewId:false,modelName:false,body:'',context:{},domain:[],};},_fetch:function(){var state=this._state;return this._rpc({model:state.modelName,method:'qweb_render_view',kwargs:{view_id:state.viewId,domain:state.domain,context:state.context}}).then(function(r){state.body=r;return state.viewId;});},__get:function(){return this._state;},__load:function(params){_.extend(this._state,_.pick(params,['viewId','modelName','domain','context']));return this._fetch();},__reload:function(_id,params){_.extend(this._state,_.pick(params,['domain','context']));return this._fetch();}});var Renderer=AbstractRenderer.extend({_render:function(){var self=this;return this._super.apply(this,arguments).then(function(){self.$el.html(self.state.body);});}});var Controller=AbstractController.extend({events:_.extend({},AbstractController.prototype.events,{'click [type="toggle"]':'_onLazyToggle','click [type="action"]':'_onActionClicked',}),init:function(){this._super.apply(this,arguments);},renderButtons:function($node){this.$buttons=$('<nav/>');if($node){$node.append(this.$buttons);}},_update:function(){var self=this;return this._super.apply(this,arguments).then(function(){var $cp_buttons=self.renderer.$('nav.o_qweb_cp_buttons');$cp_buttons.children().appendTo(self.$buttons.empty());$cp_buttons.remove();});},_onLazyToggle:function(e){var $target=$(e.target);var $t=$target.closest('[data-model]');if(!($target.hasClass('fa-caret-down')||$target.hasClass('fa-caret-right'))){$target=$t.find('.fa-caret-down, .fa-caret-right');}
var data=$t.data();if(this._fold($t)){$target.removeClass('fa-caret-down').addClass('fa-caret-right');return;}
var args=data.args||_.omit(data,'model','method','id');return this._rpc({model:data.model,method:data.method,args:data.id?[data.id]:undefined,kwargs:args}).then(function(s){return $(s);}).then(function($newcontent){$t.data('children',$newcontent).after($newcontent);$target.removeClass('fa-caret-right').addClass('fa-caret-down');});},_fold:function($el){var $children=$el.data('children');if(!$children){return false;}
var self=this;$children.each(function(_i,e){self._fold($(e));}).remove();$el.removeData('children');return true;}});var QWebView=AbstractView.extend({display_name:_lt('Freedom View'),icon:'fa-file-picture-o',viewType:'qweb',enableTimeRangeMenu:true,config:_.extend({},AbstractView.prototype.config,{Model:Model,Renderer:Renderer,Controller:Controller,}),init:function(viewInfo,params){this._super.apply(this,arguments);this.loadParams.viewId=viewInfo.view_id;}});registry.add('qweb',QWebView);return{View:QWebView,Controller:Controller,Renderer:Renderer,Model:Model};});;

/* /web/static/src/js/widgets/attach_document.js defined in bundle 'web.assets_backend' */
odoo.define('web.AttachDocument',function(require){"use static";var core=require('web.core');var framework=require('web.framework');var widgetRegistry=require('web.widget_registry');var Widget=require('web.Widget');var _t=core._t;var AttachDocument=Widget.extend({template:'AttachDocument',events:{'click':'_onClickAttachDocument','change input.o_input_file':'_onFileChanged',},init:function(parent,record,nodeInfo){this._super.apply(this,arguments);this.res_id=record.res_id;this.res_model=record.model;this.state=record;this.node=nodeInfo;this.fileuploadID=_.uniqueId('o_fileupload');},start:function(){$(window).on(this.fileuploadID,this._onFileLoaded.bind(this));return this._super.apply(this,arguments);},destroy:function(){$(window).off(this.fileuploadID);this._super.apply(this,arguments);},_notifyInvalidFields:function(invalidFields){var fields=this.state.fields;var warnings=invalidFields.map(function(fieldName){var fieldStr=fields[fieldName].string;return _.str.sprintf('<li>%s</li>',_.escape(fieldStr));});warnings.unshift('<ul>');warnings.push('</ul>');this.do_warn(_t("Invalid fields:"),warnings.join(''));},_onClickAttachDocument:function(ev){if($(ev.target).is('input.o_input_file')){return;}
var fieldNames=this.getParent().canBeSaved(this.state.id);if(fieldNames.length){return this._notifyInvalidFields(fieldNames);}
if(!this.res_id){return this.do_warn(false,_t('Please save before attaching a file'));}
this.$('input.o_input_file').trigger('click');},_onFileChanged:function(ev){ev.stopPropagation();this.$('form.o_form_binary_form').trigger('submit');framework.blockUI();},_onFileLoaded:function(){var self=this;var files=Array.prototype.slice.call(arguments,1);return new Promise(function(resolve){if(self.node.attrs.action){self._rpc({model:self.res_model,method:self.node.attrs.action,args:[self.res_id],kwargs:{attachment_ids:_.map(files,function(file){return file.id;}),}}).then(function(){resolve();});}else{resolve();}}).then(function(){self.trigger_up('reload');framework.unblockUI();});},});widgetRegistry.add('attach_document',AttachDocument);});;

/* /web/static/src/js/fields/signature.js defined in bundle 'web.assets_backend' */
odoo.define('web.Signature',function(require){"use strict";var AbstractFieldBinary=require('web.basic_fields').AbstractFieldBinary;var core=require('web.core');var field_utils=require('web.field_utils');var registry=require('web.field_registry');var session=require('web.session');const SignatureDialog=require('web.signature_dialog');var utils=require('web.utils');var qweb=core.qweb;var _t=core._t;var _lt=core._lt;var FieldBinarySignature=AbstractFieldBinary.extend({description:_lt("Signature"),fieldDependencies:_.extend({},AbstractFieldBinary.prototype.fieldDependencies,{__last_update:{type:'datetime'},}),resetOnAnyFieldChange:true,custom_events:_.extend({},AbstractFieldBinary.prototype.custom_events,{upload_signature:'_onUploadSignature',}),events:_.extend({},AbstractFieldBinary.prototype.events,{'click .o_signature':'_onClickSignature',}),template:null,supportedFieldTypes:['binary'],file_type_magic_word:{'/':'jpg','R':'gif','i':'png','P':'svg+xml',},isSet:function(){if(this.mode==='edit'){return this.value;}
return true;},_render:function(){var self=this;var displaySignatureRatio=3;var url;var $img;var width=this.nodeOptions.size?this.nodeOptions.size[0]:this.attrs.width;var height=this.nodeOptions.size?this.nodeOptions.size[1]:this.attrs.height;if(this.value){if(!utils.is_bin_size(this.value)){url='data:image/'+(this.file_type_magic_word[this.value[0]]||'png')+';base64,'+this.value;}else{url=session.url('/web/image',{model:this.model,id:JSON.stringify(this.res_id),field:this.nodeOptions.preview_image||this.name,unique:field_utils.format.datetime(this.recordData.__last_update).replace(/[^0-9]/g,''),});}
$img=$(qweb.render("FieldBinarySignature-img",{widget:this,url:url}));}else{$img=$('<div class="o_signature o_signature_empty"><svg></svg><p>'+_t('SIGNATURE')+'</p></div>');if(width&&height){width=Math.min(width,displaySignatureRatio*height);height=width/displaySignatureRatio;}else if(width){height=width/displaySignatureRatio;}else if(height){width=height*displaySignatureRatio;}}
if(width){$img.attr('width',width);$img.css('max-width',width+'px');}
if(height){$img.attr('height',height);$img.css('max-height',height+'px');}
this.$('> div').remove();this.$('> img').remove();this.$el.prepend($img);$img.on('error',function(){self._clearFile();$img.attr('src',self.placeholder);self.do_warn(false,_t("Could not display the selected image"));});},_onClickSignature:function(){var self=this;if(this.mode==='edit'){var nameAndSignatureOptions={mode:'draw',displaySignatureRatio:3,signatureType:'signature',noInputName:true,};if(this.nodeOptions.full_name){var signName;if(this.fields[this.nodeOptions.full_name].type==='many2one'){signName=this.recordData[this.nodeOptions.full_name]&&this.recordData[this.nodeOptions.full_name].data.display_name;}else{signName=this.recordData[this.nodeOptions.full_name];}
nameAndSignatureOptions.defaultName=(signName==='')?undefined:signName;}
nameAndSignatureOptions.defaultFont=this.nodeOptions.default_font||'';this.signDialog=new SignatureDialog(self,{nameAndSignatureOptions:nameAndSignatureOptions});this.signDialog.open();}},_onUploadSignature:function(ev){var signatureImage=ev.data.signatureImage;if(signatureImage!==this.signDialog.emptySignature){var data=signatureImage[1];var type=signatureImage[0].split('/')[1];this.on_file_uploaded(data.length,ev.data.name,type,data);}
this.signDialog.close();}});registry.add('signature',FieldBinarySignature);});;

/* /web/static/src/js/owl_compatibility.js defined in bundle 'web.assets_backend' */
odoo.define('web.OwlCompatibility',function(){"use strict";const{Component,hooks,tags}=owl;const{useRef,useSubEnv}=hooks;const{xml}=tags;const widgetSymbol=odoo.widgetSymbol;const children=new WeakMap();class ComponentAdapter extends Component{constructor(parent,props){if(!props.Component){throw Error(`ComponentAdapter: 'Component' prop is missing.`);}
let template;if(!(props.Component.prototype instanceof Component)){template=tags.xml`<div/>`;}else{let propsStr='';for(let p in props){if(p!=='Component'){propsStr+=` ${p}="props.${p}"`;}}
template=tags.xml`<t t-component="props.Component"${propsStr}/>`;}
ComponentAdapter.template=template;super(...arguments);this.template=template;ComponentAdapter.template=null;this.widget=null;}
willStart(){if(!(this.props.Component.prototype instanceof Component)){this.widget=new this.props.Component(this,...this.widgetArgs);return this.widget._widgetRenderAndInsert(()=>{});}}
willUpdateProps(nextProps){if(this.widget){return this.updateWidget(nextProps);}}
__patch(target,vnode){if(this.widget){if(this.__owl__.vnode){this.renderWidget();}
vnode.elm=this.widget.el;}
return super.__patch(...arguments);}
mounted(){if(this.widget&&this.widget.on_attach_callback){this.widget.on_attach_callback();}}
willUnmount(){if(this.widget&&this.widget.on_detach_callback){this.widget.on_detach_callback();}}
__destroy(){super.__destroy(...arguments);if(this.widget){this.widget.destroy();}}
get widgetArgs(){if(this.props.widgetArgs){return this.props.widgetArgs;}
const args=Object.keys(this.props);args.splice(args.indexOf('Component'),1);if(args.length>1){throw new Error(`ComponentAdapter has more than 1 argument, 'widgetArgs' must be overriden.`);}
return args.map(a=>this.props[a]);}
updateWidget(){if(this.env.isDebug('assets')){console.warn(`ComponentAdapter: Widget could not be updated, maybe override 'updateWidget' function?`);}}
renderWidget(){if(this.env.isDebug('assets')){console.warn(`ComponentAdapter: Widget could not be re-rendered, maybe override 'renderWidget' function?`);}}
_trigger_up(ev){const evType=ev.name;const payload=ev.data;if(evType==='call_service'){let args=payload.args||[];if(payload.service==='ajax'&&payload.method==='rpc'){args=args.concat(ev.target);}
const service=this.env.services[payload.service];const result=service[payload.method].apply(service,args);payload.callback(result);}else if(evType==='get_session'){if(payload.callback){payload.callback(this.env.session);}}else if(evType==='load_views'){const params={model:payload.modelName,context:payload.context,views_descr:payload.views,};this.env.dataManager.load_views(params,payload.options||{}).then(payload.on_success);}else if(evType==='load_filters'){return this.env.dataManager.load_filters(payload).then(payload.on_success);}else{payload.__targetWidget=ev.target;this.trigger(evType.replace(/_/g,'-'),payload);}}}
const WidgetAdapterMixin={on_attach_callback(){for(const component of children.get(this)||[]){component.on_attach_callback();}},on_detach_callback(){for(const component of children.get(this)||[]){component.on_detach_callback();}},destroy(){for(const component of children.get(this)||[]){component.__destroy();}
children.delete(this);},};class ComponentWrapper extends Component{constructor(parent,Component,props){if(parent instanceof Component){throw new Error('ComponentWrapper must be used with a legacy Widget as parent');}
super(null,props);if(parent){this._register(parent);}
useSubEnv({[widgetSymbol]:this._addListener.bind(this)});this.parentWidget=parent;this.Component=Component;this.props=props||{};this._handledEvents=new Set();this.componentRef=useRef("component");}
on_attach_callback(){function recursiveCallMounted(component){for(const key in component.__owl__.children){recursiveCallMounted(component.__owl__.children[key]);}
component.__callMounted();}
recursiveCallMounted(this);}
on_detach_callback(){this.__callWillUnmount();}
destroy(){if(this.parentWidget){const parentChildren=children.get(this.parentWidget);if(parentChildren){const index=parentChildren.indexOf(this);children.get(this.parentWidget).splice(index,1);}}
super.destroy();}
setParent(parent){if(parent instanceof Component){throw new Error('ComponentWrapper must be used with a legacy Widget as parent');}
this._register(parent);if(this.parentWidget){const parentChildren=children.get(this.parentWidget);parentChildren.splice(parentChildren.indexOf(this),1);}
this.parentWidget=parent;}
async update(props={}){if(this.__owl__.isDestroyed){return new Promise(()=>{});}
Object.assign(this.props,props);let prom;if(this.__owl__.isMounted){prom=this.render();}else{prom=this.mount(...this._mountArgs);}
return prom;}
_addListener(evType){if(this.parentWidget&&!this._handledEvents.has(evType)){this._handledEvents.add(evType);this.el.addEventListener(evType,ev=>{if(!ev.cancelBubble){ev.stopPropagation();const detail=Object.assign({},ev.detail,{__originalComponent:ev.originalComponent,});this.parentWidget.trigger_up(ev.type.replace(/-/g,'_'),detail);}});}}
_register(parent){let parentChildren=children.get(parent);if(!parentChildren){parentChildren=[];children.set(parent,parentChildren);}
parentChildren.push(this);}
async mount(target,options){if(options&&options.position==='self'){throw new Error('Unsupported position: "self" is not allowed for wrapper components. '+'Contact the JS Framework team or open an issue if your use case is relevant.');}
this._mountArgs=arguments;return super.mount(...arguments);}}
ComponentWrapper.template=xml`<t t-component="Component" t-props="props" t-ref="component"/>`;return{ComponentAdapter,ComponentWrapper,WidgetAdapterMixin,};});;

/* /web/static/src/js/report/utils.js defined in bundle 'web.assets_backend' */
odoo.define('report.utils',function(require){'use strict';function get_protocol_from_url(url){var a=document.createElement('a');a.href=url;return a.protocol;}
function get_host_from_url(url){var a=document.createElement('a');a.href=url;return a.host;}
function build_origin(protocol,host){return protocol+'//'+host;}
return{'get_protocol_from_url':get_protocol_from_url,'get_host_from_url':get_host_from_url,'build_origin':build_origin,};});;

/* /web/static/src/js/report/client_action.js defined in bundle 'web.assets_backend' */
odoo.define('report.client_action',function(require){'use strict';var AbstractAction=require('web.AbstractAction');var core=require('web.core');var session=require('web.session');var utils=require('report.utils');var QWeb=core.qweb;var AUTHORIZED_MESSAGES=['report:do_action',];var ReportAction=AbstractAction.extend({hasControlPanel:true,contentTemplate:'report.client_action',init:function(parent,action,options){this._super.apply(this,arguments);options=options||{};this.action_manager=parent;this._title=options.display_name||options.name;this.report_url=options.report_url;this.report_name=options.report_name;this.report_file=options.report_file;this.data=options.data||{};this.context=options.context||{};},start:function(){var self=this;this.iframe=this.$('iframe')[0];this.$buttons=$(QWeb.render('report.client_action.ControlButtons',{}));this.$buttons.on('click','.o_report_print',this.on_click_print);this.controlPanelProps.cp_content={$buttons:this.$buttons,};return Promise.all([this._super.apply(this,arguments),session.is_bound]).then(async function(){var web_base_url=session['web.base.url'];var trusted_host=utils.get_host_from_url(web_base_url);var trusted_protocol=utils.get_protocol_from_url(web_base_url);self.trusted_origin=utils.build_origin(trusted_protocol,trusted_host);self.iframe.src=self.report_url;});},do_show:function(){this.updateControlPanel({cp_content:{$buttons:this.$buttons,},});return this._super.apply(this,arguments);},on_attach_callback:function(){$(window).on('message',this,this.on_message_received);this._super();},on_detach_callback:function(){$(window).off('message',this.on_message_received);this._super();},on_message_received:function(ev){var message_origin=utils.build_origin(ev.originalEvent.source.location.protocol,ev.originalEvent.source.location.host);if(message_origin===this.trusted_origin){var message=ev.originalEvent.data;if(_.isObject(message)){message=message.message;}
if(!_.isString(message)||(_.isString(message)&&!_.contains(AUTHORIZED_MESSAGES,message))){return;}
switch(message){case'report:do_action':return this.do_action(ev.originalEvent.data.action);default:}}},_post_message:function(message){this.iframe.contentWindow.postMessage(message,this.trusted_origin);},on_click_print:function(){var action={'type':'ir.actions.report','report_type':'qweb-pdf','report_name':this.report_name,'report_file':this.report_file,'data':this.data,'context':this.context,'display_name':this.title,};return this.do_action(action);},});core.action_registry.add('report.client_action',ReportAction);return ReportAction;});;

/* /base_import/static/lib/javascript-state-machine/state-machine.js defined in bundle 'web.assets_backend' */
(function(window){StateMachine={VERSION:"2.1.0",Result:{SUCCEEDED:1,NOTRANSITION:2,CANCELLED:3,ASYNC:4,},Error:{INVALID_TRANSITION:100,PENDING_TRANSITION:200,INVALID_CALLBACK:300,},WILDCARD:'*',ASYNC:'async',create:function(cfg,target){var initial=(typeof cfg.initial=='string')?{state:cfg.initial}:cfg.initial;var fsm=target||cfg.target||{};var events=cfg.events||[];var callbacks=cfg.callbacks||{};var map={};var add=function(e){var from=(e.from instanceof Array)?e.from:(e.from?[e.from]:[StateMachine.WILDCARD]);map[e.name]=map[e.name]||{};for(var n=0;n<from.length;n++)
map[e.name][from[n]]=e.to||from[n];};if(initial){initial.event=initial.event||'startup';add({name:initial.event,from:'none',to:initial.state});}
for(var n=0;n<events.length;n++)
add(events[n]);for(var name in map){if(map.hasOwnProperty(name))
fsm[name]=StateMachine.buildEvent(name,map[name]);}
for(var name in callbacks){if(callbacks.hasOwnProperty(name))
fsm[name]=callbacks[name]}
fsm.current='none';fsm.is=function(state){return this.current==state;};fsm.can=function(event){return!this.transition&&(map[event].hasOwnProperty(this.current)||map[event].hasOwnProperty(StateMachine.WILDCARD));}
fsm.cannot=function(event){return!this.can(event);};fsm.error=cfg.error||function(name,from,to,args,error,msg){throw msg;};if(initial&&!initial.defer)
fsm[initial.event]();return fsm;},doCallback:function(fsm,func,name,from,to,args){if(func){try{return func.apply(fsm,[name,from,to].concat(args));}
catch(e){return fsm.error(name,from,to,args,StateMachine.Error.INVALID_CALLBACK,"an exception occurred in a caller-provided callback function");}}},beforeEvent:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onbefore'+name],name,from,to,args);},afterEvent:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onafter'+name]||fsm['on'+name],name,from,to,args);},leaveState:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onleave'+from],name,from,to,args);},enterState:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onenter'+to]||fsm['on'+to],name,from,to,args);},changeState:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onchangestate'],name,from,to,args);},buildEvent:function(name,map){return function(){var from=this.current;var to=map[from]||map[StateMachine.WILDCARD]||from;var args=Array.prototype.slice.call(arguments);if(this.transition)
return this.error(name,from,to,args,StateMachine.Error.PENDING_TRANSITION,"event "+name+" inappropriate because previous transition did not complete");if(this.cannot(name))
return this.error(name,from,to,args,StateMachine.Error.INVALID_TRANSITION,"event "+name+" inappropriate in current state "+this.current);if(false===StateMachine.beforeEvent(this,name,from,to,args))
return StateMachine.CANCELLED;if(from===to){StateMachine.afterEvent(this,name,from,to,args);return StateMachine.NOTRANSITION;}
var fsm=this;this.transition=function(){fsm.transition=null;fsm.current=to;StateMachine.enterState(fsm,name,from,to,args);StateMachine.changeState(fsm,name,from,to,args);StateMachine.afterEvent(fsm,name,from,to,args);};var leave=StateMachine.leaveState(this,name,from,to,args);if(false===leave){this.transition=null;return StateMachine.CANCELLED;}
else if("async"===leave){return StateMachine.ASYNC;}
else{if(this.transition)
this.transition();return StateMachine.SUCCEEDED;}};}};if("function"===typeof define){define("statemachine",[],function(){return StateMachine;});}
else{window.StateMachine=StateMachine;}}(this));;

/* /base_import/static/src/js/import_action.js defined in bundle 'web.assets_backend' */
odoo.define('base_import.import',function(require){"use strict";var AbstractAction=require('web.AbstractAction');var config=require('web.config');var core=require('web.core');var session=require('web.session');var time=require('web.time');var AbstractWebClient=require('web.AbstractWebClient');var Loading=require('web.Loading');var QWeb=core.qweb;var _t=core._t;var _lt=core._lt;var StateMachine=window.StateMachine;function jsonp(form,attributes,callback){attributes=attributes||{};var options={jsonp:_.uniqueId('import_callback_')};window[options.jsonp]=function(){delete window[options.jsonp];callback.apply(null,arguments);};if('data'in attributes){_.extend(attributes.data,options);}else{_.extend(attributes,{data:options});}
_.extend(attributes,{dataType:'script',});$(form).ajaxSubmit(attributes);}
function _make_option(term){return{id:term,text:term};}
function _from_data(data,term){return _.findWhere(data,{id:term})||_make_option(term);}
function dataFilteredQuery(q){var suggestions=_.clone(this.data);if(q.term){var exact=_.filter(suggestions,function(s){return s.id===q.term||s.text===q.term;});if(exact.length){suggestions=exact;}else{suggestions=[_make_option(q.term)].concat(_.filter(suggestions,function(s){return s.id.indexOf(q.term)!==-1||s.text.indexOf(q.term)!==-1}));}}
q.callback({results:suggestions});}
var DataImport=AbstractAction.extend({hasControlPanel:true,contentTemplate:'ImportView',opts:[{name:'encoding',label:_lt("Encoding:"),value:''},{name:'separator',label:_lt("Separator:"),value:''},{name:'quoting',label:_lt("Text Delimiter:"),value:'"'}],spreadsheet_opts:[{name:'sheet',label:_lt("Selected Sheet:"),value:''},],parse_opts_formats:[{name:'date_format',label:_lt("Date Format:"),value:''},{name:'datetime_format',label:_lt("Datetime Format:"),value:''},],parse_opts_separators:[{name:'float_thousand_separator',label:_lt("Thousands Separator:"),value:','},{name:'float_decimal_separator',label:_lt("Decimal Separator:"),value:'.'}],events:{'change .oe_import_file':'loaded_file','change input.oe_import_has_header, .js_import_options input':'settings_changed','change input.oe_import_advanced_mode':function(e){this.do_not_change_match=true;this['settings_changed']();},'click a.oe_import_toggle':function(e){e.preventDefault();this.$('.oe_import_options').toggle();},'click .oe_import_report a.oe_import_report_count':function(e){e.preventDefault();$(e.target).parent().parent().toggleClass('oe_import_report_showmore');},'click .oe_import_report_see_possible_value':function(e){e.preventDefault();$(e.target).parent().toggleClass('oe_import_report_showmore');},'click .oe_import_moreinfo_action a':function(e){e.preventDefault();var action=JSON.parse($(e.target).attr('data-action'));action.views=_(action.views).map(function(view){var id=view[0],type=view[1];return[id,type!=='tree'?type:action.view_type==='form'?'list':'tree'];});this.do_action(_.extend(action,{target:'new',flags:{search_view:true,display_title:true,pager:true,list:{selectable:false}}}));},},init:function(parent,action){this._super.apply(this,arguments);this.action_manager=parent;this.res_model=action.params.model;this.parent_context=action.params.context||{};this.id=null;this.session=session;this._title=_t('Import a File');this.do_not_change_match=false;this.sheets=[];},willStart:function(){var self=this;var def=this._rpc({model:this.res_model,method:'get_import_templates',context:this.parent_context,}).then(function(result){self.importTemplates=result;});return Promise.all([this._super.apply(this,arguments),def]);},start:function(){var self=this;this.$form=this.$('form');this.setup_encoding_picker();this.setup_separator_picker();this.setup_float_format_picker();this.setup_date_format_picker();this.setup_sheets_picker();return Promise.all([this._super(),self.create_model().then(function(id){self.id=id;self.$('input[name=import_id]').val(id);self.renderButtons();var status={cp_content:{$buttons:self.$buttons},};self.updateControlPanel(status);}),]);},create_model:function(){return this._rpc({model:'base_import.import',method:'create',args:[{res_model:this.res_model}],kwargs:{context:session.user_context},});},renderButtons:function(){var self=this;this.$buttons=$(QWeb.render("ImportView.buttons",this));this.$buttons.filter('.o_import_validate').on('click',this.validate.bind(this));this.$buttons.filter('.o_import_import').on('click',this.import.bind(this));this.$buttons.filter('.oe_import_file').on('click',function(){self.$('.o_content .oe_import_file').click();});this.$buttons.filter('.o_import_cancel').on('click',function(e){e.preventDefault();self.exit();});},setup_encoding_picker:function(){this.$('input.oe_import_encoding').select2({width:'50%',data:_.map(('utf-8 utf-16 windows-1252 latin1 latin2 big5 gb18030 shift_jis windows-1251 koir8_r').split(/\s+/),_make_option),query:dataFilteredQuery,initSelection:function($e,c){return c(_make_option($e.val()));}});},setup_separator_picker:function(){var data=[{id:',',text:_t("Comma")},{id:';',text:_t("Semicolon")},{id:'\t',text:_t("Tab")},{id:' ',text:_t("Space")}];this.$('input.oe_import_separator').select2({width:'50%',data:data,query:dataFilteredQuery,initSelection:function($e,c){c(_from_data(data,$e.val())||_make_option($e.val()))}});},setup_float_format_picker:function(){var data_decimal=[{id:',',text:_t("Comma")},{id:'.',text:_t("Dot")},];var data_digits=data_decimal.concat([{id:'',text:_t("No Separator")}]);this.$('input.oe_import_float_thousand_separator').select2({width:'50%',data:data_digits,query:dataFilteredQuery,initSelection:function($e,c){c(_from_data(data_digits,$e.val())||_make_option($e.val()))}});this.$('input.oe_import_float_decimal_separator').select2({width:'50%',data:data_decimal,query:dataFilteredQuery,initSelection:function($e,c){c(_from_data(data_decimal,$e.val())||_make_option($e.val()))}});},setup_date_format_picker:function(){var data=_(['YYYY-MM-DD','DD/MM/YY','DD/MM/YYYY','DD-MM-YYYY','DD-MMM-YY','DD-MMM-YYYY','MM/DD/YY','MM/DD/YYYY','MM-DD-YY','MM-DD-YYYY','DDMMYY','DDMMYYYY','YYMMDD','YYYYMMDD','YY/MM/DD','YYYY/MM/DD','MMDDYY','MMDDYYYY',]).map(_make_option);this.$('input.oe_import_date_format').select2({width:'50%',data:data,query:dataFilteredQuery,initSelection:function($e,c){c(_from_data(data,$e.val())||_make_option($e.val()));}})},setup_sheets_picker:function(){var data=this.sheets.map(_make_option);this.$('input.oe_import_sheet').select2({width:'50%',data:data,query:dataFilteredQuery,initSelection:function($e,c){c(_from_data(data,$e.val())||_make_option($e.val()))},minimumResultsForSearch:10,});},import_options:function(){var self=this;var options={headers:this.$('input.oe_import_has_header').prop('checked'),advanced:this.$('input.oe_import_advanced_mode').prop('checked'),keep_matches:this.do_not_change_match,name_create_enabled_fields:{},skip:Number(this.$('#oe_import_row_start').val())-1||0,limit:Number(this.$('#oe_import_batch_limit').val())||null,};_.each(_.union(this.opts,this.spreadsheet_opts),function(opt){options[opt.name]=self.$('input.oe_import_'+opt.name).val();});_(this.parse_opts_formats).each(function(opt){options[opt.name]=time.moment_to_strftime_format(self.$('input.oe_import_'+opt.name).val());});_(this.parse_opts_separators).each(function(opt){options[opt.name]=self.$('input.oe_import_'+opt.name).val();});options['fields']=[];if(this.do_not_change_match){options['fields']=this.$('.oe_import_fields input.oe_import_match_field').map(function(index,el){return $(el).select2('val')||false;}).get();}
this.do_not_change_match=false;this.$('input.o_import_create_option').each(function(){var field=this.getAttribute('field');if(field){options.name_create_enabled_fields[field]=this.checked;}});return options;},onfile_loaded:function(event,from,to,arg){if(arg!=null){this.toggle_partial(null);}
this.$buttons.filter('.o_import_import, .o_import_validate').addClass('d-none');if(!this.$('input.oe_import_file').val()){return this['settings_changed']();}
this.$('.oe_import_date_format').select2('val','');this.$('.oe_import_datetime_format').val('');this.$('.oe_import_sheet').val('');this.$form.removeClass('oe_import_preview oe_import_error');var import_toggle=false;var file=this.$('input.oe_import_file')[0].files[0];if((file.type&&_.last(file.type.split('/'))==="csv")||(_.last(file.name.split('.'))==="csv")){import_toggle=true;}
this.$form.find('.oe_import_box').toggle(import_toggle);jsonp(this.$form,{url:'/base_import/set_file'},this.proxy('settings_changed'));},onpreviewing:function(){var self=this;this.$buttons.filter('.o_import_import, .o_import_validate').addClass('d-none');this.$form.addClass('oe_import_with_file');this.$form.removeClass('oe_import_preview_error oe_import_error');this.$form.toggleClass('oe_import_noheaders text-muted',!this.$('input.oe_import_has_header').prop('checked'));self.$('input.oe_import_file').val('');this._rpc({model:'base_import.import',method:'parse_preview',args:[this.id,this.import_options()],kwargs:{context:session.user_context},}).then(function(result){var signal=result.error?'preview_failed':'preview_succeeded';self[signal](result);});},onpreview_error:function(event,from,to,result){this.$('.oe_import_options').show();this.$form.addClass('oe_import_preview_error oe_import_error');this.$form.find('.oe_import_box, .oe_import_with_file').removeClass('d-none');this.$form.find('.o_view_nocontent').addClass('d-none');this.$('.oe_import_error_report').html(QWeb.render('ImportView.preview.error',result));},onpreview_success:function(event,from,to,result){var self=this;this.$buttons.filter('.oe_import_file').text(_t('Load New File')).removeClass('btn-primary').addClass('btn-secondary').blur();this.$buttons.filter('.o_import_import, .o_import_validate').removeClass('d-none');this.$form.find('.oe_import_box, .oe_import_with_file').removeClass('d-none');this.$form.find('.o_view_nocontent').addClass('d-none');this.$form.addClass('oe_import_preview');this.$('input.oe_import_advanced_mode').prop('checked',result.advanced_mode);this.$('.oe_import_grid').html(QWeb.render('ImportView.preview',result));this.$('.o_import_batch_alert').toggleClass('d-none',!result.batch);var messages=[];if(result.headers.length===1){messages.push({type:'warning',message:_t("A single column was found in the file, this often means the file separator is incorrect")});}
if(!_.isEmpty(messages)){this.$('.oe_import_options').show();this.onresults(null,null,null,{'messages':messages});}
if(!_.isEqual(this.sheets,result.options.sheets)){this.sheets=result.options.sheets||[];this.setup_sheets_picker();}
this.$('div.oe_import_has_multiple_sheets').toggle(this.sheets.length>1);_.each(['encoding','separator','float_thousand_separator','float_decimal_separator','sheet'],function(id){self.$('.oe_import_'+id).select2('val',result.options[id])});this.$('.oe_import_date_format').select2('val',time.strftime_to_moment_format(result.options.date_format));this.$('.oe_import_datetime_format').val(time.strftime_to_moment_format(result.options.datetime_format));this.$('.oe_import_debug_option').toggleClass('d-none',!result.debug);var $fields=this.$('.oe_import_fields input');this.render_fields_matches(result,$fields);var data=this.generate_fields_completion(result);var item_finder=function(id,items){items=items||data;for(var i=0;i<items.length;++i){var item=items[i];if(item.id===id){return item;}
var val;if(item.children&&(val=item_finder(id,item.children))){return val;}}
return'';};$fields.each(function(k,v){var filtered_data=self.generate_fields_completion(result,k);var $thing=$();var bind=function(d){};if(config.isDebug()){$thing=$(QWeb.render('ImportView.create_record_option')).insertAfter(v).hide();bind=function(data){switch(data.type){case'many2one':case'many2many':$thing.find('input').attr('field',data.id);$thing.show();break;default:$thing.find('input').attr('field','').prop('checked',false);$thing.hide();}}}
$(v).select2({allowClear:true,minimumInputLength:0,data:filtered_data,initSelection:function(element,callback){var default_value=element.val();if(!default_value){callback('');return;}
var data=item_finder(default_value);bind(data);callback(data);},placeholder:_t('Don\'t import'),width:'resolve',dropdownCssClass:'oe_import_selector'}).on('change',function(e){bind(item_finder(e.currentTarget.value));});});},generate_fields_completion:function(root,index){var self=this;var basic=[];var regulars=[];var o2m=[];var headers_type=root.headers_type;function traverse(field,ancestors,collection,type){var subfields=field.fields;var advanced_mode=self.$('input.oe_import_advanced_mode').prop('checked');var field_path=ancestors.concat(field);var label=_(field_path).pluck('string').join(' / ');var id=_(field_path).pluck('name').join('/');if(type===undefined||(type!==undefined&&(type.indexOf('all')!==-1||type.indexOf(field['type'])!==-1))){if(!collection){if(field.name==='id'){collection=basic;}else if(_.isEmpty(subfields)||_.isEqual(_.pluck(subfields,'name'),['id','.id'])){collection=regulars;}else{collection=o2m;}}
collection.push({id:id,text:label,required:field.required,type:field.type});}
if(advanced_mode){for(var i=0,end=subfields.length;i<end;++i){traverse(subfields[i],field_path,collection,type);}}}
_(root.fields).each(function(field){if(index===undefined){traverse(field,[]);}
else{if(self.$('input.oe_import_advanced_mode').prop('checked')){traverse(field,[],undefined,['all']);}
else{traverse(field,[],undefined,headers_type[index]);}}});var cmp=function(field1,field2){return field1.text.localeCompare(field2.text);};regulars.sort(cmp);o2m.sort(cmp);if(!_.isEmpty(regulars)&&!_.isEmpty(o2m)){basic=basic.concat([{text:_t("Normal Fields"),children:regulars},{text:_t("Relation Fields"),children:o2m},]);}
else if(!_.isEmpty(regulars)){basic=basic.concat(regulars);}
else if(!_.isEmpty(o2m)){basic=basic.concat(o2m);}
return basic;},render_fields_matches:function(result,$fields){if(_(result.matches).isEmpty()){return;}
$fields.each(function(index,input){var match=result.matches[index];if(!match){return;}
var current_field=result;input.value=_(match).chain().map(function(name){return current_field=_(current_field.fields).find(function(subfield){return subfield.name===name;});}).pluck('name').value().join('/');});},call_import:function(kwargs){var fields=this.$('.oe_import_fields input.oe_import_match_field').map(function(index,el){return $(el).select2('val')||false;}).get();var columns=this.$('.oe_import_grid-header .oe_import_grid-cell .o_import_header_name').map(function(){return $(this).text().trim().toLowerCase()||false;}).get();var tracking_disable='tracking_disable'in kwargs?kwargs.tracking_disable:!this.$('#oe_import_tracking').prop('checked')
delete kwargs.tracking_disable;kwargs.context=_.extend({},this.parent_context,{tracking_disable:tracking_disable});var self=this;this.trigger_up('with_client',{callback:function(){this.loading.ignore_events=true;}});$.blockUI({message:QWeb.render('Throbber')});$(document.body).addClass('o_ui_blocked');var opts=this.import_options();var $el=$('.oe_throbber_message');var msg=kwargs.dryrun?_t("%d records tested..."):_t("%d records successfully imported...");opts.callback=function(count){$el.text(_.str.sprintf(msg,count));};return this._batchedImport(opts,[this.id,fields,columns],kwargs,{done:0,prev:0}).then(null,function(reason){var error=reason.message;var event=reason.event;if(event){event.preventDefault();}
var msg;var errordata=error.data||{};if(errordata.type==='xhrerror'){var xhr=errordata.objects[0];switch(xhr.status){case 504:msg=_t("Import timed out. Please retry. If you still encounter this issue, the file may be too big for the system's configuration, try to split it (import less records per file).");break;default:msg=_t("An unknown issue occurred during import (possibly lost connection, data limit exceeded or memory limits exceeded). Please retry in case the issue is transient. If the issue still occurs, try to split the file rather than import it at once.");}}else{msg=errordata.arguments&&(errordata.arguments[1]||errordata.arguments[0])||error.message;}
return Promise.resolve({'messages':[{type:'error',record:false,message:msg,}]});}).finally(function(){$(document.body).removeClass('o_ui_blocked');$.unblockUI();self.trigger_up('with_client',{callback:function(){delete this.loading.ignore_events;}});});},_batchedImport:function(opts,args,kwargs,rec){opts.callback&&opts.callback(rec.done||0);var self=this;return this._rpc({model:'base_import.import',method:'do',args:args.concat([opts]),kwargs:kwargs}).then(function(results){_.each(results.messages,offset_by(opts.skip));if(!kwargs.dryrun&&!results.ids){self.$('#oe_import_row_start').val(opts.skip+1);if(opts.skip){results.messages.push({type:'info',priority:true,message:_.str.sprintf(_t("This file has been successfully imported up to line %d."),opts.skip)});}
return results;}
if(!results.nextrow){return results;}
return self._batchedImport(_.defaults({skip:results.nextrow},opts),args,kwargs,{done:rec.done+(results.ids||[]).length,prev:results.nextrow}).then(function(r2){return{name:_.zip(results.name,r2.name).map(function(names){return names[0]||names[1];}),ids:(results.ids||[]).concat(r2.ids||[]),messages:results.messages.concat(r2.messages),skip:r2.skip||results.nextrow,nextrow:r2.nextrow}});});},onvalidate:function(){var prom=this.call_import({dryrun:true,tracking_disable:true});prom.then(this.proxy('validated'));return prom;},onimport:function(){var self=this;var prom=this.call_import({dryrun:false});prom.then(function(results){var message=results.messages;if(!_.any(message,function(message){return message.type==='error';})){self['import_succeeded'](results);return;}
self['import_failed'](results);});return prom;},onimported:function(event,from,to,results){this.do_notify(false,_.str.sprintf(_t("%d records successfully imported"),results.ids.length));this.exit();},exit:function(){this.trigger_up('history_back');},onresults:function(event,from,to,results){var fields=this.$('.oe_import_fields input.oe_import_match_field').map(function(index,el){return $(el).select2('val')||false;}).get();var message=results.messages;var no_messages=_.isEmpty(message);if(no_messages){message.push({type:'info',message:_t("Everything seems valid.")});}else if(event==='import_failed'&&results.ids){this.toggle_partial(results);}
var offset=1;if(this.import_options().headers){offset+=1;}
var messagesSorted=_.sortBy(_(message).groupBy('message'),function(group){if(group[0].priority){return-2;}
var order=0;switch(group[0].type){case'error':order=0;break;case'warning':order=fields.length+1;break;case'info':order=2*(fields.length+1);break;default:order=3*(fields.length+1);break;}
return order+_.indexOf(fields,group[0].field);});this.$form.addClass('oe_import_error');this.$('.oe_import_error_report').html(QWeb.render('ImportView.error',{errors:messagesSorted,at:function(rows){var from=rows.from+offset;var to=rows.to+offset;var rowName='';if(results.name.length>rows.from&&results.name[rows.from]!==''){rowName=_.str.sprintf(' (%s)',results.name[rows.from]);}
if(from===to){return _.str.sprintf(_t("at row %d%s"),from,rowName);}
return _.str.sprintf(_t("between rows %d and %d"),from,to);},at_multi:function(rows){var from=rows.from+offset;var to=rows.to+offset;var rowName='';if(results.name.length>rows.from&&results.name[rows.from]!==''){rowName=_.str.sprintf(' (%s)',results.name[rows.from]);}
if(from===to){return _.str.sprintf(_t("Row %d%s"),from,rowName);}
return _.str.sprintf(_t("Between rows %d and %d"),from,to);},at_multi_header:function(numberLines){return _.str.sprintf(_t("at %d different rows:"),numberLines);},more:function(n){return _.str.sprintf(_t("(%d more)"),n);},info:function(msg){if(typeof msg==='string'){return _.str.sprintf('<div class="oe_import_moreinfo oe_import_moreinfo_message">%s</div>',_.str.escapeHTML(msg));}
if(msg instanceof Array){return _.str.sprintf('<div class="oe_import_moreinfo oe_import_moreinfo_choices"><a href="#" class="oe_import_report_see_possible_value oe_import_see_all"><i class="fa fa-arrow-right"/> %s </a><ul class="oe_import_report_more">%s</ul></div>',_.str.escapeHTML(_t("See possible values")),_(msg).map(function(msg){return'<li>'
+_.str.escapeHTML(msg)
+'</li>';}).join(''));}
return['<div class="oe_import_moreinfo oe_import_moreinfo_action">',_.str.sprintf('<a href="#" data-action="%s" class="oe_import_see_all"><i class="fa fa-arrow-right"/> ',_.str.escapeHTML(JSON.stringify(msg))),_.str.escapeHTML(_t("See possible values")),'</a>','</div>'].join('');},}));},toggle_partial:function(result){var $form=this.$('.oe_import');var $partial_warning=this.$('.o_import_partial_alert');var $partial_count=this.$('.o_import_partial_count');if(result==null){$partial_warning.addClass('d-none');$form.add(this.$buttons).removeClass('o_import_partial_mode');var $skip=this.$('#oe_import_row_start');$skip.val($skip.attr('value'));$partial_count.text('');return;}
this.$('.o_import_batch_alert').addClass('d-none');$partial_warning.removeClass('d-none');$form.add(this.$buttons).addClass('o_import_partial_mode');$partial_count.text((result.skip||0)+1);}});core.action_registry.add('import',DataImport);StateMachine.create({target:DataImport.prototype,events:[{name:'loaded_file',from:['none','file_loaded','preview_error','preview_success','results'],to:'file_loaded'},{name:'settings_changed',from:['file_loaded','preview_error','preview_success','results'],to:'previewing'},{name:'preview_failed',from:'previewing',to:'preview_error'},{name:'preview_succeeded',from:'previewing',to:'preview_success'},{name:'validate',from:'preview_success',to:'validating'},{name:'validate',from:'results',to:'validating'},{name:'validated',from:'validating',to:'results'},{name:'import',from:['preview_success','results'],to:'importing'},{name:'import_succeeded',from:'importing',to:'imported'},{name:'import_failed',from:'importing',to:'results'}],});Loading.include({on_rpc_event:function(){if(this.ignore_events){return}
this._super.apply(this,arguments);}});AbstractWebClient.prototype.custom_events['with_client']=function(ev){ev.data.callback.call(this);};function offset_by(by){return function offset_message(msg){if(msg.rows){msg.rows.from+=by;msg.rows.to+=by;}}}
return{DataImport:DataImport,};});;

/* /base_import/static/src/js/import_menu.js defined in bundle 'web.assets_backend' */
odoo.define('base_import.ImportMenu',function(require){"use strict";const DropdownMenuItem=require('web.DropdownMenuItem');const FavoriteMenu=require('web.FavoriteMenu');const{useModel}=require('web/static/src/js/model.js');class ImportMenu extends DropdownMenuItem{constructor(){super(...arguments);this.model=useModel('searchModel');}
_onImportClick(){const action={type:'ir.actions.client',tag:'import',params:{model:this.model.config.modelName,context:this.model.config.context,}};this.trigger('do-action',{action:action});}
static shouldBeDisplayed(env){return env.view&&['kanban','list'].includes(env.view.type)&&!env.device.isMobile&&!!JSON.parse(env.view.arch.attrs.import||'1')&&!!JSON.parse(env.view.arch.attrs.create||'1');}}
ImportMenu.props={};ImportMenu.template='base_import.ImportMenu';FavoriteMenu.registry.add('import-menu',ImportMenu,1);return ImportMenu;});;

/* /odoo_referral/static/src/js/systray.js defined in bundle 'web.assets_backend' */
odoo.define('systray.systray_odoo_referral',function(require){"use strict";var core=require('web.core');var localStorage=require('web.local_storage');var SystrayMenu=require('web.SystrayMenu');var Widget=require('web.Widget');var _t=core._t;var ActionMenu=Widget.extend({template:'systray_odoo_referral.gift_icon',events:{'click .gift_icon':'onclick_gifticon',},start:function(parent){var self=this;var lastFetch=localStorage.getItem('odoo_referral.updates_last_fetch');var updatesCount=localStorage.getItem('odoo_referral.updates_count');var hasClicked=localStorage.getItem('odoo_referral.has_clicked');if(hasClicked&&(!lastFetch||Date(parseInt(lastFetch))<Date(new Date().getTime()-(24*60*60*1000)))){this._rpc({model:'res.users',method:'get_referral_updates_count_for_current_user'},{shadow:true,}).then(function(count){localStorage.setItem('odoo_referral.updates_last_fetch',Date.now());localStorage.setItem('odoo_referral.updates_count',count);if(count>0){self.$('.o_notification_counter').text(count);}});}else{if(updatesCount&&updatesCount>0){self.$('.o_notification_counter').text(updatesCount);}}
return this._super.apply(this,arguments);},onclick_gifticon:function(){var self=this;localStorage.setItem('odoo_referral.updates_count',0);this._rpc({route:'/odoo_referral/go/'}).then(function(result){localStorage.setItem('odoo_referral.has_clicked',1);self.$('.o_notification_counter').text('');var w=window.open(result.link,'_blank','noreferrer noopener');if(!w||w.closed||typeof w.closed==='undefined'){var message=_t('A popup window has been blocked. You '+'may need to change your browser settings to allow '+'popup windows for this page.');self.do_warn(false,message,true);}});},});SystrayMenu.Items.push(ActionMenu);return ActionMenu;});;

/* /web_editor/static/src/js/frontend/loader.js defined in bundle 'web.assets_backend' */
odoo.define('web_editor.loader',function(require){'use strict';var Wysiwyg=require('web_editor.wysiwyg.root');function load(parent,textarea,options){var loading=textarea.nextElementSibling;if(loading&&!loading.classList.contains('o_wysiwyg_loading')){loading=null;}
if(!textarea.value.match(/\S/)){textarea.value='<p><br/></p>';}
var wysiwyg=new Wysiwyg(parent,options);return wysiwyg.attachTo(textarea).then(()=>{if(loading){loading.parentNode.removeChild(loading);}
return wysiwyg;});}
return{load:load,};});;

/* /web_editor/static/src/js/backend/field_html.js defined in bundle 'web.assets_backend' */
odoo.define('web_editor.field.html',function(require){'use strict';var ajax=require('web.ajax');var basic_fields=require('web.basic_fields');var config=require('web.config');var core=require('web.core');var Wysiwyg=require('web_editor.wysiwyg.root');var field_registry=require('web.field_registry');require('web._field_registry');var _lt=core._lt;var TranslatableFieldMixin=basic_fields.TranslatableFieldMixin;var QWeb=core.qweb;var assetsLoaded;var jinjaRegex=/(^|\n)\s*%\s(end|set\s)/;var FieldHtml=basic_fields.DebouncedField.extend(TranslatableFieldMixin,{description:_lt("Html"),className:'oe_form_field oe_form_field_html',supportedFieldTypes:['html'],custom_events:{wysiwyg_focus:'_onWysiwygFocus',wysiwyg_blur:'_onWysiwygBlur',wysiwyg_change:'_onChange',wysiwyg_attachment:'_onAttachmentChange',},willStart:function(){var self=this;this.isRendered=false;this._onUpdateIframeId='onLoad_'+_.uniqueId('FieldHtml');var defAsset;if(this.nodeOptions.cssReadonly){defAsset=ajax.loadAsset(this.nodeOptions.cssReadonly);}
if(!assetsLoaded){assetsLoaded=new Promise(function(resolve){var wysiwyg=new Wysiwyg(self,{});wysiwyg.attachTo($('<textarea>')).then(function(){wysiwyg.destroy();resolve();});});}
return Promise.all([this._super(),assetsLoaded,defAsset]);},destroy:function(){delete window.top[this._onUpdateIframeId];if(this.$iframe){this.$iframe.remove();}
this._super();},activate:function(options){if(this.wysiwyg){this.wysiwyg.focus();return true;}},commitChanges:function(){var self=this;if(config.isDebug()&&this.mode==='edit'){var layoutInfo=$.summernote.core.dom.makeLayoutInfo(this.wysiwyg.$editor);$.summernote.pluginEvents.codeview(undefined,undefined,layoutInfo,false);}
if(this.mode=="readonly"||!this.isRendered){return this._super();}
var _super=this._super.bind(this);return this.wysiwyg.saveModifiedImages(this.$content).then(function(){return self.wysiwyg.save().then(function(result){self._isDirty=result.isDirty;_super();});});},isSet:function(){var value=this.value&&this.value.split('&nbsp;').join('').replace(/\s/g,'');return value&&value!=="<p></p>"&&value!=="<p><br></p>"&&value.match(/\S/);},getFocusableElement:function(){return this.$target||$();},reset:function(record,event){this._reset(record,event);var value=this.value;if(this.nodeOptions.wrapper){value=this._wrap(value);}
value=this._textToHtml(value);if(!event||event.target!==this){if(this.mode==='edit'){this.wysiwyg.setValue(value);}else{this.$content.html(value);}}
return Promise.resolve();},_getValue:function(){var value=this.$target.val();if(this.nodeOptions.wrapper){return this._unWrap(value);}
return value;},_createWysiwygIntance:function(){var self=this;this.wysiwyg=new Wysiwyg(this,this._getWysiwygOptions());return this.wysiwyg.attachTo(this.$target).then(function(){self.$content=self.wysiwyg.$editor.closest('body, odoo-wysiwyg-container');self._onLoadWysiwyg();self.isRendered=true;});},_getWysiwygOptions:function(){var self=this;return Object.assign({},this.nodeOptions,{recordInfo:{context:this.record.getContext(this.recordParams),res_model:this.model,res_id:this.res_id,},noAttachment:this.nodeOptions['no-attachment'],inIframe:!!this.nodeOptions.cssEdit,iframeCssAssets:this.nodeOptions.cssEdit,snippets:this.nodeOptions.snippets,tabsize:0,height:180,generateOptions:function(options){var toolbar=options.toolbar||options.airPopover||{};var para=_.find(toolbar,function(item){return item[0]==='para';});if(para&&para[1]&&para[1].indexOf('checklist')===-1){para[1].splice(2,0,'checklist');}
if(config.isDebug()){options.codeview=true;var view=_.find(toolbar,function(item){return item[0]==='view';});if(view){if(!view[1].includes('codeview')){view[1].splice(-1,0,'codeview');}}else{toolbar.splice(-1,0,['view',['codeview']]);}}
if("mailing.mailing"===self.model){options.noVideos=true;}
options.prettifyHtml=false;return options;},});},_onAttachmentChange:function(attachments){if(!this.fieldNameAttachment){return;}
this.trigger_up('field_changed',{dataPointID:this.dataPointID,changes:_.object([this.fieldNameAttachment],[{operation:'ADD_M2M',ids:attachments}])});},_renderEdit:function(){var value=this._textToHtml(this.value);if(this.nodeOptions.wrapper){value=this._wrap(value);}
this.$target=$('<textarea>').val(value).hide();this.$target.appendTo(this.$el);var fieldNameAttachment=_.chain(this.recordData).pairs().find(function(value){return _.isObject(value[1])&&value[1].model==="ir.attachment";}).first().value();if(fieldNameAttachment){this.fieldNameAttachment=fieldNameAttachment;}
if(this.nodeOptions.cssEdit){this._createWysiwygIntance();}else{return this._createWysiwygIntance();}},_renderReadonly:function(){var self=this;var value=this._textToHtml(this.value);if(this.nodeOptions.wrapper){value=this._wrap(value);}
this.$el.empty();var resolver;var def=new Promise(function(resolve){resolver=resolve;});if(this.nodeOptions.cssReadonly){this.$iframe=$('<iframe class="o_readonly"/>');this.$iframe.appendTo(this.$el);var avoidDoubleLoad=0;this.$iframe.data('loadDef',def);window.top[this._onUpdateIframeId]=function(_avoidDoubleLoad){if(_avoidDoubleLoad!==avoidDoubleLoad){console.warn('Wysiwyg iframe double load detected');return;}
self.$content=$('#iframe_target',self.$iframe[0].contentWindow.document.body);resolver();};this.$iframe.on('load',function onLoad(){var _avoidDoubleLoad=++avoidDoubleLoad;ajax.loadAsset(self.nodeOptions.cssReadonly).then(function(asset){if(_avoidDoubleLoad!==avoidDoubleLoad){console.warn('Wysiwyg immediate iframe double load detected');return;}
var cwindow=self.$iframe[0].contentWindow;cwindow.document.open("text/html","replace").write('<head>'+'<meta charset="utf-8"/>'+'<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>\n'+'<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>\n'+
_.map(asset.cssLibs,function(cssLib){return'<link type="text/css" rel="stylesheet" href="'+cssLib+'"/>';}).join('\n')+'\n'+
_.map(asset.cssContents,function(cssContent){return'<style type="text/css">'+cssContent+'</style>';}).join('\n')+'\n'+'</head>\n'+'<body class="o_in_iframe o_readonly">\n'+'<div id="iframe_target">'+value+'</div>\n'+'<script type="text/javascript">'+'if (window.top.'+self._onUpdateIframeId+') {'+'window.top.'+self._onUpdateIframeId+'('+_avoidDoubleLoad+')'+'}'+'</script>\n'+'</body>');var height=cwindow.document.body.scrollHeight;self.$iframe.css('height',Math.max(30,Math.min(height,500))+'px');});});}else{this.$content=$('<div class="o_readonly"/>').html(value);this.$content.appendTo(this.$el);resolver();}
def.then(function(){self.$content.on('click','ul.o_checklist > li',self._onReadonlyClickChecklist.bind(self));});},_textToHtml:function(text){var value=text||"";if(jinjaRegex.test(value)){return value;}
try{$(text)[0].innerHTML;}catch(e){if(value.match(/^\s*$/)){value='<p><br/></p>';}else{value="<p>"+value.split(/<br\/?>/).join("<br/></p><p>")+"</p>";value=value.replace(/<p><\/p>/g,'').replace('<p><p>','<p>').replace('<p><p ','<p ').replace('</p></p>','</p>');}}
return value;},_unWrap:function(html){var $wrapper=$(html).find('#wrapper');return $wrapper.length?$wrapper.html():html;},_wrap:function(html){return $(QWeb.render(this.nodeOptions.wrapper)).find('#wrapper').html(html).end().prop('outerHTML');},_onChange:function(ev){this._doDebouncedAction.apply(this,arguments);var $lis=this.$content.find('.note-editable ul.o_checklist > li:not(:has(> ul.o_checklist))');if(!$lis.length){return;}
var max=0;var ids=[];$lis.map(function(){var checklistId=parseInt(($(this).attr('id')||'0').replace(/^checklist-id-/,''));if(ids.indexOf(checklistId)===-1){if(checklistId>max){max=checklistId;}
ids.push(checklistId);}else{$(this).removeAttr('id');}});$lis.not('[id]').each(function(){$(this).attr('id','checklist-id-'+(++max));});},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ENTER&&$(ev.target).is('textarea')){ev.stopPropagation();return;}
this._super.apply(this,arguments);},_onReadonlyClickChecklist:function(ev){var self=this;if(ev.offsetX>0){return;}
ev.stopPropagation();ev.preventDefault();var checked=$(ev.target).hasClass('o_checked');var checklistId=parseInt(($(ev.target).attr('id')||'0').replace(/^checklist-id-/,''));this._rpc({route:'/web_editor/checklist',params:{res_model:this.model,res_id:this.res_id,filename:this.name,checklistId:checklistId,checked:!checked,},}).then(function(value){self._setValue(value);});},_onLoadWysiwyg:function(){var $button=this._renderTranslateButton();$button.css({'font-size':'15px',position:'absolute',right:'+5px',top:'+5px',});this.$el.append($button);},_onWysiwygBlur:function(ev){ev.stopPropagation();this._doAction();if(ev.data.key==='TAB'){this.trigger_up('navigation_move',{direction:ev.data.shiftKey?'left':'right',});}},_onWysiwygFocus:function(ev){},});field_registry.add('html',FieldHtml);return FieldHtml;});;

/* /web_editor/static/src/js/backend/convert_inline.js defined in bundle 'web.assets_backend' */
odoo.define('web_editor.convertInline',function(require){'use strict';var FieldHtml=require('web_editor.field.html');function getMatchedCSSRules(a){var i,r,k;var doc=a.ownerDocument;var rulesCache=a.ownerDocument._rulesCache||(a.ownerDocument._rulesCache=[]);if(!rulesCache.length){var sheets=doc.styleSheets;for(i=sheets.length-1;i>=0;i--){var rules;try{rules=sheets[i].rules||sheets[i].cssRules;}catch(e){console.warn("Can't read the css rules of: "+sheets[i].href,e);continue;}
if(rules){for(r=rules.length-1;r>=0;r--){var selectorText=rules[r].selectorText;if(selectorText&&rules[r].cssText&&selectorText!=='*'&&selectorText.indexOf(':hover')===-1&&selectorText.indexOf(':before')===-1&&selectorText.indexOf(':after')===-1&&selectorText.indexOf(':active')===-1&&selectorText.indexOf(':link')===-1&&selectorText.indexOf('::')===-1&&selectorText.indexOf("'")===-1){var st=selectorText.split(/\s*,\s*/);for(k=0;k<st.length;k++){rulesCache.push({'selector':st[k],'style':rules[r].style});}}}}}
rulesCache.reverse();}
var css=[];var style;a.matches=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.msMatchesSelector||a.oMatchesSelector;for(r=0;r<rulesCache.length;r++){if(a.matches(rulesCache[r].selector)){style=rulesCache[r].style;if(style.parentRule){var style_obj={};var len;for(k=0,len=style.length;k<len;k++){if(style[k].indexOf('animation')!==-1){continue;}
style_obj[style[k]]=style[style[k].replace(/-(.)/g,function(a,b){return b.toUpperCase();})];if(new RegExp(style[k]+'\s*:[^:;]+!important').test(style.cssText)){style_obj[style[k]]+=' !important';}}
rulesCache[r].style=style=style_obj;}
css.push([rulesCache[r].selector,style]);}}
function specificity(selector){var a=0;selector=selector.replace(/#[a-z0-9_-]+/gi,function(){a++;return'';});var b=0;selector=selector.replace(/(\.[a-z0-9_-]+)|(\[.*?\])/gi,function(){b++;return'';});var c=0;selector=selector.replace(/(^|\s+|:+)[a-z0-9_-]+/gi,function(a){if(a.indexOf(':not(')===-1)c++;return'';});return a*100+b*10+c;}
css.sort(function(a,b){return specificity(a[0])-specificity(b[0]);});style={};_.each(css,function(v,k){_.each(v[1],function(v,k){if(v&&_.isString(v)&&k.indexOf('-webkit')===-1&&(!style[k]||style[k].indexOf('important')===-1||v.indexOf('important')!==-1)){style[k]=v;}});});_.each(style,function(v,k){if(v.indexOf('important')!==-1){style[k]=v.slice(0,v.length-11);}});if(style.display==='block'){delete style.display;}
_.each([{property:'margin'},{property:'padding'},{property:'border',propertyEnd:'-style',defaultValue:'none'},],function(propertyInfo){var p=propertyInfo.property;var e=propertyInfo.propertyEnd||'';var defVal=propertyInfo.defaultValue||0;if(style[p+'-top'+e]||style[p+'-right'+e]||style[p+'-bottom'+e]||style[p+'-left'+e]){if(style[p+'-top'+e]===style[p+'-right'+e]&&style[p+'-top'+e]===style[p+'-bottom'+e]&&style[p+'-top'+e]===style[p+'-left'+e]){style[p+e]=style[p+'-top'+e];}
else{style[p+e]=(style[p+'-top'+e]||defVal)+' '+(style[p+'-right'+e]||defVal)+' '+(style[p+'-bottom'+e]||defVal)+' '+(style[p+'-left'+e]||defVal);if(style[p+e].indexOf('inherit')!==-1||style[p+e].indexOf('initial')!==-1){delete style[p+e];return;}}
delete style[p+'-top'+e];delete style[p+'-right'+e];delete style[p+'-bottom'+e];delete style[p+'-left'+e];}});if(style['border-bottom-left-radius']){style['border-radius']=style['border-bottom-left-radius'];delete style['border-bottom-left-radius'];delete style['border-bottom-right-radius'];delete style['border-top-left-radius'];delete style['border-top-right-radius'];}
_.each(_.keys(style),function(k){if(k.indexOf('border')!==-1&&style[k]==='initial'){delete style[k];}});if(style['text-decoration-line']){style['text-decoration']=style['text-decoration-line'];delete style['text-decoration-line'];delete style['text-decoration-color'];delete style['text-decoration-style'];}
if(style['text-align']==='inherit'){var $el=$(a).parent();do{var align=$el.css('text-align');if(_.indexOf(['left','right','center','justify'],align)>=0){style['text-align']=align;break;}
$el=$el.parent();}while($el.length&&!$el.is('html'));}
return style;}
function fontToImg($editable){var fonts=odoo.__DEBUG__.services["wysiwyg.fonts"];$editable.find('.fa').each(function(){var $font=$(this);var icon,content;_.find(fonts.fontIcons,function(font){return _.find(fonts.getCssSelectors(font.parser),function(data){if($font.is(data.selector.replace(/::?before/g,''))){icon=data.names[0].split('-').shift();content=data.css.match(/content:\s*['"]?(.)['"]?/)[1];return true;}});});if(content){var color=$font.css('color').replace(/\s/g,'');$font.replaceWith($('<img/>',{src:_.str.sprintf('/web_editor/font_to_img/%s/%s/%s',content.charCodeAt(0),window.encodeURI(color),Math.max(1,Math.round($font.height()))),'data-class':$font.attr('class'),'data-style':$font.attr('style'),class:$font.attr('class').replace(new RegExp('(^|\\s+)'+icon+'(-[^\\s]+)?','gi'),''),style:$font.attr('style'),}).css({height:'auto',width:'auto'}));}else{$font.remove();}});}
function imgToFont($editable){$editable.find('img[src*="/web_editor/font_to_img/"]').each(function(){var $img=$(this);$img.replaceWith($('<span/>',{class:$img.data('class'),style:$img.data('style')}));});}
function applyOverDescendants(node,func){node=node.firstChild;while(node){if(node.nodeType===1){func(node);applyOverDescendants(node,func);}
var $node=$(node);if(node.nodeName==='A'&&$node.hasClass('btn')&&!$node.children().length&&$(node).parents('.o_outlook_hack').length){node=$(node).parents('.o_outlook_hack')[0];}
else if(node.nodeName==='IMG'&&$node.parent('p').hasClass('o_outlook_hack')){node=$node.parent()[0];}
node=node.nextSibling;}}
function classToStyle($editable){applyOverDescendants($editable[0],function(node){var $target=$(node);var css=getMatchedCSSRules(node);var style=$target.attr('style')||'';_.each(css,function(v,k){if(!(new RegExp('(^|;)\s*'+k).test(style))){style=k+':'+v+';'+style;}});if(_.isEmpty(style)){$target.removeAttr('style');}else{$target.attr('style',style);}
if(node.nodeName==='TD'&&!node.childNodes.length){node.innerHTML='&nbsp;';}
if(node.nodeName==='A'&&$target.hasClass('btn')&&!$target.hasClass('btn-link')&&!$target.children().length){var $hack=$('<table class="o_outlook_hack" style="display: inline-table;vertical-align:middle"><tr><td></td></tr></table>');$hack.find('td').attr('height',$target.outerHeight()).css({'text-align':$target.parent().css('text-align'),'margin':$target.css('padding'),'border-radius':$target.css('border-radius'),'background-color':$target.css('background-color'),});$target.after($hack);$target.appendTo($hack.find('td'));node=$hack[0].previousSibling;if(node&&node.nodeType===Node.TEXT_NODE&&!node.textContent.match(/\S/)){$(node).remove();}
node=$hack[0].nextSibling;if(node&&node.nodeType===Node.TEXT_NODE&&!node.textContent.match(/\S/)){$(node).remove();}}
else if(node.nodeName==='IMG'&&$target.is('.mx-auto.d-block')){$target.wrap('<p class="o_outlook_hack" style="text-align:center;margin:0"/>');}});}
function styleToClass($editable){$editable.find('.o_outlook_hack').each(function(){$(this).after($('a,img',this));}).remove();var $c=$('<span/>').appendTo($editable[0].ownerDocument.body);applyOverDescendants($editable[0],function(node){var $target=$(node);var css=getMatchedCSSRules(node);var style='';_.each(css,function(v,k){if(!(new RegExp('(^|;)\s*'+k).test(style))){style=k+':'+v+';'+style;}});css=($c.attr('style',style).attr('style')||'').split(/\s*;\s*/);style=($target.attr('style')||'').replace(/\s*:\s*/,':').replace(/\s*;\s*/,';');_.each(css,function(v){style=style.replace(v,'');});style=style.replace(/;+(\s;)*/g,';').replace(/^;/g,'');if(style!==''){$target.attr('style',style);}else{$target.removeAttr('style');}});$c.remove();}
function attachmentThumbnailToLinkImg($editable){$editable.find('a[href*="/web/content/"][data-mimetype]').filter(':empty, :containsExact( )').each(function(){var $link=$(this);var $img=$('<img/>').attr('src',$link.css('background-image').replace(/(^url\(['"])|(['"]\)$)/g,'')).css('height',Math.max(1,$link.height())+'px').css('width',Math.max(1,$link.width())+'px');$link.prepend($img);});}
function linkImgToAttachmentThumbnail($editable){$editable.find('a[href*="/web/content/"][data-mimetype] > img').remove();}
FieldHtml.include({commitChanges:function(){if(this.nodeOptions['style-inline']&&this.mode==="edit"){this._toInline();}
return this._super();},_toInline:function(){var $editable=this.wysiwyg.getEditable();var html=this.wysiwyg.getValue();$editable.html(html);attachmentThumbnailToLinkImg($editable);fontToImg($editable);classToStyle($editable);this.wysiwyg.setValue($editable.html(),{notifyChange:false,});},_fromInline:function(){var $editable=this.wysiwyg.getEditable();var html=this.wysiwyg.getValue();$editable.html(html);styleToClass($editable);imgToFont($editable);linkImgToAttachmentThumbnail($editable);this.wysiwyg.setValue($editable.html(),{notifyChange:false,});},_onLoadWysiwyg:function(){if(this.nodeOptions['style-inline']&&this.mode==="edit"){this._fromInline();}
this._super();},});return{fontToImg:fontToImg,imgToFont:imgToFont,classToStyle:classToStyle,styleToClass:styleToClass,attachmentThumbnailToLinkImg:attachmentThumbnailToLinkImg,linkImgToAttachmentThumbnail:linkImgToAttachmentThumbnail,};});;

/* /web_kanban_gauge/static/src/js/kanban_gauge.js defined in bundle 'web.assets_backend' */
odoo.define('web_kanban_gauge.widget',function(require){"use strict";var AbstractField=require('web.AbstractField');var core=require('web.core');var field_registry=require('web.field_registry');var utils=require('web.utils');var _t=core._t;var GaugeWidget=AbstractField.extend({className:"oe_gauge",jsLibs:['/web/static/lib/Chart/Chart.js',],_render:function(){var val=this.value;if(_.isArray(JSON.parse(val))){val=JSON.parse(val);}
var gauge_value=_.isArray(val)&&val.length?val[val.length-1].value:val;if(this.nodeOptions.gauge_value_field){gauge_value=this.recordData[this.nodeOptions.gauge_value_field];}
var max_value=this.nodeOptions.max_value||100;if(this.nodeOptions.max_field){max_value=this.recordData[this.nodeOptions.max_field];}
max_value=Math.max(gauge_value,max_value);var label=this.nodeOptions.label||"";if(this.nodeOptions.label_field){label=this.recordData[this.nodeOptions.label_field];}
var title=this.nodeOptions.title||this.field.string;var maxLabel=max_value;if(gauge_value===0&&max_value===0){max_value=1;maxLabel=0;}
var config={type:'doughnut',data:{datasets:[{data:[gauge_value,max_value-gauge_value],backgroundColor:["#1f77b4","#dddddd"],label:title}],},options:{circumference:Math.PI,rotation:-Math.PI,responsive:true,tooltips:{displayColors:false,callbacks:{label:function(tooltipItems){if(tooltipItems.index===0){return _t('Value: ')+gauge_value;}
return _t('Max: ')+maxLabel;},},},title:{display:true,text:title,padding:4,},layout:{padding:{bottom:5}},maintainAspectRatio:false,cutoutPercentage:70,}};this.$canvas=$('<canvas/>');this.$el.empty();this.$el.append(this.$canvas);this.$el.attr('style',this.nodeOptions.style);this.$el.css({position:'relative'});var context=this.$canvas[0].getContext('2d');this.chart=new Chart(context,config);var humanValue=utils.human_number(gauge_value,1);var $value=$('<span class="o_gauge_value">').text(humanValue);$value.css({'text-align':'center',position:'absolute',left:0,right:0,bottom:'6px','font-weight':'bold'});this.$el.append($value);},});field_registry.add("gauge",GaugeWidget);return GaugeWidget;});;

/* /web_tour/static/src/js/debug_manager.js defined in bundle 'web.assets_backend' */
odoo.define('web_tour.DebugManager.Backend',function(require){"use strict";var core=require("web.core");var DebugManager=require('web.DebugManager.Backend');var Dialog=require("web.Dialog");var local_storage=require('web.local_storage');var tour=require('web_tour.tour');var utils=require('web_tour.utils');var get_debugging_key=utils.get_debugging_key;function get_active_tours(){return _.difference(_.keys(tour.tours),tour.consumed_tours);}
DebugManager.include({start:function(){this.consume_tours_enabled=get_active_tours().length>0;return this._super.apply(this,arguments);},consume_tours:function(){var active_tours=get_active_tours();if(active_tours.length>0){this._rpc({model:'web_tour.tour',method:'consume',args:[active_tours],}).then(function(){for(const tourName of active_tours){local_storage.removeItem(get_debugging_key(tourName));}
window.location.reload();});}},start_tour:async function(){const tours=Object.values(tour.tours).sort((t1,t2)=>{return(t1.sequence-t2.sequence)||(t1.name<t2.name?-1:1);});const dialog=new Dialog(this,{title:'Tours',$content:core.qweb.render('web_tour.ToursDialog',{onboardingTours:tours.filter(t=>!t.test),testingTours:tours.filter(t=>t.test),}),});await dialog.open().opened();dialog.$('.o_start_tour').on('click',this._onStartTour.bind(this));dialog.$('.o_test_tour').on('click',this._onTestTour.bind(this));},_onStartTour(ev){ev.preventDefault();tour.reset($(ev.target).data('name'));},_onTestTour(ev){ev.preventDefault();tour.run($(ev.target).data('name'));},});});